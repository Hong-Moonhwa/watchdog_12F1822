

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Nov 10 13:41:33 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	12F1822
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC12F1822 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0000                     	;# 
    71     0001                     	;# 
    72     0002                     	;# 
    73     0003                     	;# 
    74     0004                     	;# 
    75     0005                     	;# 
    76     0006                     	;# 
    77     0007                     	;# 
    78     0008                     	;# 
    79     0009                     	;# 
    80     000A                     	;# 
    81     000B                     	;# 
    82     000C                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     008C                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     010C                     	;# 
   111     0111                     	;# 
   112     0112                     	;# 
   113     0115                     	;# 
   114     0116                     	;# 
   115     0117                     	;# 
   116     0118                     	;# 
   117     0119                     	;# 
   118     011A                     	;# 
   119     011B                     	;# 
   120     011D                     	;# 
   121     011D                     	;# 
   122     018C                     	;# 
   123     0191                     	;# 
   124     0191                     	;# 
   125     0192                     	;# 
   126     0193                     	;# 
   127     0193                     	;# 
   128     0193                     	;# 
   129     0194                     	;# 
   130     0195                     	;# 
   131     0196                     	;# 
   132     0199                     	;# 
   133     019A                     	;# 
   134     019B                     	;# 
   135     019B                     	;# 
   136     019B                     	;# 
   137     019B                     	;# 
   138     019C                     	;# 
   139     019C                     	;# 
   140     019D                     	;# 
   141     019E                     	;# 
   142     019F                     	;# 
   143     020C                     	;# 
   144     0211                     	;# 
   145     0211                     	;# 
   146     0212                     	;# 
   147     0212                     	;# 
   148     0213                     	;# 
   149     0213                     	;# 
   150     0214                     	;# 
   151     0214                     	;# 
   152     0215                     	;# 
   153     0215                     	;# 
   154     0215                     	;# 
   155     0216                     	;# 
   156     0216                     	;# 
   157     0217                     	;# 
   158     0217                     	;# 
   159     0291                     	;# 
   160     0291                     	;# 
   161     0292                     	;# 
   162     0293                     	;# 
   163     0294                     	;# 
   164     0295                     	;# 
   165     0295                     	;# 
   166     0296                     	;# 
   167     0391                     	;# 
   168     0392                     	;# 
   169     0393                     	;# 
   170     039A                     	;# 
   171     039C                     	;# 
   172     039D                     	;# 
   173     039E                     	;# 
   174     039F                     	;# 
   175     0FE4                     	;# 
   176     0FE5                     	;# 
   177     0FE6                     	;# 
   178     0FE7                     	;# 
   179     0FE8                     	;# 
   180     0FE9                     	;# 
   181     0FEA                     	;# 
   182     0FEB                     	;# 
   183     0FED                     	;# 
   184     0FEE                     	;# 
   185     0FEF                     	;# 
   186     0000                     	;# 
   187     0001                     	;# 
   188     0002                     	;# 
   189     0003                     	;# 
   190     0004                     	;# 
   191     0005                     	;# 
   192     0006                     	;# 
   193     0007                     	;# 
   194     0008                     	;# 
   195     0009                     	;# 
   196     000A                     	;# 
   197     000B                     	;# 
   198     000C                     	;# 
   199     0011                     	;# 
   200     0012                     	;# 
   201     0015                     	;# 
   202     0016                     	;# 
   203     0016                     	;# 
   204     0017                     	;# 
   205     0018                     	;# 
   206     0019                     	;# 
   207     001A                     	;# 
   208     001B                     	;# 
   209     001C                     	;# 
   210     001E                     	;# 
   211     001F                     	;# 
   212     008C                     	;# 
   213     0091                     	;# 
   214     0092                     	;# 
   215     0095                     	;# 
   216     0096                     	;# 
   217     0097                     	;# 
   218     0098                     	;# 
   219     0099                     	;# 
   220     009A                     	;# 
   221     009B                     	;# 
   222     009B                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     010C                     	;# 
   227     0111                     	;# 
   228     0112                     	;# 
   229     0115                     	;# 
   230     0116                     	;# 
   231     0117                     	;# 
   232     0118                     	;# 
   233     0119                     	;# 
   234     011A                     	;# 
   235     011B                     	;# 
   236     011D                     	;# 
   237     011D                     	;# 
   238     018C                     	;# 
   239     0191                     	;# 
   240     0191                     	;# 
   241     0192                     	;# 
   242     0193                     	;# 
   243     0193                     	;# 
   244     0193                     	;# 
   245     0194                     	;# 
   246     0195                     	;# 
   247     0196                     	;# 
   248     0199                     	;# 
   249     019A                     	;# 
   250     019B                     	;# 
   251     019B                     	;# 
   252     019B                     	;# 
   253     019B                     	;# 
   254     019C                     	;# 
   255     019C                     	;# 
   256     019D                     	;# 
   257     019E                     	;# 
   258     019F                     	;# 
   259     020C                     	;# 
   260     0211                     	;# 
   261     0211                     	;# 
   262     0212                     	;# 
   263     0212                     	;# 
   264     0213                     	;# 
   265     0213                     	;# 
   266     0214                     	;# 
   267     0214                     	;# 
   268     0215                     	;# 
   269     0215                     	;# 
   270     0215                     	;# 
   271     0216                     	;# 
   272     0216                     	;# 
   273     0217                     	;# 
   274     0217                     	;# 
   275     0291                     	;# 
   276     0291                     	;# 
   277     0292                     	;# 
   278     0293                     	;# 
   279     0294                     	;# 
   280     0295                     	;# 
   281     0295                     	;# 
   282     0296                     	;# 
   283     0391                     	;# 
   284     0392                     	;# 
   285     0393                     	;# 
   286     039A                     	;# 
   287     039C                     	;# 
   288     039D                     	;# 
   289     039E                     	;# 
   290     039F                     	;# 
   291     0FE4                     	;# 
   292     0FE5                     	;# 
   293     0FE6                     	;# 
   294     0FE7                     	;# 
   295     0FE8                     	;# 
   296     0FE9                     	;# 
   297     0FEA                     	;# 
   298     0FEB                     	;# 
   299     0FED                     	;# 
   300     0FEE                     	;# 
   301     0FEF                     	;# 
   302     0000                     	;# 
   303     0001                     	;# 
   304     0002                     	;# 
   305     0003                     	;# 
   306     0004                     	;# 
   307     0005                     	;# 
   308     0006                     	;# 
   309     0007                     	;# 
   310     0008                     	;# 
   311     0009                     	;# 
   312     000A                     	;# 
   313     000B                     	;# 
   314     000C                     	;# 
   315     0011                     	;# 
   316     0012                     	;# 
   317     0015                     	;# 
   318     0016                     	;# 
   319     0016                     	;# 
   320     0017                     	;# 
   321     0018                     	;# 
   322     0019                     	;# 
   323     001A                     	;# 
   324     001B                     	;# 
   325     001C                     	;# 
   326     001E                     	;# 
   327     001F                     	;# 
   328     008C                     	;# 
   329     0091                     	;# 
   330     0092                     	;# 
   331     0095                     	;# 
   332     0096                     	;# 
   333     0097                     	;# 
   334     0098                     	;# 
   335     0099                     	;# 
   336     009A                     	;# 
   337     009B                     	;# 
   338     009B                     	;# 
   339     009C                     	;# 
   340     009D                     	;# 
   341     009E                     	;# 
   342     010C                     	;# 
   343     0111                     	;# 
   344     0112                     	;# 
   345     0115                     	;# 
   346     0116                     	;# 
   347     0117                     	;# 
   348     0118                     	;# 
   349     0119                     	;# 
   350     011A                     	;# 
   351     011B                     	;# 
   352     011D                     	;# 
   353     011D                     	;# 
   354     018C                     	;# 
   355     0191                     	;# 
   356     0191                     	;# 
   357     0192                     	;# 
   358     0193                     	;# 
   359     0193                     	;# 
   360     0193                     	;# 
   361     0194                     	;# 
   362     0195                     	;# 
   363     0196                     	;# 
   364     0199                     	;# 
   365     019A                     	;# 
   366     019B                     	;# 
   367     019B                     	;# 
   368     019B                     	;# 
   369     019B                     	;# 
   370     019C                     	;# 
   371     019C                     	;# 
   372     019D                     	;# 
   373     019E                     	;# 
   374     019F                     	;# 
   375     020C                     	;# 
   376     0211                     	;# 
   377     0211                     	;# 
   378     0212                     	;# 
   379     0212                     	;# 
   380     0213                     	;# 
   381     0213                     	;# 
   382     0214                     	;# 
   383     0214                     	;# 
   384     0215                     	;# 
   385     0215                     	;# 
   386     0215                     	;# 
   387     0216                     	;# 
   388     0216                     	;# 
   389     0217                     	;# 
   390     0217                     	;# 
   391     0291                     	;# 
   392     0291                     	;# 
   393     0292                     	;# 
   394     0293                     	;# 
   395     0294                     	;# 
   396     0295                     	;# 
   397     0295                     	;# 
   398     0296                     	;# 
   399     0391                     	;# 
   400     0392                     	;# 
   401     0393                     	;# 
   402     039A                     	;# 
   403     039C                     	;# 
   404     039D                     	;# 
   405     039E                     	;# 
   406     039F                     	;# 
   407     0FE4                     	;# 
   408     0FE5                     	;# 
   409     0FE6                     	;# 
   410     0FE7                     	;# 
   411     0FE8                     	;# 
   412     0FE9                     	;# 
   413     0FEA                     	;# 
   414     0FEB                     	;# 
   415     0FED                     	;# 
   416     0FEE                     	;# 
   417     0FEF                     	;# 
   418     0000                     	;# 
   419     0001                     	;# 
   420     0002                     	;# 
   421     0003                     	;# 
   422     0004                     	;# 
   423     0005                     	;# 
   424     0006                     	;# 
   425     0007                     	;# 
   426     0008                     	;# 
   427     0009                     	;# 
   428     000A                     	;# 
   429     000B                     	;# 
   430     000C                     	;# 
   431     0011                     	;# 
   432     0012                     	;# 
   433     0015                     	;# 
   434     0016                     	;# 
   435     0016                     	;# 
   436     0017                     	;# 
   437     0018                     	;# 
   438     0019                     	;# 
   439     001A                     	;# 
   440     001B                     	;# 
   441     001C                     	;# 
   442     001E                     	;# 
   443     001F                     	;# 
   444     008C                     	;# 
   445     0091                     	;# 
   446     0092                     	;# 
   447     0095                     	;# 
   448     0096                     	;# 
   449     0097                     	;# 
   450     0098                     	;# 
   451     0099                     	;# 
   452     009A                     	;# 
   453     009B                     	;# 
   454     009B                     	;# 
   455     009C                     	;# 
   456     009D                     	;# 
   457     009E                     	;# 
   458     010C                     	;# 
   459     0111                     	;# 
   460     0112                     	;# 
   461     0115                     	;# 
   462     0116                     	;# 
   463     0117                     	;# 
   464     0118                     	;# 
   465     0119                     	;# 
   466     011A                     	;# 
   467     011B                     	;# 
   468     011D                     	;# 
   469     011D                     	;# 
   470     018C                     	;# 
   471     0191                     	;# 
   472     0191                     	;# 
   473     0192                     	;# 
   474     0193                     	;# 
   475     0193                     	;# 
   476     0193                     	;# 
   477     0194                     	;# 
   478     0195                     	;# 
   479     0196                     	;# 
   480     0199                     	;# 
   481     019A                     	;# 
   482     019B                     	;# 
   483     019B                     	;# 
   484     019B                     	;# 
   485     019B                     	;# 
   486     019C                     	;# 
   487     019C                     	;# 
   488     019D                     	;# 
   489     019E                     	;# 
   490     019F                     	;# 
   491     020C                     	;# 
   492     0211                     	;# 
   493     0211                     	;# 
   494     0212                     	;# 
   495     0212                     	;# 
   496     0213                     	;# 
   497     0213                     	;# 
   498     0214                     	;# 
   499     0214                     	;# 
   500     0215                     	;# 
   501     0215                     	;# 
   502     0215                     	;# 
   503     0216                     	;# 
   504     0216                     	;# 
   505     0217                     	;# 
   506     0217                     	;# 
   507     0291                     	;# 
   508     0291                     	;# 
   509     0292                     	;# 
   510     0293                     	;# 
   511     0294                     	;# 
   512     0295                     	;# 
   513     0295                     	;# 
   514     0296                     	;# 
   515     0391                     	;# 
   516     0392                     	;# 
   517     0393                     	;# 
   518     039A                     	;# 
   519     039C                     	;# 
   520     039D                     	;# 
   521     039E                     	;# 
   522     039F                     	;# 
   523     0FE4                     	;# 
   524     0FE5                     	;# 
   525     0FE6                     	;# 
   526     0FE7                     	;# 
   527     0FE8                     	;# 
   528     0FE9                     	;# 
   529     0FEA                     	;# 
   530     0FEB                     	;# 
   531     0FED                     	;# 
   532     0FEE                     	;# 
   533     0FEF                     	;# 
   534     0000                     	;# 
   535     0001                     	;# 
   536     0002                     	;# 
   537     0003                     	;# 
   538     0004                     	;# 
   539     0005                     	;# 
   540     0006                     	;# 
   541     0007                     	;# 
   542     0008                     	;# 
   543     0009                     	;# 
   544     000A                     	;# 
   545     000B                     	;# 
   546     000C                     	;# 
   547     0011                     	;# 
   548     0012                     	;# 
   549     0015                     	;# 
   550     0016                     	;# 
   551     0016                     	;# 
   552     0017                     	;# 
   553     0018                     	;# 
   554     0019                     	;# 
   555     001A                     	;# 
   556     001B                     	;# 
   557     001C                     	;# 
   558     001E                     	;# 
   559     001F                     	;# 
   560     008C                     	;# 
   561     0091                     	;# 
   562     0092                     	;# 
   563     0095                     	;# 
   564     0096                     	;# 
   565     0097                     	;# 
   566     0098                     	;# 
   567     0099                     	;# 
   568     009A                     	;# 
   569     009B                     	;# 
   570     009B                     	;# 
   571     009C                     	;# 
   572     009D                     	;# 
   573     009E                     	;# 
   574     010C                     	;# 
   575     0111                     	;# 
   576     0112                     	;# 
   577     0115                     	;# 
   578     0116                     	;# 
   579     0117                     	;# 
   580     0118                     	;# 
   581     0119                     	;# 
   582     011A                     	;# 
   583     011B                     	;# 
   584     011D                     	;# 
   585     011D                     	;# 
   586     018C                     	;# 
   587     0191                     	;# 
   588     0191                     	;# 
   589     0192                     	;# 
   590     0193                     	;# 
   591     0193                     	;# 
   592     0193                     	;# 
   593     0194                     	;# 
   594     0195                     	;# 
   595     0196                     	;# 
   596     0199                     	;# 
   597     019A                     	;# 
   598     019B                     	;# 
   599     019B                     	;# 
   600     019B                     	;# 
   601     019B                     	;# 
   602     019C                     	;# 
   603     019C                     	;# 
   604     019D                     	;# 
   605     019E                     	;# 
   606     019F                     	;# 
   607     020C                     	;# 
   608     0211                     	;# 
   609     0211                     	;# 
   610     0212                     	;# 
   611     0212                     	;# 
   612     0213                     	;# 
   613     0213                     	;# 
   614     0214                     	;# 
   615     0214                     	;# 
   616     0215                     	;# 
   617     0215                     	;# 
   618     0215                     	;# 
   619     0216                     	;# 
   620     0216                     	;# 
   621     0217                     	;# 
   622     0217                     	;# 
   623     0291                     	;# 
   624     0291                     	;# 
   625     0292                     	;# 
   626     0293                     	;# 
   627     0294                     	;# 
   628     0295                     	;# 
   629     0295                     	;# 
   630     0296                     	;# 
   631     0391                     	;# 
   632     0392                     	;# 
   633     0393                     	;# 
   634     039A                     	;# 
   635     039C                     	;# 
   636     039D                     	;# 
   637     039E                     	;# 
   638     039F                     	;# 
   639     0FE4                     	;# 
   640     0FE5                     	;# 
   641     0FE6                     	;# 
   642     0FE7                     	;# 
   643     0FE8                     	;# 
   644     0FE9                     	;# 
   645     0FEA                     	;# 
   646     0FEB                     	;# 
   647     0FED                     	;# 
   648     0FEE                     	;# 
   649     0FEF                     	;# 
   650     0000                     	;# 
   651     0001                     	;# 
   652     0002                     	;# 
   653     0003                     	;# 
   654     0004                     	;# 
   655     0005                     	;# 
   656     0006                     	;# 
   657     0007                     	;# 
   658     0008                     	;# 
   659     0009                     	;# 
   660     000A                     	;# 
   661     000B                     	;# 
   662     000C                     	;# 
   663     0011                     	;# 
   664     0012                     	;# 
   665     0015                     	;# 
   666     0016                     	;# 
   667     0016                     	;# 
   668     0017                     	;# 
   669     0018                     	;# 
   670     0019                     	;# 
   671     001A                     	;# 
   672     001B                     	;# 
   673     001C                     	;# 
   674     001E                     	;# 
   675     001F                     	;# 
   676     008C                     	;# 
   677     0091                     	;# 
   678     0092                     	;# 
   679     0095                     	;# 
   680     0096                     	;# 
   681     0097                     	;# 
   682     0098                     	;# 
   683     0099                     	;# 
   684     009A                     	;# 
   685     009B                     	;# 
   686     009B                     	;# 
   687     009C                     	;# 
   688     009D                     	;# 
   689     009E                     	;# 
   690     010C                     	;# 
   691     0111                     	;# 
   692     0112                     	;# 
   693     0115                     	;# 
   694     0116                     	;# 
   695     0117                     	;# 
   696     0118                     	;# 
   697     0119                     	;# 
   698     011A                     	;# 
   699     011B                     	;# 
   700     011D                     	;# 
   701     011D                     	;# 
   702     018C                     	;# 
   703     0191                     	;# 
   704     0191                     	;# 
   705     0192                     	;# 
   706     0193                     	;# 
   707     0193                     	;# 
   708     0193                     	;# 
   709     0194                     	;# 
   710     0195                     	;# 
   711     0196                     	;# 
   712     0199                     	;# 
   713     019A                     	;# 
   714     019B                     	;# 
   715     019B                     	;# 
   716     019B                     	;# 
   717     019B                     	;# 
   718     019C                     	;# 
   719     019C                     	;# 
   720     019D                     	;# 
   721     019E                     	;# 
   722     019F                     	;# 
   723     020C                     	;# 
   724     0211                     	;# 
   725     0211                     	;# 
   726     0212                     	;# 
   727     0212                     	;# 
   728     0213                     	;# 
   729     0213                     	;# 
   730     0214                     	;# 
   731     0214                     	;# 
   732     0215                     	;# 
   733     0215                     	;# 
   734     0215                     	;# 
   735     0216                     	;# 
   736     0216                     	;# 
   737     0217                     	;# 
   738     0217                     	;# 
   739     0291                     	;# 
   740     0291                     	;# 
   741     0292                     	;# 
   742     0293                     	;# 
   743     0294                     	;# 
   744     0295                     	;# 
   745     0295                     	;# 
   746     0296                     	;# 
   747     0391                     	;# 
   748     0392                     	;# 
   749     0393                     	;# 
   750     039A                     	;# 
   751     039C                     	;# 
   752     039D                     	;# 
   753     039E                     	;# 
   754     039F                     	;# 
   755     0FE4                     	;# 
   756     0FE5                     	;# 
   757     0FE6                     	;# 
   758     0FE7                     	;# 
   759     0FE8                     	;# 
   760     0FE9                     	;# 
   761     0FEA                     	;# 
   762     0FEB                     	;# 
   763     0FED                     	;# 
   764     0FEE                     	;# 
   765     0FEF                     	;# 
   766     0000                     	;# 
   767     0001                     	;# 
   768     0002                     	;# 
   769     0003                     	;# 
   770     0004                     	;# 
   771     0005                     	;# 
   772     0006                     	;# 
   773     0007                     	;# 
   774     0008                     	;# 
   775     0009                     	;# 
   776     000A                     	;# 
   777     000B                     	;# 
   778     000C                     	;# 
   779     0011                     	;# 
   780     0012                     	;# 
   781     0015                     	;# 
   782     0016                     	;# 
   783     0016                     	;# 
   784     0017                     	;# 
   785     0018                     	;# 
   786     0019                     	;# 
   787     001A                     	;# 
   788     001B                     	;# 
   789     001C                     	;# 
   790     001E                     	;# 
   791     001F                     	;# 
   792     008C                     	;# 
   793     0091                     	;# 
   794     0092                     	;# 
   795     0095                     	;# 
   796     0096                     	;# 
   797     0097                     	;# 
   798     0098                     	;# 
   799     0099                     	;# 
   800     009A                     	;# 
   801     009B                     	;# 
   802     009B                     	;# 
   803     009C                     	;# 
   804     009D                     	;# 
   805     009E                     	;# 
   806     010C                     	;# 
   807     0111                     	;# 
   808     0112                     	;# 
   809     0115                     	;# 
   810     0116                     	;# 
   811     0117                     	;# 
   812     0118                     	;# 
   813     0119                     	;# 
   814     011A                     	;# 
   815     011B                     	;# 
   816     011D                     	;# 
   817     011D                     	;# 
   818     018C                     	;# 
   819     0191                     	;# 
   820     0191                     	;# 
   821     0192                     	;# 
   822     0193                     	;# 
   823     0193                     	;# 
   824     0193                     	;# 
   825     0194                     	;# 
   826     0195                     	;# 
   827     0196                     	;# 
   828     0199                     	;# 
   829     019A                     	;# 
   830     019B                     	;# 
   831     019B                     	;# 
   832     019B                     	;# 
   833     019B                     	;# 
   834     019C                     	;# 
   835     019C                     	;# 
   836     019D                     	;# 
   837     019E                     	;# 
   838     019F                     	;# 
   839     020C                     	;# 
   840     0211                     	;# 
   841     0211                     	;# 
   842     0212                     	;# 
   843     0212                     	;# 
   844     0213                     	;# 
   845     0213                     	;# 
   846     0214                     	;# 
   847     0214                     	;# 
   848     0215                     	;# 
   849     0215                     	;# 
   850     0215                     	;# 
   851     0216                     	;# 
   852     0216                     	;# 
   853     0217                     	;# 
   854     0217                     	;# 
   855     0291                     	;# 
   856     0291                     	;# 
   857     0292                     	;# 
   858     0293                     	;# 
   859     0294                     	;# 
   860     0295                     	;# 
   861     0295                     	;# 
   862     0296                     	;# 
   863     0391                     	;# 
   864     0392                     	;# 
   865     0393                     	;# 
   866     039A                     	;# 
   867     039C                     	;# 
   868     039D                     	;# 
   869     039E                     	;# 
   870     039F                     	;# 
   871     0FE4                     	;# 
   872     0FE5                     	;# 
   873     0FE6                     	;# 
   874     0FE7                     	;# 
   875     0FE8                     	;# 
   876     0FE9                     	;# 
   877     0FEA                     	;# 
   878     0FEB                     	;# 
   879     0FED                     	;# 
   880     0FEE                     	;# 
   881     0FEF                     	;# 
   882                           
   883                           	psect	nvCOMMON
   884     007D                     __pnvCOMMON:
   885     007D                     _OPERATION_MODE:
   886     007D                     	ds	1
   887                           
   888                           	psect	nvBANK0
   889     002E                     __pnvBANK0:
   890     002E                     _lock_open_time:
   891     002E                     	ds	1
   892     002F                     _lcm_duration_time:
   893     002F                     	ds	1
   894     0030                     _live_check_time:
   895     0030                     	ds	1
   896     000C                     _PORTAbits	set	12
   897     0015                     _TMR0	set	21
   898     0011                     _PIR1bits	set	17
   899     000B                     _INTCONbits	set	11
   900     0095                     _OPTION_REG	set	149
   901     0091                     _PIE1bits	set	145
   902     0095                     _OPTION_REGbits	set	149
   903     008C                     _TRISA	set	140
   904     0098                     _OSCTUNE	set	152
   905     009A                     _OSCSTAT	set	154
   906     0099                     _OSCCON	set	153
   907     011D                     _APFCON	set	285
   908     010C                     _LATA	set	268
   909     0199                     _RCREG	set	409
   910     019D                     _RCSTAbits	set	413
   911     019A                     _TXREG	set	410
   912     019C                     _SPBRGH	set	412
   913     019B                     _SPBRGL	set	411
   914     019E                     _TXSTA	set	414
   915     019D                     _RCSTA	set	413
   916     019F                     _BAUDCON	set	415
   917     018C                     _ANSELA	set	396
   918     0CF1                     _TRMT	set	3313
   919     020C                     _WPUA	set	524
   920     0391                     _IOCAPbits	set	913
   921     0392                     _IOCANbits	set	914
   922     0393                     _IOCAFbits	set	915
   923                           
   924                           	psect	cinit
   925     0030                     start_initialization:	
   926                           ; #config settings
   927                           
   928     0030                     __initialization:
   929                           
   930                           ; Clear objects allocated to COMMON
   931     0030  01F8               	clrf	__pbssCOMMON& (0+127)
   932     0031  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   933     0032  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   934     0033  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   935     0034  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   936                           
   937                           ; Clear objects allocated to BANK0
   938     0035  0020               	movlb	0	; select bank0
   939     0036  01A0               	clrf	__pbssBANK0& (0+127)
   940     0037  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   941     0038  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   942     0039  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   943     003A  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   944     003B  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   945     003C  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   946     003D  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   947     003E                     end_of_initialization:	
   948                           ;End of C runtime variable initialization code
   949                           
   950     003E                     __end_of__initialization:
   951     003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   952     003F  0020               	movlb	0
   953     0040  294B               	ljmp	_main	;jump to C main() function
   954                           
   955                           	psect	bssCOMMON
   956     0078                     __pbssCOMMON:
   957     0078                     _timer0ReloadVal:
   958     0078                     	ds	1
   959     0079                     EUSART_Receive_ISR@index:
   960     0079                     	ds	1
   961     007A                     _command:
   962     007A                     	ds	3
   963                           
   964                           	psect	bssBANK0
   965     0020                     __pbssBANK0:
   966     0020                     TMR0_ISR@CountCallBack:
   967     0020                     	ds	2
   968     0022                     EUSART_Receive_ISR@data_received:
   969     0022                     	ds	1
   970     0023                     EUSART_Receive_ISR@header_received:
   971     0023                     	ds	1
   972     0024                     _boot_time:
   973     0024                     	ds	1
   974     0025                     _tick_counter:
   975     0025                     	ds	1
   976     0026                     _WDT_MODE:
   977     0026                     	ds	1
   978     0027                     _LCM_MODE:
   979     0027                     	ds	1
   980                           
   981                           	psect	cstackCOMMON
   982     0070                     __pcstackCOMMON:
   983     0070                     ?_PIN_MANAGER_Initialize:
   984     0070                     ?_OSCILLATOR_Initialize:	
   985                           ; 1 bytes @ 0x0
   986                           
   987     0070                     ?_TMR0_Initialize:	
   988                           ; 1 bytes @ 0x0
   989                           
   990     0070                     ?_EUSART_Initialize:	
   991                           ; 1 bytes @ 0x0
   992                           
   993     0070                     ?_PIN_MANAGER_IOC:	
   994                           ; 1 bytes @ 0x0
   995                           
   996     0070                     ??_PIN_MANAGER_IOC:	
   997                           ; 1 bytes @ 0x0
   998                           
   999     0070                     ?_TMR0_ISR:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002     0070                     ?_TMR0_CallBack:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005     0070                     ??_TMR0_CallBack:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008     0070                     ?_SYSTEM_Initialize:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011     0070                     ?_EUSART_Write:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014     0070                     ??_EUSART_Write:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017     0070                     ?_Response_ACK:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020     0070                     ?_EUSART_Receive_ISR:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023     0070                     ?_INTERRUPT_InterruptManager:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026     0070                     ?_SELECTOR_LCM:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029     0070                     ?_SELECTOR_WDT:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032     0070                     ?_LOCK_CNTL_HIGH:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035     0070                     ?_LOCK_CNTL_LOW:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038     0070                     ?_POWER_ON:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041     0070                     ?_POWER_OFF:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044     0070                     ?_lock_cntl_state:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047     0070                     ?_lock_open:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050     0070                     ?_RESET_POWER:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053     0070                     ?_main:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056     0070                     EUSART_Write@txData:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059                           
  1060                           ; 1 bytes @ 0x0
  1061     0070                     	ds	1
  1062     0071                     ??_TMR0_ISR:
  1063     0071                     ??_Response_ACK:	
  1064                           ; 1 bytes @ 0x1
  1065                           
  1066                           
  1067                           ; 1 bytes @ 0x1
  1068     0071                     	ds	1
  1069     0072                     Response_ACK@ack:
  1070                           
  1071                           ; 1 bytes @ 0x2
  1072     0072                     	ds	1
  1073     0073                     Response_ACK@i:
  1074                           
  1075                           ; 2 bytes @ 0x3
  1076     0073                     	ds	2
  1077     0075                     ??_EUSART_Receive_ISR:
  1078                           
  1079                           ; 1 bytes @ 0x5
  1080     0075                     	ds	2
  1081     0077                     EUSART_Receive_ISR@buffer:
  1082                           
  1083                           ; 1 bytes @ 0x7
  1084     0077                     	ds	1
  1085     0078                     ??_INTERRUPT_InterruptManager:
  1086                           
  1087                           	psect	cstackBANK0
  1088     0028                     __pcstackBANK0:	
  1089                           ; 1 bytes @ 0x8
  1090                           
  1091     0028                     ??_PIN_MANAGER_Initialize:
  1092     0028                     ??_OSCILLATOR_Initialize:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095     0028                     ??_TMR0_Initialize:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098     0028                     ??_EUSART_Initialize:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101     0028                     ??_SYSTEM_Initialize:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104     0028                     ??_SELECTOR_LCM:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107     0028                     ??_SELECTOR_WDT:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110     0028                     ??_LOCK_CNTL_HIGH:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113     0028                     ??_LOCK_CNTL_LOW:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116     0028                     ??_POWER_ON:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119     0028                     ??_POWER_OFF:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122     0028                     ??_lock_cntl_state:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125     0028                     ??_lock_open:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128     0028                     ??_RESET_POWER:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0x0
  1133     0028                     	ds	1
  1134     0029                     lock_open@iteration:
  1135                           
  1136                           ; 1 bytes @ 0x1
  1137     0029                     	ds	1
  1138     002A                     lock_open@i:
  1139                           
  1140                           ; 1 bytes @ 0x2
  1141     002A                     	ds	1
  1142     002B                     lock_open@seconds:
  1143                           
  1144                           ; 1 bytes @ 0x3
  1145     002B                     	ds	1
  1146     002C                     ??_main:
  1147                           
  1148                           ; 1 bytes @ 0x4
  1149     002C                     	ds	2
  1150                           
  1151                           	psect	maintext
  1152     014B                     __pmaintext:	
  1153 ;;
  1154 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1155 ;;
  1156 ;; *************** function _main *****************
  1157 ;; Defined at:
  1158 ;;		line 146 in file "main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  i               2    0        int 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : B1F/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1
  1172 ;;      Params:         0       0       0
  1173 ;;      Locals:         0       0       0
  1174 ;;      Temps:          0       2       0
  1175 ;;      Totals:         0       2       0
  1176 ;;Total ram usage:        2 bytes
  1177 ;; Hardware stack levels required when called: 6
  1178 ;; This function calls:
  1179 ;;		_LOCK_CNTL_HIGH
  1180 ;;		_LOCK_CNTL_LOW
  1181 ;;		_POWER_OFF
  1182 ;;		_POWER_ON
  1183 ;;		_RESET_POWER
  1184 ;;		_SELECTOR_LCM
  1185 ;;		_SELECTOR_WDT
  1186 ;;		_SYSTEM_Initialize
  1187 ;;		_lock_cntl_state
  1188 ;;		_lock_open
  1189 ;; This function is called by:
  1190 ;;		Startup code after reset
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194     014B                     _main:	
  1195                           ;psect for function _main
  1196                           
  1197     014B                     l1683:	
  1198                           ;incstack = 0
  1199                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1200                           
  1201                           
  1202                           ;main.c: 149:     SYSTEM_Initialize();
  1203     014B  3182  22D8  3181   	fcall	_SYSTEM_Initialize
  1204     014E                     l1685:
  1205                           
  1206                           ;main.c: 155:     (INTCONbits.GIE = 1);
  1207     014E  178B               	bsf	11,7	;volatile
  1208     014F                     l1687:
  1209                           
  1210                           ;main.c: 158:     (INTCONbits.PEIE = 1);
  1211     014F  170B               	bsf	11,6	;volatile
  1212     0150                     l1689:
  1213                           
  1214                           ;main.c: 170:     live_check_time = 60;
  1215     0150  303C               	movlw	60
  1216     0151  0020               	movlb	0	; select bank0
  1217     0152  00B0               	movwf	_live_check_time
  1218     0153                     l1691:
  1219                           
  1220                           ;main.c: 171:     lcm_duration_time = 5;
  1221     0153  3005               	movlw	5
  1222     0154  00AF               	movwf	_lcm_duration_time
  1223     0155                     l1693:
  1224                           
  1225                           ;main.c: 172:     lock_open_time = 3;
  1226     0155  3003               	movlw	3
  1227     0156  00AE               	movwf	_lock_open_time
  1228     0157                     l1695:
  1229                           
  1230                           ;main.c: 173:     tick_counter = 0;
  1231     0157  01A5               	clrf	_tick_counter
  1232     0158                     l1697:
  1233                           
  1234                           ;main.c: 174:     boot_time = 0;
  1235     0158  01A4               	clrf	_boot_time
  1236                           
  1237                           ;main.c: 177:     LOCK_CNTL_LOW();
  1238     0159  3183  232B  3181   	fcall	_LOCK_CNTL_LOW
  1239     015C                     l1699:
  1240                           
  1241                           ;main.c: 178:     SELECTOR_WDT();
  1242     015C  3182  22FB  3181   	fcall	_SELECTOR_WDT
  1243     015F                     l1701:
  1244                           
  1245                           ;main.c: 179:     POWER_OFF();
  1246     015F  3183  2328  3181   	fcall	_POWER_OFF
  1247     0162                     l1703:
  1248                           
  1249                           ;main.c: 180:     _delay((unsigned long)((50)*(500000/4000.0)));
  1250     0162  3009               	movlw	9
  1251     0163  0020               	movlb	0	; select bank0
  1252     0164  00AC               	movwf	??_main
  1253     0165  301C               	movlw	28
  1254     0166                     u937:
  1255     0166  0B89               	decfsz	9,f
  1256     0167  2966               	goto	u937
  1257     0168  0BAC               	decfsz	??_main,f
  1258     0169  2966               	goto	u937
  1259     016A  0000               	nop
  1260     016B                     l1705:
  1261                           
  1262                           ;main.c: 181:     SELECTOR_LCM();
  1263     016B  3183  2304  3181   	fcall	_SELECTOR_LCM
  1264     016E                     l1707:
  1265                           
  1266                           ;main.c: 182:     LCM_MODE = NORMAL;
  1267     016E  0020               	movlb	0	; select bank0
  1268     016F  01A7               	clrf	_LCM_MODE
  1269     0170                     l1709:
  1270                           
  1271                           ;main.c: 183:     _delay((unsigned long)((100)*(500000/4000.0)));
  1272     0170  3011               	movlw	17
  1273     0171  0020               	movlb	0	; select bank0
  1274     0172  00AC               	movwf	??_main
  1275     0173  303A               	movlw	58
  1276     0174                     u947:
  1277     0174  0B89               	decfsz	9,f
  1278     0175  2974               	goto	u947
  1279     0176  0BAC               	decfsz	??_main,f
  1280     0177  2974               	goto	u947
  1281     0178  0000               	nop
  1282     0179                     l1711:
  1283                           
  1284                           ;main.c: 184:     POWER_ON();
  1285     0179  3183  2325  3181   	fcall	_POWER_ON
  1286     017C                     l1713:
  1287                           
  1288                           ;main.c: 188:     {;main.c: 189:         if(OPERATION_MODE == WDT)
  1289     017C  037D               	decf	_OPERATION_MODE,w
  1290     017D  1D03               	btfss	3,2
  1291     017E  2980               	goto	u841
  1292     017F  2981               	goto	u840
  1293     0180                     u841:
  1294     0180  29A0               	goto	l1727
  1295     0181                     u840:
  1296     0181  298C               	goto	l1725
  1297     0182                     l1719:
  1298                           
  1299                           ;main.c: 228:                     if (tick_counter >= live_check_time)
  1300     0182  0830               	movf	_live_check_time,w
  1301     0183  0225               	subwf	_tick_counter,w
  1302     0184  1C03               	skipc
  1303     0185  2987               	goto	u851
  1304     0186  2988               	goto	u850
  1305     0187                     u851:
  1306     0187  2A08               	goto	l1767
  1307     0188                     u850:
  1308     0188                     l1721:
  1309                           
  1310                           ;main.c: 229:                     {;main.c: 230:                         RESET_POWER();
  1311     0188  3182  2213  3181   	fcall	_RESET_POWER
  1312     018B  2A08               	goto	l1767
  1313     018C                     l1725:
  1314     018C  0020               	movlb	0	; select bank0
  1315     018D  0826               	movf	_WDT_MODE,w
  1316     018E  00AC               	movwf	??_main
  1317     018F  01AD               	clrf	??_main+1
  1318                           
  1319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1320                           ; Switch size 1, requested type "simple"
  1321                           ; Number of cases is 1, Range of values is 0 to 0
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte            4     3 (average)
  1325                           ; direct_byte            8     6 (fixed)
  1326                           ; jumptable            260     6 (fixed)
  1327                           ;	Chosen strategy is simple_byte
  1328     0190  082D               	movf	??_main+1,w
  1329     0191  3A00               	xorlw	0	; case 0
  1330     0192  1903               	skipnz
  1331     0193  2995               	goto	l1877
  1332     0194  2A08               	goto	l1767
  1333     0195                     l1877:
  1334                           
  1335                           ; Switch size 1, requested type "simple"
  1336                           ; Number of cases is 3, Range of values is 0 to 19
  1337                           ; switch strategies available:
  1338                           ; Name         Instructions Cycles
  1339                           ; simple_byte           10     6 (average)
  1340                           ; direct_byte           46     6 (fixed)
  1341                           ; jumptable            260     6 (fixed)
  1342                           ;	Chosen strategy is simple_byte
  1343     0195  082C               	movf	??_main,w
  1344     0196  3A00               	xorlw	0	; case 0
  1345     0197  1903               	skipnz
  1346     0198  2A08               	goto	l1767
  1347     0199  3A12               	xorlw	18	; case 18
  1348     019A  1903               	skipnz
  1349     019B  2A08               	goto	l1767
  1350     019C  3A01               	xorlw	1	; case 19
  1351     019D  1903               	skipnz
  1352     019E  2982               	goto	l1719
  1353     019F  2A08               	goto	l1767
  1354     01A0                     l1727:
  1355     01A0  3002               	movlw	2
  1356     01A1  067D               	xorwf	_OPERATION_MODE,w
  1357     01A2  1D03               	btfss	3,2
  1358     01A3  29A5               	goto	u861
  1359     01A4  29A6               	goto	u860
  1360     01A5                     u861:
  1361     01A5  2A01               	goto	l1763
  1362     01A6                     u860:
  1363     01A6  29DD               	goto	l1755
  1364     01A7                     l1731:
  1365                           
  1366                           ;main.c: 244:                     if(!lock_cntl_state())
  1367     01A7  3182  22F2  3181   	fcall	_lock_cntl_state
  1368     01AA  3A00               	xorlw	0
  1369     01AB  1D03               	skipz
  1370     01AC  29AE               	goto	u871
  1371     01AD  29AF               	goto	u870
  1372     01AE                     u871:
  1373     01AE  29C4               	goto	l1743
  1374     01AF                     u870:
  1375     01AF                     l1733:
  1376                           
  1377                           ;main.c: 245:                     {;main.c: 246:                         LOCK_CNTL_HIGH(
      +                          );
  1378     01AF  3183  232E  3181   	fcall	_LOCK_CNTL_HIGH
  1379     01B2                     l1735:
  1380                           
  1381                           ;main.c: 247:                         lock_open(lock_open_time);
  1382     01B2  0020               	movlb	0	; select bank0
  1383     01B3  082E               	movf	_lock_open_time,w
  1384     01B4  3182  2242  3181   	fcall	_lock_open
  1385     01B7                     l1737:
  1386                           
  1387                           ;main.c: 248:                         if(LCM_MODE == OPEN_ONCE)
  1388     01B7  30A1               	movlw	161
  1389     01B8  0020               	movlb	0	; select bank0
  1390     01B9  0627               	xorwf	_LCM_MODE,w
  1391     01BA  1D03               	btfss	3,2
  1392     01BB  29BD               	goto	u881
  1393     01BC  29BE               	goto	u880
  1394     01BD                     u881:
  1395     01BD  29F4               	goto	l1757
  1396     01BE                     u880:
  1397     01BE                     l1739:
  1398                           
  1399                           ;main.c: 249:                         {;main.c: 250:                             LCM_MOD
      +                          E = CLOSE;
  1400     01BE  30A3               	movlw	163
  1401     01BF  00A7               	movwf	_LCM_MODE
  1402     01C0                     l1741:
  1403                           
  1404                           ;main.c: 251:                             LOCK_CNTL_LOW();
  1405     01C0  3183  232B  3181   	fcall	_LOCK_CNTL_LOW
  1406     01C3  29F4               	goto	l1757
  1407     01C4                     l1743:
  1408                           
  1409                           ;main.c: 255:                     {;main.c: 256:                         LCM_MODE = OPEN
      +                          _CONTINUE;
  1410     01C4  30A2               	movlw	162
  1411     01C5  0020               	movlb	0	; select bank0
  1412     01C6  00A7               	movwf	_LCM_MODE
  1413     01C7  29F4               	goto	l1757
  1414     01C8                     l1745:
  1415                           
  1416                           ;main.c: 260:                     if(!lock_cntl_state())
  1417     01C8  3182  22F2  3181   	fcall	_lock_cntl_state
  1418     01CB  3A00               	xorlw	0
  1419     01CC  1D03               	skipz
  1420     01CD  29CF               	goto	u891
  1421     01CE  29D0               	goto	u890
  1422     01CF                     u891:
  1423     01CF  29F4               	goto	l1757
  1424     01D0                     u890:
  1425     01D0                     l1747:
  1426                           
  1427                           ;main.c: 261:                     {;main.c: 262:                         LOCK_CNTL_HIGH(
      +                          );
  1428     01D0  3183  232E  3181   	fcall	_LOCK_CNTL_HIGH
  1429     01D3  29F4               	goto	l1757
  1430     01D4                     l1749:
  1431                           
  1432                           ;main.c: 266:                     if(lock_cntl_state())
  1433     01D4  3182  22F2  3181   	fcall	_lock_cntl_state
  1434     01D7  3A00               	xorlw	0
  1435     01D8  1903               	skipnz
  1436     01D9  29DB               	goto	u901
  1437     01DA  29DC               	goto	u900
  1438     01DB                     u901:
  1439     01DB  29F4               	goto	l1757
  1440     01DC                     u900:
  1441     01DC  29C0               	goto	l1741
  1442     01DD                     l1755:
  1443     01DD  0020               	movlb	0	; select bank0
  1444     01DE  0827               	movf	_LCM_MODE,w
  1445     01DF  00AC               	movwf	??_main
  1446     01E0  01AD               	clrf	??_main+1
  1447                           
  1448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1449                           ; Switch size 1, requested type "simple"
  1450                           ; Number of cases is 1, Range of values is 0 to 0
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte            4     3 (average)
  1454                           ; direct_byte            8     6 (fixed)
  1455                           ; jumptable            260     6 (fixed)
  1456                           ;	Chosen strategy is simple_byte
  1457     01E1  082D               	movf	??_main+1,w
  1458     01E2  3A00               	xorlw	0	; case 0
  1459     01E3  1903               	skipnz
  1460     01E4  29E6               	goto	l1879
  1461     01E5  29F4               	goto	l1757
  1462     01E6                     l1879:
  1463                           
  1464                           ; Switch size 1, requested type "simple"
  1465                           ; Number of cases is 4, Range of values is 0 to 163
  1466                           ; switch strategies available:
  1467                           ; Name         Instructions Cycles
  1468                           ; simple_byte           13     7 (average)
  1469                           ; jumptable            260     6 (fixed)
  1470                           ;	Chosen strategy is simple_byte
  1471     01E6  082C               	movf	??_main,w
  1472     01E7  3A00               	xorlw	0	; case 0
  1473     01E8  1903               	skipnz
  1474     01E9  29F4               	goto	l1757
  1475     01EA  3AA1               	xorlw	161	; case 161
  1476     01EB  1903               	skipnz
  1477     01EC  29A7               	goto	l1731
  1478     01ED  3A03               	xorlw	3	; case 162
  1479     01EE  1903               	skipnz
  1480     01EF  29C8               	goto	l1745
  1481     01F0  3A01               	xorlw	1	; case 163
  1482     01F1  1903               	skipnz
  1483     01F2  29D4               	goto	l1749
  1484     01F3  29F4               	goto	l1757
  1485     01F4                     l1757:
  1486                           
  1487                           ;main.c: 272:             if(boot_time >= lcm_duration_time)
  1488     01F4  0020               	movlb	0	; select bank0
  1489     01F5  082F               	movf	_lcm_duration_time,w
  1490     01F6  0224               	subwf	_boot_time,w
  1491     01F7  1C03               	skipc
  1492     01F8  29FA               	goto	u911
  1493     01F9  29FB               	goto	u910
  1494     01FA                     u911:
  1495     01FA  2A08               	goto	l1767
  1496     01FB                     u910:
  1497     01FB                     l1759:
  1498                           
  1499                           ;main.c: 273:             {;main.c: 274:                 SELECTOR_WDT();
  1500     01FB  3182  22FB  3181   	fcall	_SELECTOR_WDT
  1501     01FE                     l1761:
  1502                           
  1503                           ;main.c: 276:                 boot_time = 0;
  1504     01FE  0020               	movlb	0	; select bank0
  1505     01FF  01A4               	clrf	_boot_time
  1506     0200  2A08               	goto	l1767
  1507     0201                     l1763:
  1508     0201  30A4               	movlw	164
  1509     0202  067D               	xorwf	_OPERATION_MODE,w
  1510     0203  1D03               	btfss	3,2
  1511     0204  2A06               	goto	u921
  1512     0205  2A07               	goto	u920
  1513     0206                     u921:
  1514     0206  2A08               	goto	l1767
  1515     0207                     u920:
  1516     0207  2988               	goto	l1721
  1517     0208                     l1767:
  1518                           
  1519                           ;main.c: 294:         _delay((unsigned long)((100)*(500000/4000.0)));
  1520     0208  3011               	movlw	17
  1521     0209  0020               	movlb	0	; select bank0
  1522     020A  00AC               	movwf	??_main
  1523     020B  303A               	movlw	58
  1524     020C                     u957:
  1525     020C  0B89               	decfsz	9,f
  1526     020D  2A0C               	goto	u957
  1527     020E  0BAC               	decfsz	??_main,f
  1528     020F  2A0C               	goto	u957
  1529     0210  0000               	nop
  1530     0211  297C               	goto	l1713
  1531     0212  282F               	ljmp	start
  1532     0213                     __end_of_main:
  1533                           
  1534                           	psect	text1
  1535     0242                     __ptext1:	
  1536 ;; *************** function _lock_open *****************
  1537 ;; Defined at:
  1538 ;;		line 88 in file "main.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  seconds         1    wreg     unsigned char 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  seconds         1    3[BANK0 ] unsigned char 
  1543 ;;  i               1    2[BANK0 ] unsigned char 
  1544 ;;  iteration       1    1[BANK0 ] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1
  1554 ;;      Params:         0       0       0
  1555 ;;      Locals:         0       3       0
  1556 ;;      Temps:          0       1       0
  1557 ;;      Totals:         0       4       0
  1558 ;;Total ram usage:        4 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 4
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568     0242                     _lock_open:	
  1569                           ;psect for function _lock_open
  1570                           
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _lock_open: [wreg+status,2+status,0]
  1574                           ;lock_open@seconds stored from wreg
  1575     0242  0020               	movlb	0	; select bank0
  1576     0243  00AB               	movwf	lock_open@seconds
  1577     0244                     l1637:
  1578                           
  1579                           ;main.c: 88: void lock_open(uint8_t seconds);main.c: 89: {;main.c: 90:     uint8_t i;;ma
      +                          in.c: 91:     uint8_t iteration;;main.c: 92:     iteration = seconds * 2;
  1580     0244  352B               	lslf	lock_open@seconds,w
  1581     0245  00A9               	movwf	lock_open@iteration
  1582                           
  1583                           ;main.c: 94:     if(seconds == 0)
  1584     0246  082B               	movf	lock_open@seconds,w
  1585     0247  1D03               	btfss	3,2
  1586     0248  2A4A               	goto	u761
  1587     0249  2A4B               	goto	u760
  1588     024A                     u761:
  1589     024A  2A55               	goto	l1641
  1590     024B                     u760:
  1591     024B                     l1639:
  1592                           
  1593                           ;main.c: 95:     {;main.c: 96:         _delay((unsigned long)((500)*(500000/4000.0)));
  1594     024B  3052               	movlw	82
  1595     024C  0020               	movlb	0	; select bank0
  1596     024D  00A8               	movwf	??_lock_open
  1597     024E  3029               	movlw	41
  1598     024F                     u967:
  1599     024F  0B89               	decfsz	9,f
  1600     0250  2A4F               	goto	u967
  1601     0251  0BA8               	decfsz	??_lock_open,f
  1602     0252  2A4F               	goto	u967
  1603     0253  3200               	nop2
  1604                           
  1605                           ;main.c: 97:     }
  1606     0254  2A6B               	goto	l266
  1607     0255                     l1641:
  1608                           
  1609                           ;main.c: 99:     {;main.c: 100:         for(i = 0; i < iteration; i++)
  1610     0255  01AA               	clrf	lock_open@i
  1611     0256  2A65               	goto	l1647
  1612     0257                     l1643:
  1613                           
  1614                           ;main.c: 101:         {;main.c: 102:             _delay((unsigned long)((500)*(500000/40
      +                          00.0)));
  1615     0257  3052               	movlw	82
  1616     0258  0020               	movlb	0	; select bank0
  1617     0259  00A8               	movwf	??_lock_open
  1618     025A  3029               	movlw	41
  1619     025B                     u977:
  1620     025B  0B89               	decfsz	9,f
  1621     025C  2A5B               	goto	u977
  1622     025D  0BA8               	decfsz	??_lock_open,f
  1623     025E  2A5B               	goto	u977
  1624     025F  3200               	nop2
  1625     0260                     l1645:
  1626                           
  1627                           ;main.c: 103:         }
  1628     0260  3001               	movlw	1
  1629     0261  0020               	movlb	0	; select bank0
  1630     0262  00A8               	movwf	??_lock_open
  1631     0263  0828               	movf	??_lock_open,w
  1632     0264  07AA               	addwf	lock_open@i,f
  1633     0265                     l1647:
  1634     0265  0829               	movf	lock_open@iteration,w
  1635     0266  022A               	subwf	lock_open@i,w
  1636     0267  1C03               	skipc
  1637     0268  2A6A               	goto	u771
  1638     0269  2A6B               	goto	u770
  1639     026A                     u771:
  1640     026A  2A57               	goto	l1643
  1641     026B                     u770:
  1642     026B                     l266:
  1643     026B  0008               	return
  1644     026C                     __end_of_lock_open:
  1645                           
  1646                           	psect	text2
  1647     02F2                     __ptext2:	
  1648 ;; *************** function _lock_cntl_state *****************
  1649 ;; Defined at:
  1650 ;;		line 77 in file "main.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      _Bool 
  1657 ;; Registers used:
  1658 ;;		wreg
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1
  1664 ;;      Params:         0       0       0
  1665 ;;      Locals:         0       0       0
  1666 ;;      Temps:          0       0       0
  1667 ;;      Totals:         0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 4
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678     02F2                     _lock_cntl_state:	
  1679                           ;psect for function _lock_cntl_state
  1680                           
  1681     02F2                     l1625:	
  1682                           ;incstack = 0
  1683                           ; Regs used in _lock_cntl_state: [wreg]
  1684                           
  1685                           
  1686                           ;main.c: 79:     if(PORTAbits.RA1)
  1687     02F2  0020               	movlb	0	; select bank0
  1688     02F3  1C8C               	btfss	12,1	;volatile
  1689     02F4  2AF6               	goto	u751
  1690     02F5  2AF7               	goto	u750
  1691     02F6                     u751:
  1692     02F6  2AF9               	goto	l1633
  1693     02F7                     u750:
  1694     02F7                     l1627:
  1695                           
  1696                           ;main.c: 80:     {;main.c: 81:         return 1;
  1697     02F7  3001               	movlw	1
  1698     02F8  2AFA               	goto	l257
  1699     02F9                     l1633:
  1700                           
  1701                           ;main.c: 84:     {;main.c: 85:         return 0;
  1702     02F9  3000               	movlw	0
  1703     02FA                     l257:
  1704     02FA  0008               	return
  1705     02FB                     __end_of_lock_cntl_state:
  1706                           
  1707                           	psect	text3
  1708     02D8                     __ptext3:	
  1709 ;; *************** function _SYSTEM_Initialize *****************
  1710 ;; Defined at:
  1711 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1
  1725 ;;      Params:         0       0       0
  1726 ;;      Locals:         0       0       0
  1727 ;;      Temps:          0       0       0
  1728 ;;      Totals:         0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 5
  1732 ;; This function calls:
  1733 ;;		_EUSART_Initialize
  1734 ;;		_OSCILLATOR_Initialize
  1735 ;;		_PIN_MANAGER_Initialize
  1736 ;;		_TMR0_Initialize
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742     02D8                     _SYSTEM_Initialize:	
  1743                           ;psect for function _SYSTEM_Initialize
  1744                           
  1745     02D8                     l1483:	
  1746                           ;incstack = 0
  1747                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1748                           
  1749                           
  1750                           ;mcc_generated_files/mcc.c: 72:     PIN_MANAGER_Initialize();
  1751     02D8  3182  22A5  3182   	fcall	_PIN_MANAGER_Initialize
  1752                           
  1753                           ;mcc_generated_files/mcc.c: 73:     OSCILLATOR_Initialize();
  1754     02DB  3183  231F  3182   	fcall	_OSCILLATOR_Initialize
  1755                           
  1756                           ;mcc_generated_files/mcc.c: 74:     TMR0_Initialize();
  1757     02DE  3182  22E5  3182   	fcall	_TMR0_Initialize
  1758                           
  1759                           ;mcc_generated_files/mcc.c: 75:     EUSART_Initialize();
  1760     02E1  3182  22B8  3182   	fcall	_EUSART_Initialize
  1761     02E4                     l17:
  1762     02E4  0008               	return
  1763     02E5                     __end_of_SYSTEM_Initialize:
  1764                           
  1765                           	psect	text4
  1766     02E5                     __ptext4:	
  1767 ;; *************** function _TMR0_Initialize *****************
  1768 ;; Defined at:
  1769 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1
  1783 ;;      Params:         0       0       0
  1784 ;;      Locals:         0       0       0
  1785 ;;      Temps:          0       0       0
  1786 ;;      Totals:         0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 4
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_SYSTEM_Initialize
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797     02E5                     _TMR0_Initialize:	
  1798                           ;psect for function _TMR0_Initialize
  1799                           
  1800     02E5                     l1433:	
  1801                           ;incstack = 0
  1802                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1803                           
  1804                           
  1805                           ;mcc_generated_files/tmr0.c: 70:     OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  1806     02E5  0021               	movlb	1	; select bank1
  1807     02E6  0815               	movf	21,w	;volatile
  1808     02E7  39C0               	andlw	192
  1809     02E8  3817               	iorlw	23
  1810     02E9  0095               	movwf	21	;volatile
  1811     02EA                     l1435:
  1812                           
  1813                           ;mcc_generated_files/tmr0.c: 73:     TMR0 = 0x0B;
  1814     02EA  300B               	movlw	11
  1815     02EB  0020               	movlb	0	; select bank0
  1816     02EC  0095               	movwf	21	;volatile
  1817     02ED                     l1437:
  1818                           
  1819                           ;mcc_generated_files/tmr0.c: 76:     timer0ReloadVal= 11;
  1820     02ED  300B               	movlw	11
  1821     02EE  00F8               	movwf	_timer0ReloadVal	;volatile
  1822     02EF                     l1439:
  1823                           
  1824                           ;mcc_generated_files/tmr0.c: 79:     INTCONbits.TMR0IF = 0;
  1825     02EF  110B               	bcf	11,2	;volatile
  1826     02F0                     l1441:
  1827                           
  1828                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IE = 1;
  1829     02F0  168B               	bsf	11,5	;volatile
  1830     02F1                     l195:
  1831     02F1  0008               	return
  1832     02F2                     __end_of_TMR0_Initialize:
  1833                           
  1834                           	psect	text5
  1835     02A5                     __ptext5:	
  1836 ;; *************** function _PIN_MANAGER_Initialize *****************
  1837 ;; Defined at:
  1838 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1
  1852 ;;      Params:         0       0       0
  1853 ;;      Locals:         0       0       0
  1854 ;;      Temps:          0       0       0
  1855 ;;      Totals:         0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 4
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_SYSTEM_Initialize
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866     02A5                     _PIN_MANAGER_Initialize:	
  1867                           ;psect for function _PIN_MANAGER_Initialize
  1868                           
  1869     02A5                     l1411:	
  1870                           ;incstack = 0
  1871                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1872                           
  1873                           
  1874                           ;mcc_generated_files/pin_manager.c: 51:     LATA = 0x0;
  1875     02A5  0022               	movlb	2	; select bank2
  1876     02A6  018C               	clrf	12	;volatile
  1877                           
  1878                           ;mcc_generated_files/pin_manager.c: 52:     ANSELA = 0x0;
  1879     02A7  0023               	movlb	3	; select bank3
  1880     02A8  018C               	clrf	12	;volatile
  1881                           
  1882                           ;mcc_generated_files/pin_manager.c: 53:     WPUA = 0x0;
  1883     02A9  0024               	movlb	4	; select bank4
  1884     02AA  018C               	clrf	12	;volatile
  1885     02AB                     l1413:
  1886                           
  1887                           ;mcc_generated_files/pin_manager.c: 54:     TRISA = 0x38;
  1888     02AB  3038               	movlw	56
  1889     02AC  0021               	movlb	1	; select bank1
  1890     02AD  008C               	movwf	12	;volatile
  1891     02AE                     l1415:
  1892                           
  1893                           ;mcc_generated_files/pin_manager.c: 56:     OPTION_REGbits.nWPUEN = 0x1;
  1894     02AE  1795               	bsf	21,7	;volatile
  1895     02AF                     l1417:
  1896                           
  1897                           ;mcc_generated_files/pin_manager.c: 57:     APFCON = 0x84;
  1898     02AF  3084               	movlw	132
  1899     02B0  0022               	movlb	2	; select bank2
  1900     02B1  009D               	movwf	29	;volatile
  1901     02B2                     l1419:
  1902                           
  1903                           ;mcc_generated_files/pin_manager.c: 60:  IOCAFbits.IOCAF3 = 1;
  1904     02B2  0027               	movlb	7	; select bank7
  1905     02B3  1593               	bsf	19,3	;volatile
  1906     02B4                     l1421:
  1907                           
  1908                           ;mcc_generated_files/pin_manager.c: 63:  IOCANbits.IOCAN3 = 1;
  1909     02B4  1592               	bsf	18,3	;volatile
  1910     02B5                     l1423:
  1911                           
  1912                           ;mcc_generated_files/pin_manager.c: 66:  IOCAPbits.IOCAP3 = 0;
  1913     02B5  1191               	bcf	17,3	;volatile
  1914     02B6                     l1425:
  1915                           
  1916                           ;mcc_generated_files/pin_manager.c: 68:     INTCONbits.IOCIE = 1;
  1917     02B6  158B               	bsf	11,3	;volatile
  1918     02B7                     l43:
  1919     02B7  0008               	return
  1920     02B8                     __end_of_PIN_MANAGER_Initialize:
  1921                           
  1922                           	psect	text6
  1923     031F                     __ptext6:	
  1924 ;; *************** function _OSCILLATOR_Initialize *****************
  1925 ;; Defined at:
  1926 ;;		line 78 in file "mcc_generated_files/mcc.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1
  1940 ;;      Params:         0       0       0
  1941 ;;      Locals:         0       0       0
  1942 ;;      Temps:          0       0       0
  1943 ;;      Totals:         0       0       0
  1944 ;;Total ram usage:        0 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 4
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_SYSTEM_Initialize
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954     031F                     _OSCILLATOR_Initialize:	
  1955                           ;psect for function _OSCILLATOR_Initialize
  1956                           
  1957     031F                     l1427:	
  1958                           ;incstack = 0
  1959                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1960                           
  1961                           
  1962                           ;mcc_generated_files/mcc.c: 81:     OSCCON = 0x38;
  1963     031F  3038               	movlw	56
  1964     0320  0021               	movlb	1	; select bank1
  1965     0321  0099               	movwf	25	;volatile
  1966     0322                     l1429:
  1967                           
  1968                           ;mcc_generated_files/mcc.c: 83:     OSCSTAT = 0x00;
  1969     0322  019A               	clrf	26	;volatile
  1970     0323                     l1431:
  1971                           
  1972                           ;mcc_generated_files/mcc.c: 85:     OSCTUNE = 0x00;
  1973     0323  0198               	clrf	24	;volatile
  1974     0324                     l20:
  1975     0324  0008               	return
  1976     0325                     __end_of_OSCILLATOR_Initialize:
  1977                           
  1978                           	psect	text7
  1979     02B8                     __ptext7:	
  1980 ;; *************** function _EUSART_Initialize *****************
  1981 ;; Defined at:
  1982 ;;		line 64 in file "mcc_generated_files/eusart.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1
  1996 ;;      Params:         0       0       0
  1997 ;;      Locals:         0       0       0
  1998 ;;      Temps:          0       0       0
  1999 ;;      Totals:         0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 4
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_SYSTEM_Initialize
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010     02B8                     _EUSART_Initialize:	
  2011                           ;psect for function _EUSART_Initialize
  2012                           
  2013     02B8                     l1443:	
  2014                           ;incstack = 0
  2015                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2016                           
  2017                           
  2018                           ;mcc_generated_files/eusart.c: 67:     PIE1bits.RCIE = 0;
  2019     02B8  0021               	movlb	1	; select bank1
  2020     02B9  1291               	bcf	17,5	;volatile
  2021                           
  2022                           ;mcc_generated_files/eusart.c: 68:     PIE1bits.TXIE = 0;
  2023     02BA  1211               	bcf	17,4	;volatile
  2024     02BB                     l1445:
  2025                           
  2026                           ;mcc_generated_files/eusart.c: 73:     BAUDCON = 0x08;
  2027     02BB  3008               	movlw	8
  2028     02BC  0023               	movlb	3	; select bank3
  2029     02BD  009F               	movwf	31	;volatile
  2030                           
  2031                           ;mcc_generated_files/eusart.c: 76:     RCSTA = 0x90;
  2032     02BE  3090               	movlw	144
  2033     02BF  009D               	movwf	29	;volatile
  2034                           
  2035                           ;mcc_generated_files/eusart.c: 79:     TXSTA = 0x24;
  2036     02C0  3024               	movlw	36
  2037     02C1  009E               	movwf	30	;volatile
  2038                           
  2039                           ;mcc_generated_files/eusart.c: 82:     SPBRGL = 0x0C;
  2040     02C2  300C               	movlw	12
  2041     02C3  009B               	movwf	27	;volatile
  2042     02C4                     l1447:
  2043                           
  2044                           ;mcc_generated_files/eusart.c: 85:     SPBRGH = 0x00;
  2045     02C4  019C               	clrf	28	;volatile
  2046     02C5                     l1449:
  2047                           
  2048                           ;mcc_generated_files/eusart.c: 88:     PIE1bits.RCIE = 1;
  2049     02C5  0021               	movlb	1	; select bank1
  2050     02C6  1691               	bsf	17,5	;volatile
  2051     02C7                     l84:
  2052     02C7  0008               	return
  2053     02C8                     __end_of_EUSART_Initialize:
  2054                           
  2055                           	psect	text8
  2056     0213                     __ptext8:	
  2057 ;; *************** function _RESET_POWER *****************
  2058 ;; Defined at:
  2059 ;;		line 114 in file "main.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1
  2073 ;;      Params:         0       0       0
  2074 ;;      Locals:         0       0       0
  2075 ;;      Temps:          0       1       0
  2076 ;;      Totals:         0       1       0
  2077 ;;Total ram usage:        1 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 5
  2080 ;; This function calls:
  2081 ;;		_LOCK_CNTL_LOW
  2082 ;;		_POWER_OFF
  2083 ;;		_POWER_ON
  2084 ;;		_SELECTOR_LCM
  2085 ;;		_SELECTOR_WDT
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091     0213                     _RESET_POWER:	
  2092                           ;psect for function _RESET_POWER
  2093                           
  2094     0213                     l1649:	
  2095                           ;incstack = 0
  2096                           ; Regs used in _RESET_POWER: [wreg+status,2+status,0+pclath+cstack]
  2097                           
  2098                           
  2099                           ;main.c: 116:     LOCK_CNTL_LOW();
  2100     0213  3183  232B  3182   	fcall	_LOCK_CNTL_LOW
  2101                           
  2102                           ;main.c: 117:     POWER_OFF();
  2103     0216  3183  2328  3182   	fcall	_POWER_OFF
  2104     0219                     l1651:
  2105                           
  2106                           ;main.c: 118:     _delay((unsigned long)((100)*(500000/4000.0)));
  2107     0219  3011               	movlw	17
  2108     021A  0020               	movlb	0	; select bank0
  2109     021B  00A8               	movwf	??_RESET_POWER
  2110     021C  303A               	movlw	58
  2111     021D                     u987:
  2112     021D  0B89               	decfsz	9,f
  2113     021E  2A1D               	goto	u987
  2114     021F  0BA8               	decfsz	??_RESET_POWER,f
  2115     0220  2A1D               	goto	u987
  2116     0221  0000               	nop
  2117                           
  2118                           ;main.c: 119:     SELECTOR_WDT();
  2119     0222  3182  22FB  3182   	fcall	_SELECTOR_WDT
  2120     0225                     l1653:
  2121                           
  2122                           ;main.c: 120:     _delay((unsigned long)((300)*(500000/4000.0)));
  2123     0225  3031               	movlw	49
  2124     0226  0020               	movlb	0	; select bank0
  2125     0227  00A8               	movwf	??_RESET_POWER
  2126     0228  30B2               	movlw	178
  2127     0229                     u997:
  2128     0229  0B89               	decfsz	9,f
  2129     022A  2A29               	goto	u997
  2130     022B  0BA8               	decfsz	??_RESET_POWER,f
  2131     022C  2A29               	goto	u997
  2132     022D  0000               	nop
  2133     022E                     l1655:
  2134                           
  2135                           ;main.c: 121:     SELECTOR_LCM();
  2136     022E  3183  2304  3182   	fcall	_SELECTOR_LCM
  2137                           
  2138                           ;main.c: 122:     _delay((unsigned long)((100)*(500000/4000.0)));
  2139     0231  3011               	movlw	17
  2140     0232  0020               	movlb	0	; select bank0
  2141     0233  00A8               	movwf	??_RESET_POWER
  2142     0234  303A               	movlw	58
  2143     0235                     u1007:
  2144     0235  0B89               	decfsz	9,f
  2145     0236  2A35               	goto	u1007
  2146     0237  0BA8               	decfsz	??_RESET_POWER,f
  2147     0238  2A35               	goto	u1007
  2148     0239  0000               	nop
  2149     023A                     l1657:
  2150                           
  2151                           ;main.c: 123:     POWER_ON();
  2152     023A  3183  2325  3182   	fcall	_POWER_ON
  2153     023D                     l1659:
  2154                           
  2155                           ;main.c: 124:     WDT_MODE = CHECK_ALIVE;
  2156     023D  0020               	movlb	0	; select bank0
  2157     023E  01A6               	clrf	_WDT_MODE
  2158     023F                     l1661:
  2159                           
  2160                           ;main.c: 125:     tick_counter = 0;
  2161     023F  01A5               	clrf	_tick_counter
  2162     0240                     l1663:
  2163                           
  2164                           ;main.c: 126:     boot_time = 0;
  2165     0240  01A4               	clrf	_boot_time
  2166     0241                     l272:
  2167     0241  0008               	return
  2168     0242                     __end_of_RESET_POWER:
  2169                           
  2170                           	psect	text9
  2171     02FB                     __ptext9:	
  2172 ;; *************** function _SELECTOR_WDT *****************
  2173 ;; Defined at:
  2174 ;;		line 55 in file "main.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1
  2188 ;;      Params:         0       0       0
  2189 ;;      Locals:         0       0       0
  2190 ;;      Temps:          0       0       0
  2191 ;;      Totals:         0       0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 4
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_RESET_POWER
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203     02FB                     _SELECTOR_WDT:	
  2204                           ;psect for function _SELECTOR_WDT
  2205                           
  2206     02FB                     l1473:	
  2207                           ;incstack = 0
  2208                           ; Regs used in _SELECTOR_WDT: [wreg]
  2209                           
  2210                           
  2211                           ;main.c: 57:     PORTAbits.RA0 = 0;
  2212     02FB  0020               	movlb	0	; select bank0
  2213     02FC  100C               	bcf	12,0	;volatile
  2214                           
  2215                           ;main.c: 58:     OPERATION_MODE = WDT;
  2216     02FD  01FD               	clrf	_OPERATION_MODE
  2217     02FE  0AFD               	incf	_OPERATION_MODE,f
  2218     02FF                     l1475:
  2219                           
  2220                           ;main.c: 59:     _delay((unsigned long)((1)*(500000/4000.0)));
  2221     02FF  3029               	movlw	41
  2222     0300                     u1017:
  2223     0300  0B89               	decfsz	9,f
  2224     0301  2B00               	goto	u1017
  2225     0302  3200               	nop2
  2226     0303                     l241:
  2227     0303  0008               	return
  2228     0304                     __end_of_SELECTOR_WDT:
  2229                           
  2230                           	psect	text10
  2231     0304                     __ptext10:	
  2232 ;; *************** function _SELECTOR_LCM *****************
  2233 ;; Defined at:
  2234 ;;		line 49 in file "main.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1
  2248 ;;      Params:         0       0       0
  2249 ;;      Locals:         0       0       0
  2250 ;;      Temps:          0       0       0
  2251 ;;      Totals:         0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 4
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_RESET_POWER
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263     0304                     _SELECTOR_LCM:	
  2264                           ;psect for function _SELECTOR_LCM
  2265                           
  2266     0304                     l1469:	
  2267                           ;incstack = 0
  2268                           ; Regs used in _SELECTOR_LCM: [wreg]
  2269                           
  2270                           
  2271                           ;main.c: 51:     PORTAbits.RA0 = 1;
  2272     0304  0020               	movlb	0	; select bank0
  2273     0305  140C               	bsf	12,0	;volatile
  2274     0306                     l1471:
  2275                           
  2276                           ;main.c: 52:     OPERATION_MODE = LCM;
  2277     0306  3002               	movlw	2
  2278     0307  00FD               	movwf	_OPERATION_MODE
  2279                           
  2280                           ;main.c: 53:     _delay((unsigned long)((1)*(500000/4000.0)));
  2281     0308  3029               	movlw	41
  2282     0309                     u1027:
  2283     0309  0B89               	decfsz	9,f
  2284     030A  2B09               	goto	u1027
  2285     030B  3200               	nop2
  2286     030C                     l238:
  2287     030C  0008               	return
  2288     030D                     __end_of_SELECTOR_LCM:
  2289                           
  2290                           	psect	text11
  2291     0325                     __ptext11:	
  2292 ;; *************** function _POWER_ON *****************
  2293 ;; Defined at:
  2294 ;;		line 69 in file "main.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		None
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1
  2308 ;;      Params:         0       0       0
  2309 ;;      Locals:         0       0       0
  2310 ;;      Temps:          0       0       0
  2311 ;;      Totals:         0       0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 4
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_RESET_POWER
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323     0325                     _POWER_ON:	
  2324                           ;psect for function _POWER_ON
  2325                           
  2326     0325                     l1479:	
  2327                           ;incstack = 0
  2328                           ; Regs used in _POWER_ON: []
  2329                           
  2330                           
  2331                           ;main.c: 71:     PORTAbits.RA2 = 1;
  2332     0325  0020               	movlb	0	; select bank0
  2333     0326  150C               	bsf	12,2	;volatile
  2334     0327                     l250:
  2335     0327  0008               	return
  2336     0328                     __end_of_POWER_ON:
  2337                           
  2338                           	psect	text12
  2339     0328                     __ptext12:	
  2340 ;; *************** function _POWER_OFF *****************
  2341 ;; Defined at:
  2342 ;;		line 73 in file "main.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		None
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1
  2356 ;;      Params:         0       0       0
  2357 ;;      Locals:         0       0       0
  2358 ;;      Temps:          0       0       0
  2359 ;;      Totals:         0       0       0
  2360 ;;Total ram usage:        0 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 4
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_RESET_POWER
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371     0328                     _POWER_OFF:	
  2372                           ;psect for function _POWER_OFF
  2373                           
  2374     0328                     l1481:	
  2375                           ;incstack = 0
  2376                           ; Regs used in _POWER_OFF: []
  2377                           
  2378                           
  2379                           ;main.c: 75:     PORTAbits.RA2 = 0;
  2380     0328  0020               	movlb	0	; select bank0
  2381     0329  110C               	bcf	12,2	;volatile
  2382     032A                     l253:
  2383     032A  0008               	return
  2384     032B                     __end_of_POWER_OFF:
  2385                           
  2386                           	psect	text13
  2387     032B                     __ptext13:	
  2388 ;; *************** function _LOCK_CNTL_LOW *****************
  2389 ;; Defined at:
  2390 ;;		line 65 in file "main.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		None
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1
  2404 ;;      Params:         0       0       0
  2405 ;;      Locals:         0       0       0
  2406 ;;      Temps:          0       0       0
  2407 ;;      Totals:         0       0       0
  2408 ;;Total ram usage:        0 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 4
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_RESET_POWER
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419     032B                     _LOCK_CNTL_LOW:	
  2420                           ;psect for function _LOCK_CNTL_LOW
  2421                           
  2422     032B                     l1477:	
  2423                           ;incstack = 0
  2424                           ; Regs used in _LOCK_CNTL_LOW: []
  2425                           
  2426                           
  2427                           ;main.c: 67:     PORTAbits.RA1 = 0;
  2428     032B  0020               	movlb	0	; select bank0
  2429     032C  108C               	bcf	12,1	;volatile
  2430     032D                     l247:
  2431     032D  0008               	return
  2432     032E                     __end_of_LOCK_CNTL_LOW:
  2433                           
  2434                           	psect	text14
  2435     032E                     __ptext14:	
  2436 ;; *************** function _LOCK_CNTL_HIGH *****************
  2437 ;; Defined at:
  2438 ;;		line 61 in file "main.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		None
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1
  2452 ;;      Params:         0       0       0
  2453 ;;      Locals:         0       0       0
  2454 ;;      Temps:          0       0       0
  2455 ;;      Totals:         0       0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; Hardware stack levels required when called: 4
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466     032E                     _LOCK_CNTL_HIGH:	
  2467                           ;psect for function _LOCK_CNTL_HIGH
  2468                           
  2469     032E                     l1623:	
  2470                           ;incstack = 0
  2471                           ; Regs used in _LOCK_CNTL_HIGH: []
  2472                           
  2473                           
  2474                           ;main.c: 63:     PORTAbits.RA1 = 1;
  2475     032E  0020               	movlb	0	; select bank0
  2476     032F  148C               	bsf	12,1	;volatile
  2477     0330                     l244:
  2478     0330  0008               	return
  2479     0331                     __end_of_LOCK_CNTL_HIGH:
  2480                           
  2481                           	psect	intentry
  2482     0004                     __pintentry:	
  2483 ;; *************** function _INTERRUPT_InterruptManager *****************
  2484 ;; Defined at:
  2485 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;		None
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1
  2499 ;;      Params:         0       0       0
  2500 ;;      Locals:         0       0       0
  2501 ;;      Temps:          0       0       0
  2502 ;;      Totals:         0       0       0
  2503 ;;Total ram usage:        0 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 3
  2506 ;; This function calls:
  2507 ;;		_EUSART_Receive_ISR
  2508 ;;		_PIN_MANAGER_IOC
  2509 ;;		_TMR0_ISR
  2510 ;; This function is called by:
  2511 ;;		Interrupt level 1
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515     0004                     _INTERRUPT_InterruptManager:
  2516                           
  2517                           ;incstack = 0
  2518     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2519                           
  2520                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2521     0005  3180               	pagesel	$
  2522     0006                     i1l1665:
  2523                           
  2524                           ;mcc_generated_files/interrupt_manager.c: 54:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  2525     0006  1D8B               	btfss	11,3	;volatile
  2526     0007  2809               	goto	u78_21
  2527     0008  280A               	goto	u78_20
  2528     0009                     u78_21:
  2529     0009  2813               	goto	i1l158
  2530     000A                     u78_20:
  2531     000A                     i1l1667:
  2532     000A  1C0B               	btfss	11,0	;volatile
  2533     000B  280D               	goto	u79_21
  2534     000C  280E               	goto	u79_20
  2535     000D                     u79_21:
  2536     000D  2813               	goto	i1l158
  2537     000E                     u79_20:
  2538     000E                     i1l1669:
  2539                           
  2540                           ;mcc_generated_files/interrupt_manager.c: 55:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 56:         PIN_MANAGER_IOC();
  2541     000E  3182  22C8  3180   	fcall	_PIN_MANAGER_IOC
  2542     0011                     i1l1671:
  2543                           
  2544                           ;mcc_generated_files/interrupt_manager.c: 59:         INTCONbits.IOCIF = 0;
  2545     0011  100B               	bcf	11,0	;volatile
  2546                           
  2547                           ;mcc_generated_files/interrupt_manager.c: 60:     }
  2548     0012  282D               	goto	i1l164
  2549     0013                     i1l158:	
  2550                           ;mcc_generated_files/interrupt_manager.c: 61:     else if(PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
  2551                           
  2552     0013  0021               	movlb	1	; select bank1
  2553     0014  1E91               	btfss	17,5	;volatile
  2554     0015  2817               	goto	u80_21
  2555     0016  2818               	goto	u80_20
  2556     0017                     u80_21:
  2557     0017  2821               	goto	i1l160
  2558     0018                     u80_20:
  2559     0018                     i1l1673:
  2560     0018  0020               	movlb	0	; select bank0
  2561     0019  1E91               	btfss	17,5	;volatile
  2562     001A  281C               	goto	u81_21
  2563     001B  281D               	goto	u81_20
  2564     001C                     u81_21:
  2565     001C  2821               	goto	i1l160
  2566     001D                     u81_20:
  2567     001D                     i1l1675:
  2568                           
  2569                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         EUSART_Receive_ISR();
  2570     001D  3180  2041  3180   	fcall	_EUSART_Receive_ISR
  2571                           
  2572                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  2573     0020  282D               	goto	i1l164
  2574     0021                     i1l160:	
  2575                           ;mcc_generated_files/interrupt_manager.c: 65:     else if(INTCONbits.TMR0IE == 1 && INTC
      +                          ONbits.TMR0IF == 1)
  2576                           
  2577     0021  1E8B               	btfss	11,5	;volatile
  2578     0022  2824               	goto	u82_21
  2579     0023  2825               	goto	u82_20
  2580     0024                     u82_21:
  2581     0024  282D               	goto	i1l161
  2582     0025                     u82_20:
  2583     0025                     i1l1677:
  2584     0025  1D0B               	btfss	11,2	;volatile
  2585     0026  2828               	goto	u83_21
  2586     0027  2829               	goto	u83_20
  2587     0028                     u83_21:
  2588     0028  282D               	goto	i1l161
  2589     0029                     u83_20:
  2590     0029                     i1l1679:
  2591                           
  2592                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         TMR0_ISR();
  2593     0029  3182  228D  3180   	fcall	_TMR0_ISR
  2594                           
  2595                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  2596     002C  282D               	goto	i1l164
  2597     002D                     i1l161:
  2598     002D                     i1l164:
  2599     002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2600     002E  0009               	retfie
  2601     002F                     __end_of_INTERRUPT_InterruptManager:
  2602                           
  2603                           	psect	text16
  2604     028D                     __ptext16:	
  2605 ;; *************** function _TMR0_ISR *****************
  2606 ;; Defined at:
  2607 ;;		line 85 in file "mcc_generated_files/tmr0.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0, pclath, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1
  2621 ;;      Params:         0       0       0
  2622 ;;      Locals:         0       0       0
  2623 ;;      Temps:          0       0       0
  2624 ;;      Totals:         0       0       0
  2625 ;;Total ram usage:        0 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 1
  2628 ;; This function calls:
  2629 ;;		_TMR0_CallBack
  2630 ;; This function is called by:
  2631 ;;		_INTERRUPT_InterruptManager
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635     028D                     _TMR0_ISR:	
  2636                           ;psect for function _TMR0_ISR
  2637                           
  2638     028D                     i1l1615:	
  2639                           ;incstack = 0
  2640                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2641                           
  2642                           
  2643                           ;mcc_generated_files/tmr0.c: 87:     static volatile unsigned int CountCallBack = 0;;mcc
      +                          _generated_files/tmr0.c: 90:     INTCONbits.TMR0IF = 0;
  2644     028D  110B               	bcf	11,2	;volatile
  2645     028E                     i1l1617:
  2646                           
  2647                           ;mcc_generated_files/tmr0.c: 92:     TMR0 = timer0ReloadVal;
  2648     028E  0878               	movf	_timer0ReloadVal,w	;volatile
  2649     028F  0020               	movlb	0	; select bank0
  2650     0290  0095               	movwf	21	;volatile
  2651                           
  2652                           ;mcc_generated_files/tmr0.c: 95:     if (++CountCallBack >= 2)
  2653     0291  3001               	movlw	1
  2654     0292  07A0               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  2655     0293  3000               	movlw	0
  2656     0294  3DA1               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  2657     0295  3000               	movlw	0
  2658     0296  0221               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  2659     0297  3002               	movlw	2
  2660     0298  1903               	skipnz
  2661     0299  0220               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  2662     029A  1C03               	skipc
  2663     029B  2A9D               	goto	u74_21
  2664     029C  2A9E               	goto	u74_20
  2665     029D                     u74_21:
  2666     029D  2AA4               	goto	i1l201
  2667     029E                     u74_20:
  2668     029E                     i1l1619:
  2669                           
  2670                           ;mcc_generated_files/tmr0.c: 96:     {;mcc_generated_files/tmr0.c: 98:         TMR0_Call
      +                          Back();
  2671     029E  3183  230D  3182   	fcall	_TMR0_CallBack
  2672     02A1                     i1l1621:
  2673                           
  2674                           ;mcc_generated_files/tmr0.c: 101:         CountCallBack = 0;
  2675     02A1  0020               	movlb	0	; select bank0
  2676     02A2  01A0               	clrf	TMR0_ISR@CountCallBack	;volatile
  2677     02A3  01A1               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  2678     02A4                     i1l201:
  2679     02A4  0008               	return
  2680     02A5                     __end_of_TMR0_ISR:
  2681                           
  2682                           	psect	text17
  2683     030D                     __ptext17:	
  2684 ;; *************** function _TMR0_CallBack *****************
  2685 ;; Defined at:
  2686 ;;		line 107 in file "mcc_generated_files/tmr0.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1
  2700 ;;      Params:         0       0       0
  2701 ;;      Locals:         0       0       0
  2702 ;;      Temps:          1       0       0
  2703 ;;      Totals:         1       0       0
  2704 ;;Total ram usage:        1 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_TMR0_ISR
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713     030D                     _TMR0_CallBack:	
  2714                           ;psect for function _TMR0_CallBack
  2715                           
  2716     030D                     i1l1463:	
  2717                           ;incstack = 0
  2718                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
  2719                           
  2720                           
  2721                           ;mcc_generated_files/tmr0.c: 112:     tick_counter = tick_counter + 1;
  2722     030D  0020               	movlb	0	; select bank0
  2723     030E  0825               	movf	_tick_counter,w
  2724     030F  3E01               	addlw	1
  2725     0310  00A5               	movwf	_tick_counter
  2726     0311                     i1l1467:
  2727                           
  2728                           ;mcc_generated_files/tmr0.c: 117:     boot_time++;
  2729     0311  3001               	movlw	1
  2730     0312  00F0               	movwf	??_TMR0_CallBack
  2731     0313  0870               	movf	??_TMR0_CallBack,w
  2732     0314  07A4               	addwf	_boot_time,f
  2733     0315                     i1l205:
  2734     0315  0008               	return
  2735     0316                     __end_of_TMR0_CallBack:
  2736                           
  2737                           	psect	text18
  2738     02C8                     __ptext18:	
  2739 ;; *************** function _PIN_MANAGER_IOC *****************
  2740 ;; Defined at:
  2741 ;;		line 129 in file "main.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1
  2755 ;;      Params:         0       0       0
  2756 ;;      Locals:         0       0       0
  2757 ;;      Temps:          0       0       0
  2758 ;;      Totals:         0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_INTERRUPT_InterruptManager
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768     02C8                     _PIN_MANAGER_IOC:	
  2769                           ;psect for function _PIN_MANAGER_IOC
  2770                           
  2771     02C8                     i1l1607:	
  2772                           ;incstack = 0
  2773                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0]
  2774                           
  2775                           
  2776                           ;main.c: 132:     if (IOCAFbits.IOCAF3 == 1)
  2777     02C8  0027               	movlb	7	; select bank7
  2778     02C9  1D93               	btfss	19,3	;volatile
  2779     02CA  2ACC               	goto	u72_21
  2780     02CB  2ACD               	goto	u72_20
  2781     02CC                     u72_21:
  2782     02CC  2AD7               	goto	i1l277
  2783     02CD                     u72_20:
  2784     02CD                     i1l1609:
  2785                           
  2786                           ;main.c: 133:     {;main.c: 134:         IOCAFbits.IOCAF3 = 0;
  2787     02CD  1193               	bcf	19,3	;volatile
  2788     02CE                     i1l1611:
  2789                           
  2790                           ;main.c: 136:         if(OPERATION_MODE == LCM)
  2791     02CE  3002               	movlw	2
  2792     02CF  067D               	xorwf	_OPERATION_MODE,w
  2793     02D0  1D03               	btfss	3,2
  2794     02D1  2AD3               	goto	u73_21
  2795     02D2  2AD4               	goto	u73_20
  2796     02D3                     u73_21:
  2797     02D3  2AD7               	goto	i1l277
  2798     02D4                     u73_20:
  2799     02D4                     i1l1613:
  2800                           
  2801                           ;main.c: 137:         {;main.c: 138:             LCM_MODE = OPEN_ONCE;
  2802     02D4  30A1               	movlw	161
  2803     02D5  0020               	movlb	0	; select bank0
  2804     02D6  00A7               	movwf	_LCM_MODE
  2805     02D7                     i1l277:
  2806     02D7  0008               	return
  2807     02D8                     __end_of_PIN_MANAGER_IOC:
  2808                           
  2809                           	psect	text19
  2810     0041                     __ptext19:	
  2811 ;; *************** function _EUSART_Receive_ISR *****************
  2812 ;; Defined at:
  2813 ;;		line 106 in file "mcc_generated_files/eusart.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  buffer          1    7[COMMON] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1
  2827 ;;      Params:         0       0       0
  2828 ;;      Locals:         1       0       0
  2829 ;;      Temps:          2       0       0
  2830 ;;      Totals:         3       0       0
  2831 ;;Total ram usage:        3 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 2
  2834 ;; This function calls:
  2835 ;;		_Response_ACK
  2836 ;; This function is called by:
  2837 ;;		_INTERRUPT_InterruptManager
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841     0041                     _EUSART_Receive_ISR:	
  2842                           ;psect for function _EUSART_Receive_ISR
  2843                           
  2844     0041                     i1l1485:	
  2845                           ;incstack = 0
  2846                           ; Regs used in _EUSART_Receive_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2847                           
  2848                           
  2849                           ;mcc_generated_files/eusart.c: 108:     if(1 == RCSTAbits.OERR)
  2850     0041  0023               	movlb	3	; select bank3
  2851     0042  1C9D               	btfss	29,1	;volatile
  2852     0043  2845               	goto	u49_21
  2853     0044  2846               	goto	u49_20
  2854     0045                     u49_21:
  2855     0045  2848               	goto	i1l1489
  2856     0046                     u49_20:
  2857     0046                     i1l1487:
  2858                           
  2859                           ;mcc_generated_files/eusart.c: 109:     {;mcc_generated_files/eusart.c: 111:         RCS
      +                          TAbits.CREN = 0;
  2860     0046  121D               	bcf	29,4	;volatile
  2861                           
  2862                           ;mcc_generated_files/eusart.c: 112:         RCSTAbits.CREN = 1;
  2863     0047  161D               	bsf	29,4	;volatile
  2864     0048                     i1l1489:
  2865     0048                     i1l1491:
  2866                           
  2867                           ;mcc_generated_files/eusart.c: 120:     buffer = RCREG;
  2868     0048  0819               	movf	25,w	;volatile
  2869     0049  00F7               	movwf	EUSART_Receive_ISR@buffer
  2870     004A                     i1l1493:
  2871                           
  2872                           ;mcc_generated_files/eusart.c: 122:     if(!header_received)
  2873     004A  0020               	movlb	0	; select bank0
  2874     004B  0823               	movf	EUSART_Receive_ISR@header_received,w
  2875     004C  1D03               	btfss	3,2
  2876     004D  284F               	goto	u50_21
  2877     004E  2850               	goto	u50_20
  2878     004F                     u50_21:
  2879     004F  2867               	goto	i1l1505
  2880     0050                     u50_20:
  2881     0050                     i1l1495:
  2882                           
  2883                           ;mcc_generated_files/eusart.c: 123:     {;mcc_generated_files/eusart.c: 124:         if(
      +                          buffer == 0x02)
  2884     0050  3002               	movlw	2
  2885     0051  0677               	xorwf	EUSART_Receive_ISR@buffer,w
  2886     0052  1D03               	btfss	3,2
  2887     0053  2855               	goto	u51_21
  2888     0054  2856               	goto	u51_20
  2889     0055                     u51_21:
  2890     0055  2863               	goto	i1l1503
  2891     0056                     u51_20:
  2892     0056                     i1l1497:
  2893                           
  2894                           ;mcc_generated_files/eusart.c: 125:         {;mcc_generated_files/eusart.c: 126:        
      +                               header_received = 1;
  2895     0056  01A3               	clrf	EUSART_Receive_ISR@header_received
  2896     0057  0AA3               	incf	EUSART_Receive_ISR@header_received,f
  2897     0058                     i1l1499:
  2898                           
  2899                           ;mcc_generated_files/eusart.c: 127:             command[index] = 0x02;
  2900     0058  0879               	movf	EUSART_Receive_ISR@index,w
  2901     0059  3E7A               	addlw	(low (_command| 0))& (0+255)
  2902     005A  0086               	movwf	6
  2903     005B  0187               	clrf	7
  2904     005C  3002               	movlw	2
  2905     005D  0081               	movwf	1
  2906     005E                     i1l1501:
  2907                           
  2908                           ;mcc_generated_files/eusart.c: 128:             index++;
  2909     005E  3001               	movlw	1
  2910     005F  00F5               	movwf	??_EUSART_Receive_ISR
  2911     0060  0875               	movf	??_EUSART_Receive_ISR,w
  2912     0061  07F9               	addwf	EUSART_Receive_ISR@index,f
  2913                           
  2914                           ;mcc_generated_files/eusart.c: 129:         }
  2915     0062  28BC               	goto	i1l1537
  2916     0063                     i1l1503:
  2917                           
  2918                           ;mcc_generated_files/eusart.c: 131:         {;mcc_generated_files/eusart.c: 132:        
      +                               header_received = 0;
  2919     0063  01A3               	clrf	EUSART_Receive_ISR@header_received
  2920                           
  2921                           ;mcc_generated_files/eusart.c: 133:             data_received = 0;
  2922     0064  01A2               	clrf	EUSART_Receive_ISR@data_received
  2923                           
  2924                           ;mcc_generated_files/eusart.c: 134:             index = 0;
  2925     0065  01F9               	clrf	EUSART_Receive_ISR@index
  2926     0066  28BC               	goto	i1l1537
  2927     0067                     i1l1505:
  2928                           
  2929                           ;mcc_generated_files/eusart.c: 138:     {;mcc_generated_files/eusart.c: 139:         com
      +                          mand[index] = buffer;
  2930     0067  0879               	movf	EUSART_Receive_ISR@index,w
  2931     0068  3E7A               	addlw	(low (_command| 0))& (0+255)
  2932     0069  0086               	movwf	6
  2933     006A  0187               	clrf	7
  2934     006B  0877               	movf	EUSART_Receive_ISR@buffer,w
  2935     006C  0081               	movwf	1
  2936     006D                     i1l1507:
  2937                           
  2938                           ;mcc_generated_files/eusart.c: 140:         index++;
  2939     006D  3001               	movlw	1
  2940     006E  00F5               	movwf	??_EUSART_Receive_ISR
  2941     006F  0875               	movf	??_EUSART_Receive_ISR,w
  2942     0070  07F9               	addwf	EUSART_Receive_ISR@index,f
  2943     0071                     i1l1509:
  2944                           
  2945                           ;mcc_generated_files/eusart.c: 141:         if(index == sizeof(command))
  2946     0071  3003               	movlw	3
  2947     0072  0679               	xorwf	EUSART_Receive_ISR@index,w
  2948     0073  1D03               	btfss	3,2
  2949     0074  2876               	goto	u52_21
  2950     0075  2877               	goto	u52_20
  2951     0076                     u52_21:
  2952     0076  28BC               	goto	i1l1537
  2953     0077                     u52_20:
  2954     0077                     i1l1511:
  2955                           
  2956                           ;mcc_generated_files/eusart.c: 142:         {;mcc_generated_files/eusart.c: 149:      if
      +                           ( (command[1] == 0x11) || (command[1] == 0x12) || (command[1] == 0x13)
  2957     0077  3011               	movlw	17
  2958     0078  067B               	xorwf	_command+1,w
  2959     0079  1903               	btfsc	3,2
  2960     007A  287C               	goto	u53_21
  2961     007B  287D               	goto	u53_20
  2962     007C                     u53_21:
  2963     007C  28B9               	goto	i1l112
  2964     007D                     u53_20:
  2965     007D                     i1l1513:
  2966     007D  3012               	movlw	18
  2967     007E  067B               	xorwf	_command+1,w
  2968     007F  1903               	btfsc	3,2
  2969     0080  2882               	goto	u54_21
  2970     0081  2883               	goto	u54_20
  2971     0082                     u54_21:
  2972     0082  28B9               	goto	i1l112
  2973     0083                     u54_20:
  2974     0083                     i1l1515:
  2975     0083  3013               	movlw	19
  2976     0084  067B               	xorwf	_command+1,w
  2977     0085  1903               	btfsc	3,2
  2978     0086  2888               	goto	u55_21
  2979     0087  2889               	goto	u55_20
  2980     0088                     u55_21:
  2981     0088  28B9               	goto	i1l112
  2982     0089                     u55_20:
  2983     0089                     i1l1517:
  2984     0089  3015               	movlw	21
  2985     008A  067B               	xorwf	_command+1,w
  2986     008B  1903               	btfsc	3,2
  2987     008C  288E               	goto	u56_21
  2988     008D  288F               	goto	u56_20
  2989     008E                     u56_21:
  2990     008E  28B9               	goto	i1l112
  2991     008F                     u56_20:
  2992     008F                     i1l1519:
  2993     008F  3021               	movlw	33
  2994     0090  067B               	xorwf	_command+1,w
  2995     0091  1903               	btfsc	3,2
  2996     0092  2894               	goto	u57_21
  2997     0093  2895               	goto	u57_20
  2998     0094                     u57_21:
  2999     0094  28B9               	goto	i1l112
  3000     0095                     u57_20:
  3001     0095                     i1l1521:
  3002     0095  3022               	movlw	34
  3003     0096  067B               	xorwf	_command+1,w
  3004     0097  1903               	btfsc	3,2
  3005     0098  289A               	goto	u58_21
  3006     0099  289B               	goto	u58_20
  3007     009A                     u58_21:
  3008     009A  28B9               	goto	i1l112
  3009     009B                     u58_20:
  3010     009B                     i1l1523:
  3011     009B  3023               	movlw	35
  3012     009C  067B               	xorwf	_command+1,w
  3013     009D  1903               	btfsc	3,2
  3014     009E  28A0               	goto	u59_21
  3015     009F  28A1               	goto	u59_20
  3016     00A0                     u59_21:
  3017     00A0  28B9               	goto	i1l112
  3018     00A1                     u59_20:
  3019     00A1                     i1l1525:
  3020     00A1  30A1               	movlw	161
  3021     00A2  067B               	xorwf	_command+1,w
  3022     00A3  1903               	btfsc	3,2
  3023     00A4  28A6               	goto	u60_21
  3024     00A5  28A7               	goto	u60_20
  3025     00A6                     u60_21:
  3026     00A6  28B9               	goto	i1l112
  3027     00A7                     u60_20:
  3028     00A7                     i1l1527:
  3029     00A7  30A2               	movlw	162
  3030     00A8  067B               	xorwf	_command+1,w
  3031     00A9  1903               	btfsc	3,2
  3032     00AA  28AC               	goto	u61_21
  3033     00AB  28AD               	goto	u61_20
  3034     00AC                     u61_21:
  3035     00AC  28B9               	goto	i1l112
  3036     00AD                     u61_20:
  3037     00AD                     i1l1529:
  3038     00AD  30A3               	movlw	163
  3039     00AE  067B               	xorwf	_command+1,w
  3040     00AF  1903               	btfsc	3,2
  3041     00B0  28B2               	goto	u62_21
  3042     00B1  28B3               	goto	u62_20
  3043     00B2                     u62_21:
  3044     00B2  28B9               	goto	i1l112
  3045     00B3                     u62_20:
  3046     00B3                     i1l1531:
  3047     00B3  30A4               	movlw	164
  3048     00B4  067B               	xorwf	_command+1,w
  3049     00B5  1D03               	btfss	3,2
  3050     00B6  28B8               	goto	u63_21
  3051     00B7  28B9               	goto	u63_20
  3052     00B8                     u63_21:
  3053     00B8  2863               	goto	i1l1503
  3054     00B9                     u63_20:
  3055     00B9                     i1l112:
  3056                           
  3057                           ;mcc_generated_files/eusart.c: 153:             {;mcc_generated_files/eusart.c: 154:    
      +                                       data_received = 1;
  3058     00B9  01A2               	clrf	EUSART_Receive_ISR@data_received
  3059     00BA  0AA2               	incf	EUSART_Receive_ISR@data_received,f
  3060     00BB                     i1l1533:
  3061                           
  3062                           ;mcc_generated_files/eusart.c: 155:                 index = 0;
  3063     00BB  01F9               	clrf	EUSART_Receive_ISR@index
  3064     00BC                     i1l1537:	
  3065                           ;mcc_generated_files/eusart.c: 169:             }
  3066                           
  3067                           
  3068                           ;mcc_generated_files/eusart.c: 179:     if(data_received)
  3069     00BC  0822               	movf	EUSART_Receive_ISR@data_received,w
  3070     00BD  1903               	btfsc	3,2
  3071     00BE  28C0               	goto	u64_21
  3072     00BF  28C1               	goto	u64_20
  3073     00C0                     u64_21:
  3074     00C0  294A               	goto	i1l141
  3075     00C1                     u64_20:
  3076     00C1                     i1l1539:
  3077                           
  3078                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         tic
      +                          k_counter = 0;
  3079     00C1  01A5               	clrf	_tick_counter
  3080                           
  3081                           ;mcc_generated_files/eusart.c: 182:         header_received = 0;
  3082     00C2  01A3               	clrf	EUSART_Receive_ISR@header_received
  3083                           
  3084                           ;mcc_generated_files/eusart.c: 183:         data_received = 0;
  3085     00C3  01A2               	clrf	EUSART_Receive_ISR@data_received
  3086     00C4                     i1l1541:
  3087                           
  3088                           ;mcc_generated_files/eusart.c: 185:         if(OPERATION_MODE == WDT)
  3089     00C4  037D               	decf	_OPERATION_MODE,w
  3090     00C5  1D03               	btfss	3,2
  3091     00C6  28C8               	goto	u65_21
  3092     00C7  28C9               	goto	u65_20
  3093     00C8                     u65_21:
  3094     00C8  2921               	goto	i1l1575
  3095     00C9                     u65_20:
  3096     00C9  28FF               	goto	i1l1573
  3097     00CA                     i1l1545:
  3098                           
  3099                           ;mcc_generated_files/eusart.c: 193:                     WDT_MODE = WDT_DISABLE;
  3100     00CA  3012               	movlw	18
  3101     00CB  00A6               	movwf	_WDT_MODE
  3102                           
  3103                           ;mcc_generated_files/eusart.c: 194:                     break;
  3104     00CC  2946               	goto	i1l1593
  3105     00CD                     i1l1547:
  3106                           
  3107                           ;mcc_generated_files/eusart.c: 196:                     WDT_MODE = WDT_ENABLE;
  3108     00CD  3013               	movlw	19
  3109     00CE  00A6               	movwf	_WDT_MODE
  3110                           
  3111                           ;mcc_generated_files/eusart.c: 197:                     break;
  3112     00CF  2946               	goto	i1l1593
  3113     00D0                     i1l1549:
  3114                           
  3115                           ;mcc_generated_files/eusart.c: 204:                     WDT_MODE = WDT_DISABLE;
  3116     00D0  3012               	movlw	18
  3117     00D1  00A6               	movwf	_WDT_MODE
  3118                           
  3119                           ;mcc_generated_files/eusart.c: 205:                     live_check_time = 60;
  3120     00D2  303C               	movlw	60
  3121     00D3  00B0               	movwf	_live_check_time
  3122                           
  3123                           ;mcc_generated_files/eusart.c: 206:                     lcm_duration_time = 5;
  3124     00D4  3005               	movlw	5
  3125     00D5  00AF               	movwf	_lcm_duration_time
  3126                           
  3127                           ;mcc_generated_files/eusart.c: 207:                     lock_open_time = 3;
  3128     00D6  3003               	movlw	3
  3129     00D7  00AE               	movwf	_lock_open_time
  3130                           
  3131                           ;mcc_generated_files/eusart.c: 208:                     break;
  3132     00D8  2946               	goto	i1l1593
  3133     00D9                     i1l1551:
  3134                           
  3135                           ;mcc_generated_files/eusart.c: 210:                     if(command[2] == 0x00)
  3136     00D9  087C               	movf	_command+2,w
  3137     00DA  1D03               	btfss	3,2
  3138     00DB  28DD               	goto	u66_21
  3139     00DC  28DE               	goto	u66_20
  3140     00DD                     u66_21:
  3141     00DD  28E0               	goto	i1l1555
  3142     00DE                     u66_20:
  3143     00DE                     i1l1553:
  3144                           
  3145                           ;mcc_generated_files/eusart.c: 211:                     {;mcc_generated_files/eusart.c: 
      +                          212:                         LCM_MODE = NORMAL;
  3146     00DE  01A7               	clrf	_LCM_MODE
  3147                           
  3148                           ;mcc_generated_files/eusart.c: 213:                     }
  3149     00DF  2946               	goto	i1l1593
  3150     00E0                     i1l1555:
  3151     00E0  037C               	decf	_command+2,w
  3152     00E1  1D03               	btfss	3,2
  3153     00E2  28E4               	goto	u67_21
  3154     00E3  28E5               	goto	u67_20
  3155     00E4                     u67_21:
  3156     00E4  28E8               	goto	i1l1559
  3157     00E5                     u67_20:
  3158     00E5                     i1l1557:
  3159                           
  3160                           ;mcc_generated_files/eusart.c: 215:                     {;mcc_generated_files/eusart.c: 
      +                          216:                         LCM_MODE = OPEN_CONTINUE;
  3161     00E5  30A2               	movlw	162
  3162     00E6  00A7               	movwf	_LCM_MODE
  3163                           
  3164                           ;mcc_generated_files/eusart.c: 217:                     }
  3165     00E7  2946               	goto	i1l1593
  3166     00E8                     i1l1559:
  3167     00E8  3002               	movlw	2
  3168     00E9  067C               	xorwf	_command+2,w
  3169     00EA  1D03               	btfss	3,2
  3170     00EB  28ED               	goto	u68_21
  3171     00EC  28EE               	goto	u68_20
  3172     00ED                     u68_21:
  3173     00ED  2946               	goto	i1l1593
  3174     00EE                     u68_20:
  3175     00EE                     i1l1561:
  3176                           
  3177                           ;mcc_generated_files/eusart.c: 219:                     {;mcc_generated_files/eusart.c: 
      +                          220:                         LCM_MODE = CLOSE;
  3178     00EE  30A3               	movlw	163
  3179     00EF  00A7               	movwf	_LCM_MODE
  3180     00F0  2946               	goto	i1l1593
  3181     00F1                     i1l1563:
  3182                           
  3183                           ;mcc_generated_files/eusart.c: 224:                     lock_open_time = command[2];
  3184     00F1  087C               	movf	_command+2,w
  3185     00F2  00AE               	movwf	_lock_open_time
  3186                           
  3187                           ;mcc_generated_files/eusart.c: 225:                     break;
  3188     00F3  2946               	goto	i1l1593
  3189     00F4                     i1l1565:
  3190                           
  3191                           ;mcc_generated_files/eusart.c: 227:                     lcm_duration_time = command[2];
  3192     00F4  087C               	movf	_command+2,w
  3193     00F5  00AF               	movwf	_lcm_duration_time
  3194                           
  3195                           ;mcc_generated_files/eusart.c: 228:                     break;
  3196     00F6  2946               	goto	i1l1593
  3197     00F7                     i1l1567:
  3198                           
  3199                           ;mcc_generated_files/eusart.c: 230:                     if(command[2] == 0)
  3200     00F7  087C               	movf	_command+2,w
  3201     00F8  1D03               	btfss	3,2
  3202     00F9  28FB               	goto	u69_21
  3203     00FA  28FC               	goto	u69_20
  3204     00FB                     u69_21:
  3205     00FB  2946               	goto	i1l1593
  3206     00FC                     u69_20:
  3207     00FC                     i1l1569:
  3208                           
  3209                           ;mcc_generated_files/eusart.c: 231:                     {;mcc_generated_files/eusart.c: 
      +                          232:                         OPERATION_MODE = REBOOT;
  3210     00FC  30A4               	movlw	164
  3211     00FD  00FD               	movwf	_OPERATION_MODE
  3212     00FE  2946               	goto	i1l1593
  3213     00FF                     i1l1573:
  3214     00FF  087B               	movf	_command+1,w
  3215     0100  00F5               	movwf	??_EUSART_Receive_ISR
  3216     0101  01F6               	clrf	??_EUSART_Receive_ISR+1
  3217                           
  3218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3219                           ; Switch size 1, requested type "simple"
  3220                           ; Number of cases is 1, Range of values is 0 to 0
  3221                           ; switch strategies available:
  3222                           ; Name         Instructions Cycles
  3223                           ; simple_byte            4     3 (average)
  3224                           ; direct_byte            8     6 (fixed)
  3225                           ; jumptable            260     6 (fixed)
  3226                           ;	Chosen strategy is simple_byte
  3227     0102  0876               	movf	??_EUSART_Receive_ISR+1,w
  3228     0103  3A00               	xorlw	0	; case 0
  3229     0104  1903               	skipnz
  3230     0105  2907               	goto	i1l1881
  3231     0106  2946               	goto	i1l1593
  3232     0107                     i1l1881:
  3233                           
  3234                           ; Switch size 1, requested type "simple"
  3235                           ; Number of cases is 8, Range of values is 17 to 164
  3236                           ; switch strategies available:
  3237                           ; Name         Instructions Cycles
  3238                           ; simple_byte           25    13 (average)
  3239                           ; jumptable            263     9 (fixed)
  3240                           ;	Chosen strategy is simple_byte
  3241     0107  0875               	movf	??_EUSART_Receive_ISR,w
  3242     0108  3A11               	xorlw	17	; case 17
  3243     0109  1903               	skipnz
  3244     010A  2946               	goto	i1l1593
  3245     010B  3A03               	xorlw	3	; case 18
  3246     010C  1903               	skipnz
  3247     010D  28CA               	goto	i1l1545
  3248     010E  3A01               	xorlw	1	; case 19
  3249     010F  1903               	skipnz
  3250     0110  28CD               	goto	i1l1547
  3251     0111  3A06               	xorlw	6	; case 21
  3252     0112  1903               	skipnz
  3253     0113  28D0               	goto	i1l1549
  3254     0114  3A34               	xorlw	52	; case 33
  3255     0115  1903               	skipnz
  3256     0116  28D9               	goto	i1l1551
  3257     0117  3A03               	xorlw	3	; case 34
  3258     0118  1903               	skipnz
  3259     0119  28F1               	goto	i1l1563
  3260     011A  3A01               	xorlw	1	; case 35
  3261     011B  1903               	skipnz
  3262     011C  28F4               	goto	i1l1565
  3263     011D  3A87               	xorlw	135	; case 164
  3264     011E  1903               	skipnz
  3265     011F  28F7               	goto	i1l1567
  3266     0120  2946               	goto	i1l1593
  3267     0121                     i1l1575:
  3268     0121  3002               	movlw	2
  3269     0122  067D               	xorwf	_OPERATION_MODE,w
  3270     0123  1D03               	btfss	3,2
  3271     0124  2926               	goto	u70_21
  3272     0125  2927               	goto	u70_20
  3273     0126                     u70_21:
  3274     0126  2946               	goto	i1l1593
  3275     0127                     u70_20:
  3276     0127                     i1l1577:
  3277                           
  3278                           ;mcc_generated_files/eusart.c: 238:         {;mcc_generated_files/eusart.c: 239:        
      +                               if(command[2] == 0)
  3279     0127  087C               	movf	_command+2,w
  3280     0128  1D03               	btfss	3,2
  3281     0129  292B               	goto	u71_21
  3282     012A  292C               	goto	u71_20
  3283     012B                     u71_21:
  3284     012B  2946               	goto	i1l1593
  3285     012C                     u71_20:
  3286     012C  2930               	goto	i1l1591
  3287     012D                     i1l1581:
  3288                           
  3289                           ;mcc_generated_files/eusart.c: 244:                     LCM_MODE = OPEN_ONCE;
  3290     012D  30A1               	movlw	161
  3291     012E  00A7               	movwf	_LCM_MODE
  3292                           
  3293                           ;mcc_generated_files/eusart.c: 245:                     break;
  3294     012F  2946               	goto	i1l1593
  3295     0130                     i1l1591:
  3296     0130  087B               	movf	_command+1,w
  3297     0131  00F5               	movwf	??_EUSART_Receive_ISR
  3298     0132  01F6               	clrf	??_EUSART_Receive_ISR+1
  3299                           
  3300                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3301                           ; Switch size 1, requested type "simple"
  3302                           ; Number of cases is 1, Range of values is 0 to 0
  3303                           ; switch strategies available:
  3304                           ; Name         Instructions Cycles
  3305                           ; simple_byte            4     3 (average)
  3306                           ; direct_byte            8     6 (fixed)
  3307                           ; jumptable            260     6 (fixed)
  3308                           ;	Chosen strategy is simple_byte
  3309     0133  0876               	movf	??_EUSART_Receive_ISR+1,w
  3310     0134  3A00               	xorlw	0	; case 0
  3311     0135  1903               	skipnz
  3312     0136  2938               	goto	i1l1883
  3313     0137  2946               	goto	i1l1593
  3314     0138                     i1l1883:
  3315                           
  3316                           ; Switch size 1, requested type "simple"
  3317                           ; Number of cases is 4, Range of values is 161 to 164
  3318                           ; switch strategies available:
  3319                           ; Name         Instructions Cycles
  3320                           ; simple_byte           13     7 (average)
  3321                           ; direct_byte           17     9 (fixed)
  3322                           ; jumptable            263     9 (fixed)
  3323                           ;	Chosen strategy is simple_byte
  3324     0138  0875               	movf	??_EUSART_Receive_ISR,w
  3325     0139  3AA1               	xorlw	161	; case 161
  3326     013A  1903               	skipnz
  3327     013B  292D               	goto	i1l1581
  3328     013C  3A03               	xorlw	3	; case 162
  3329     013D  1903               	skipnz
  3330     013E  28E5               	goto	i1l1557
  3331     013F  3A01               	xorlw	1	; case 163
  3332     0140  1903               	skipnz
  3333     0141  28EE               	goto	i1l1561
  3334     0142  3A07               	xorlw	7	; case 164
  3335     0143  1903               	skipnz
  3336     0144  28FC               	goto	i1l1569
  3337     0145  2946               	goto	i1l1593
  3338     0146                     i1l1593:
  3339                           
  3340                           ;mcc_generated_files/eusart.c: 259:         Response_ACK(&command);
  3341     0146  307A               	movlw	(low (_command| 0))& (0+255)
  3342     0147  3182  226C  3180   	fcall	_Response_ACK
  3343     014A                     i1l141:
  3344     014A  0008               	return
  3345     014B                     __end_of_EUSART_Receive_ISR:
  3346                           
  3347                           	psect	text20
  3348     026C                     __ptext20:	
  3349 ;; *************** function _Response_ACK *****************
  3350 ;; Defined at:
  3351 ;;		line 97 in file "mcc_generated_files/eusart.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  ack             1    wreg     PTR unsigned char 
  3354 ;;		 -> command(3), 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  ack             1    2[COMMON] PTR unsigned char 
  3357 ;;		 -> command(3), 
  3358 ;;  i               2    3[COMMON] int 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1
  3368 ;;      Params:         0       0       0
  3369 ;;      Locals:         3       0       0
  3370 ;;      Temps:          1       0       0
  3371 ;;      Totals:         4       0       0
  3372 ;;Total ram usage:        4 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 1
  3375 ;; This function calls:
  3376 ;;		_EUSART_Write
  3377 ;; This function is called by:
  3378 ;;		_EUSART_Receive_ISR
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382     026C                     _Response_ACK:	
  3383                           ;psect for function _Response_ACK
  3384                           
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _Response_ACK: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3388                           ;Response_ACK@ack stored from wreg
  3389     026C  00F2               	movwf	Response_ACK@ack
  3390     026D                     i1l1451:
  3391                           
  3392                           ;mcc_generated_files/eusart.c: 97: void Response_ACK(uint8_t * ack);mcc_generated_files/
      +                          eusart.c: 98: {;mcc_generated_files/eusart.c: 99:     int i = 0;
  3393     026D  01F3               	clrf	Response_ACK@i
  3394     026E  01F4               	clrf	Response_ACK@i+1
  3395                           
  3396                           ;mcc_generated_files/eusart.c: 100:     for(i = 0 ; i < 3 ; i++)
  3397     026F  01F3               	clrf	Response_ACK@i
  3398     0270  01F4               	clrf	Response_ACK@i+1
  3399     0271                     i1l1457:
  3400                           
  3401                           ;mcc_generated_files/eusart.c: 101:     {;mcc_generated_files/eusart.c: 102:         EUS
      +                          ART_Write(ack[i]);
  3402     0271  0873               	movf	Response_ACK@i,w
  3403     0272  0772               	addwf	Response_ACK@ack,w
  3404     0273  00F1               	movwf	??_Response_ACK
  3405     0274  0871               	movf	??_Response_ACK,w
  3406     0275  0086               	movwf	6
  3407     0276  0187               	clrf	7
  3408     0277  0801               	movf	1,w
  3409     0278  3183  2316  3182   	fcall	_EUSART_Write
  3410     027B                     i1l1459:
  3411                           
  3412                           ;mcc_generated_files/eusart.c: 103:     }
  3413     027B  3001               	movlw	1
  3414     027C  07F3               	addwf	Response_ACK@i,f
  3415     027D  3000               	movlw	0
  3416     027E  3DF4               	addwfc	Response_ACK@i+1,f
  3417     027F                     i1l1461:
  3418     027F  0874               	movf	Response_ACK@i+1,w
  3419     0280  3A80               	xorlw	128
  3420     0281  00F1               	movwf	??_Response_ACK
  3421     0282  3080               	movlw	128
  3422     0283  0271               	subwf	??_Response_ACK,w
  3423     0284  1D03               	skipz
  3424     0285  2A88               	goto	u48_25
  3425     0286  3003               	movlw	3
  3426     0287  0273               	subwf	Response_ACK@i,w
  3427     0288                     u48_25:
  3428     0288  1C03               	skipc
  3429     0289  2A8B               	goto	u48_21
  3430     028A  2A8C               	goto	u48_20
  3431     028B                     u48_21:
  3432     028B  2A71               	goto	i1l1457
  3433     028C                     u48_20:
  3434     028C                     i1l95:
  3435     028C  0008               	return
  3436     028D                     __end_of_Response_ACK:
  3437                           
  3438                           	psect	text21
  3439     0316                     __ptext21:	
  3440 ;; *************** function _EUSART_Write *****************
  3441 ;; Defined at:
  3442 ;;		line 91 in file "mcc_generated_files/eusart.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  txData          1    wreg     unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  txData          1    0[COMMON] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1
  3456 ;;      Params:         0       0       0
  3457 ;;      Locals:         1       0       0
  3458 ;;      Temps:          0       0       0
  3459 ;;      Totals:         1       0       0
  3460 ;;Total ram usage:        1 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_Response_ACK
  3466 ;;		_request_wdt
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470     0316                     _EUSART_Write:	
  3471                           ;psect for function _EUSART_Write
  3472                           
  3473                           
  3474                           ;incstack = 0
  3475                           ; Regs used in _EUSART_Write: [wreg]
  3476                           ;EUSART_Write@txData stored from wreg
  3477     0316  00F0               	movwf	EUSART_Write@txData
  3478     0317                     i1l1409:
  3479                           
  3480                           ;mcc_generated_files/eusart.c: 91: void EUSART_Write(uint8_t txData);mcc_generated_files
      +                          /eusart.c: 92: {;mcc_generated_files/eusart.c: 93:     TXREG = txData;
  3481     0317  0870               	movf	EUSART_Write@txData,w
  3482     0318  0023               	movlb	3	; select bank3
  3483     0319  009A               	movwf	26	;volatile
  3484     031A                     i1l87:	
  3485                           ;mcc_generated_files/eusart.c: 94:     while (!TRMT);
  3486                           
  3487     031A  1C9E               	btfss	30,1	;volatile
  3488     031B  2B1D               	goto	u47_21
  3489     031C  2B1E               	goto	u47_20
  3490     031D                     u47_21:
  3491     031D  2B1A               	goto	i1l87
  3492     031E                     u47_20:
  3493     031E                     i1l90:
  3494     031E  0008               	return
  3495     031F                     __end_of_EUSART_Write:
  3496     007E                     btemp	set	126	;btemp
  3497     007E                     int$flags	set	126
  3498     007E                     wtemp0	set	126
  3499                           
  3500                           	psect	config
  3501                           
  3502                           ;Config register CONFIG1 @ 0x8007
  3503                           ;	Oscillator Selection
  3504                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3505                           ;	Watchdog Timer Enable
  3506                           ;	WDTE = OFF, WDT disabled
  3507                           ;	Power-up Timer Enable
  3508                           ;	PWRTE = OFF, PWRT disabled
  3509                           ;	MCLR Pin Function Select
  3510                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3511                           ;	Flash Program Memory Code Protection
  3512                           ;	CP = OFF, Program memory code protection is disabled
  3513                           ;	Data Memory Code Protection
  3514                           ;	CPD = OFF, Data memory code protection is disabled
  3515                           ;	Brown-out Reset Enable
  3516                           ;	BOREN = ON, Brown-out Reset enabled
  3517                           ;	Clock Out Enable
  3518                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3519                           ;	Internal/External Switchover
  3520                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3521                           ;	Fail-Safe Clock Monitor Enable
  3522                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3523     8007                     	org	32775
  3524     8007  3FA4               	dw	16292
  3525                           
  3526                           ;Config register CONFIG2 @ 0x8008
  3527                           ;	Flash Memory Self-Write Protection
  3528                           ;	WRT = OFF, Write protection off
  3529                           ;	PLL Enable
  3530                           ;	PLLEN = OFF, 4x PLL disabled
  3531                           ;	Stack Overflow/Underflow Reset Enable
  3532                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3533                           ;	Brown-out Reset Voltage Selection
  3534                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3535                           ;	Low-Voltage Programming Enable
  3536                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3537     8008                     	org	32776
  3538     8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      6      17
    BANK1            32      0       0

Pointer List with Targets:

    Response_ACK@ack	PTR unsigned char  size(1) Largest target is 3
		 -> command(COMMON[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _TMR0_ISR->_TMR0_CallBack
    _EUSART_Receive_ISR->_Response_ACK
    _Response_ACK->_EUSART_Write

Critical Paths under _main in BANK0

    _main->_lock_open

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      92
                                              4 BANK0      2     2      0
                     _LOCK_CNTL_HIGH
                      _LOCK_CNTL_LOW
                          _POWER_OFF
                           _POWER_ON
                        _RESET_POWER
                       _SELECTOR_LCM
                       _SELECTOR_WDT
                  _SYSTEM_Initialize
                    _lock_cntl_state
                          _lock_open
 ---------------------------------------------------------------------------------
 (1) _lock_open                                            4     4      0      91
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lock_cntl_state                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RESET_POWER                                          1     1      0       0
                                              0 BANK0      1     1      0
                      _LOCK_CNTL_LOW
                          _POWER_OFF
                           _POWER_ON
                       _SELECTOR_LCM
                       _SELECTOR_WDT
 ---------------------------------------------------------------------------------
 (1) _SELECTOR_WDT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SELECTOR_LCM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _POWER_ON                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _POWER_OFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LOCK_CNTL_LOW                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LOCK_CNTL_HIGH                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           0     0      0     192
                 _EUSART_Receive_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (5) _TMR0_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Receive_ISR                                   3     3      0     192
                                              5 COMMON     3     3      0
                       _Response_ACK
 ---------------------------------------------------------------------------------
 (5) _Response_ACK                                         4     4      0     146
                                              1 COMMON     4     4      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOCK_CNTL_HIGH
   _LOCK_CNTL_LOW
   _POWER_OFF
   _POWER_ON
   _RESET_POWER
     _LOCK_CNTL_LOW
     _POWER_OFF
     _POWER_ON
     _SELECTOR_LCM
     _SELECTOR_WDT
   _SELECTOR_LCM
   _SELECTOR_WDT
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _lock_cntl_state
   _lock_open

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
     _Response_ACK
       _EUSART_Write
   _PIN_MANAGER_IOC
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      11       6       21.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      1F       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Nov 10 13:41:33 2023

                                l20 0324                                  l17 02E4  
                                l43 02B7                                  l84 02C7  
                   _timer0ReloadVal 0078                                 l241 0303  
                               l250 0327                                 l244 0330  
                               l253 032A                                 l238 030C  
                               l247 032D                                 l272 0241  
                               l257 02FA                                 l266 026B  
                               l195 02F1                                 u900 01DC  
                               u901 01DB                                 u750 02F7  
                               u910 01FB                                 u751 02F6  
                               u911 01FA                                 u760 024B  
                               u920 0207                                 u840 0181  
                               u761 024A                                 u921 0206  
                               u841 0180                                 u770 026B  
                               u850 0188                                 u771 026A  
                               u851 0187                                 u860 01A6  
                               u861 01A5                                 u870 01AF  
                               u871 01AE                                 u880 01BE  
                               u881 01BD                                 u937 0166  
                               u890 01D0                                 u891 01CF  
                               u947 0174                                 u957 020C  
                               u967 024F                                 u977 025B  
                               u987 021D                                 u997 0229  
                               wreg 0009                                l1411 02A5  
                              l1421 02B4                                l1413 02AB  
                              l1431 0323                                l1423 02B5  
                              l1415 02AE                                l1425 02B6  
                              l1417 02AF                                l1441 02F0  
                              l1433 02E5                                l1443 02B8  
                              l1427 031F                                l1419 02B2  
                              l1435 02EA                                l1445 02BB  
                              l1429 0322                                l1437 02ED  
                              l1701 015F                                l1623 032E  
                              l1471 0306                                l1447 02C4  
                              l1439 02EF                                l1711 0179  
                              l1703 0162                                l1481 0328  
                              l1473 02FB                                l1449 02C5  
                              l1633 02F9                                l1625 02F2  
                              l1641 0255                                l1721 0188  
                              l1713 017C                                l1705 016B  
                              l1475 02FF                                l1651 0219  
                              l1483 02D8                                l1627 02F7  
                              l1643 0257                                l1731 01A7  
                              l1707 016E                                l1477 032B  
                              l1469 0304                                l1661 023F  
                              l1653 0225                                l1645 0260  
                              l1637 0244                                l1741 01C0  
                              l1733 01AF                                l1725 018C  
                              l1709 0170                                l1479 0325  
                              l1663 0240                                l1655 022E  
                              l1647 0265                                l1639 024B  
                              l1735 01B2                                l1743 01C4  
                              l1719 0182                                l1727 01A0  
                              l1657 023A                                l1649 0213  
                              l1761 01FE                                l1745 01C8  
                              l1737 01B7                                l1659 023D  
                              l1747 01D0                                l1739 01BE  
                              l1755 01DD                                l1763 0201  
                              l1691 0153                                l1683 014B  
                              l1749 01D4                                l1757 01F4  
                              l1693 0155                                l1685 014E  
                              l1759 01FB                                l1767 0208  
                              l1695 0157                                l1687 014F  
                              l1697 0158                                l1689 0150  
                              l1699 015C                                l1877 0195  
                              l1879 01E6                                u1007 0235  
                              u1017 0300                                u1027 0309  
                              _LATA 010C                                i1l90 031E  
                              i1l87 031A                                i1l95 028C  
                              _TMR0 0015                                _TRMT 0CF1  
                              _WPUA 020C                                _main 014B  
                              fsr1h 0007                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                              start 002F             __end_of_TMR0_Initialize 02F2  
                     ?_EUSART_Write 0070       __end_of_OSCILLATOR_Initialize 0325  
                             ?_main 0070                               i1l112 00B9  
                             i1l201 02A4                               i1l141 014A  
                             i1l205 0315                               i1l160 0021  
                             i1l161 002D                               i1l164 002D  
                             i1l158 0013                               i1l277 02D7  
                             _RCREG 0199                               _RCSTA 019D  
                             u50_20 0050                               u50_21 004F  
                             u51_20 0056                               u51_21 0055  
                             u60_20 00A7                               u52_20 0077  
                             u60_21 00A6                               u52_21 0076  
                             u61_20 00AD                               u53_20 007D  
                             u61_21 00AC                               u53_21 007C  
                             u70_20 0127                               u62_20 00B3  
                             u54_20 0083                               u70_21 0126  
                             u62_21 00B2                               u54_21 0082  
                             u47_20 031E                               u71_20 012C  
                             u63_20 00B9                               u55_20 0089  
                             u47_21 031D                               u71_21 012B  
                             u63_21 00B8                               u55_21 0088  
                             u48_20 028C                               u64_20 00C1  
                             u56_20 008F                               u72_20 02CD  
                             u80_20 0018                               u48_21 028B  
                             u64_21 00C0                               u56_21 008E  
                             u72_21 02CC                               u80_21 0017  
                             u48_25 0288                               u65_20 00C9  
                             u57_20 0095                               u49_20 0046  
                             u73_20 02D4                               u81_20 001D  
                             u65_21 00C8                               u57_21 0094  
                             u49_21 0045                               u73_21 02D3  
                             u81_21 001C                               _TRISA 008C  
                             u66_20 00DE                               u58_20 009B  
                             u74_20 029E                               u82_20 0025  
                             u66_21 00DD                               u58_21 009A  
                             u74_21 029D                               u82_21 0024  
                             u67_20 00E5                               u59_20 00A1  
                             u83_20 0029                               u67_21 00E4  
                             u59_21 00A0                               u83_21 0028  
                             u68_20 00EE                               u68_21 00ED  
                             u69_20 00FC                               u69_21 00FB  
                             u78_20 000A                               u78_21 0009  
                             u79_20 000E                               u79_21 000D  
                             _TXREG 019A                               _TXSTA 019E  
                  __end_of_TMR0_ISR 02A5                    __end_of_POWER_ON 0328  
           __end_of_PIN_MANAGER_IOC 02D8                               status 0003  
                             wtemp0 007E                        ?_RESET_POWER 0070  
                   __initialization 0030                        __end_of_main 0213  
                    ??_EUSART_Write 0070         ?_INTERRUPT_InterruptManager 0070  
                            ??_main 002C                       _LOCK_CNTL_LOW 032B  
                            _APFCON 011D                              _ANSELA 018C  
                            i1l1501 005E                              i1l1511 0077  
                            i1l1503 0063                              i1l1409 0317  
                            i1l1521 0095                              i1l1513 007D  
                            i1l1505 0067                              i1l1451 026D  
                            i1l1531 00B3                              i1l1523 009B  
                            i1l1515 0083                              i1l1507 006D  
                            i1l1611 02CE                              i1l1461 027F  
                            i1l1541 00C4                              i1l1533 00BB  
                            i1l1525 00A1                              i1l1517 0089  
                            i1l1509 0071                              i1l1613 02D4  
                            i1l1621 02A1                              i1l1551 00D9  
                            i1l1527 00A7                              i1l1519 008F  
                            i1l1607 02C8                              i1l1463 030D  
                            i1l1615 028D                              i1l1457 0271  
                            i1l1561 00EE                              i1l1553 00DE  
                            i1l1545 00CA                              i1l1529 00AD  
                            i1l1537 00BC                              i1l1609 02CD  
                            i1l1617 028E                              i1l1459 027B  
                            i1l1563 00F1                              i1l1555 00E0  
                            i1l1547 00CD                              i1l1539 00C1  
                            i1l1491 0048                              i1l1467 0311  
                            i1l1619 029E                              i1l1581 012D  
                            i1l1565 00F4                              i1l1557 00E5  
                            i1l1549 00D0                              i1l1573 00FF  
                            i1l1493 004A                              i1l1485 0041  
                            i1l1591 0130                              i1l1567 00F7  
                            i1l1559 00E8                              i1l1575 0121  
                            i1l1495 0050                              i1l1487 0046  
                            i1l1671 0011                              i1l1577 0127  
                            i1l1569 00FC                              i1l1593 0146  
                            i1l1497 0056                              i1l1489 0048  
                            i1l1673 0018                              i1l1665 0006  
                            i1l1499 0058                              i1l1675 001D  
                            i1l1667 000A                              i1l1677 0025  
                            i1l1669 000E                              i1l1679 0029  
                            i1l1881 0107                              i1l1883 0138  
                            _OSCCON 0099                              _SPBRGH 019C  
                            _SPBRGL 019B     EUSART_Receive_ISR@data_received 0022  
                     ?_SELECTOR_LCM 0070                       ?_SELECTOR_WDT 0070  
                 __end_of_POWER_OFF 032B                   ??_lock_cntl_state 0028  
                  lock_open@seconds 002B                    ?_TMR0_Initialize 0070  
                    ?_LOCK_CNTL_LOW 0070               __end_of_TMR0_CallBack 0316  
                  ?_PIN_MANAGER_IOC 0070                   _SYSTEM_Initialize 02D8  
           __end_of__initialization 003E                  ?_SYSTEM_Initialize 0070  
                    ??_SELECTOR_LCM 0028                      ??_SELECTOR_WDT 0028  
                    __pcstackCOMMON 0070                 ??_SYSTEM_Initialize 0028  
                         ?_TMR0_ISR 0070                           ?_POWER_ON 0070  
                 _lcm_duration_time 002F                      _OPTION_REGbits 0095  
             TMR0_ISR@CountCallBack 0020                     Response_ACK@ack 0072  
         __end_of_SYSTEM_Initialize 02E5                          __pbssBANK0 0020  
              __end_of_EUSART_Write 031F                          __pnvCOMMON 007D  
                        __pmaintext 014B                      _LOCK_CNTL_HIGH 032E  
                        ??_TMR0_ISR 0071                          ??_POWER_ON 0028  
                        __pintentry 0004                             _BAUDCON 019F  
                   ??_LOCK_CNTL_LOW 0028                       ?_Response_ACK 0070  
                           _OSCSTAT 009A                             _OSCTUNE 0098  
            __end_of_LOCK_CNTL_HIGH 0331                             __ptext1 0242  
                           __ptext2 02F2                             __ptext3 02D8  
                           __ptext4 02E5                             __ptext5 02A5  
                           __ptext6 031F                             __ptext7 02B8  
                           __ptext8 0213                             __ptext9 02FB  
                    ??_Response_ACK 0071                             _command 007A  
             _OSCILLATOR_Initialize 031F                __end_of_SELECTOR_LCM 030D  
              __end_of_SELECTOR_WDT 0304            ??_PIN_MANAGER_Initialize 0028  
                         _IOCAFbits 0393                   __end_of_lock_open 026C  
                         _IOCANbits 0392                           _IOCAPbits 0391  
              end_of_initialization 003E                     _lock_cntl_state 02F2  
                 _EUSART_Initialize 02B8                     ?_LOCK_CNTL_HIGH 0070  
                ?_EUSART_Initialize 0070                           _RCSTAbits 019D  
               ??_EUSART_Initialize 0028                           _POWER_OFF 0328  
                         _PORTAbits 000C   EUSART_Receive_ISR@header_received 0023  
          EUSART_Receive_ISR@buffer 0077           __end_of_EUSART_Initialize 02C8  
                        ?_POWER_OFF 0070                        _EUSART_Write 0316  
            ?_OSCILLATOR_Initialize 0070                 start_initialization 0030  
           __end_of_lock_cntl_state 02FB                       Response_ACK@i 0073  
              __end_of_Response_ACK 028D                          lock_open@i 002A  
                       __pbssCOMMON 0078                           ___latbits 0000  
                     __pcstackBANK0 0028          __end_of_EUSART_Receive_ISR 014B  
                   _live_check_time 0030                           __pnvBANK0 002E  
                      _SELECTOR_LCM 0304                        _SELECTOR_WDT 02FB  
                     ??_RESET_POWER 0028              _PIN_MANAGER_Initialize 02A5  
                       ??_POWER_OFF 0028        ??_INTERRUPT_InterruptManager 0078  
                         _boot_time 0024               __end_of_LOCK_CNTL_LOW 032E  
                  ?_lock_cntl_state 0070                       _TMR0_CallBack 030D  
                         _lock_open 0242                    ??_LOCK_CNTL_HIGH 0028  
                 ??_TMR0_Initialize 0028                            _LCM_MODE 0027  
                          _PIE1bits 0091                            _PIR1bits 0011  
                          _TMR0_ISR 028D                            _POWER_ON 0325  
                 ??_PIN_MANAGER_IOC 0070                            _WDT_MODE 0026  
               __end_of_RESET_POWER 0242             EUSART_Receive_ISR@index 0079  
                    _lock_open_time 002E                      ?_TMR0_CallBack 0070  
                        ?_lock_open 0070                      _OPERATION_MODE 007D  
           ??_OSCILLATOR_Initialize 0028                  lock_open@iteration 0029  
                      _Response_ACK 026C                            __ptext10 0304  
                          __ptext11 0325                            __ptext20 026C  
                          __ptext12 0328                            __ptext21 0316  
                          __ptext13 032B                            __ptext14 032E  
                          __ptext16 028D                            __ptext17 030D  
                          __ptext18 02C8                            __ptext19 0041  
                      _tick_counter 0025                         _RESET_POWER 0213  
                          int$flags 007E  __end_of_INTERRUPT_InterruptManager 002F  
        _INTERRUPT_InterruptManager 0004                          _INTCONbits 000B  
                   ??_TMR0_CallBack 0070                         ??_lock_open 0028  
                          intlevel1 0000             ?_PIN_MANAGER_Initialize 0070  
                _EUSART_Receive_ISR 0041                          _OPTION_REG 0095  
               ?_EUSART_Receive_ISR 0070                     _TMR0_Initialize 02E5  
                EUSART_Write@txData 0070      __end_of_PIN_MANAGER_Initialize 02B8  
                   _PIN_MANAGER_IOC 02C8                ??_EUSART_Receive_ISR 0075  
