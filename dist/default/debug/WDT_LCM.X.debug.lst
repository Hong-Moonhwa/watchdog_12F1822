

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Nov 10 13:29:50 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	12F1822
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC12F1822 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0000                     	;# 
    71     0001                     	;# 
    72     0002                     	;# 
    73     0003                     	;# 
    74     0004                     	;# 
    75     0005                     	;# 
    76     0006                     	;# 
    77     0007                     	;# 
    78     0008                     	;# 
    79     0009                     	;# 
    80     000A                     	;# 
    81     000B                     	;# 
    82     000C                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     008C                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     010C                     	;# 
   111     0111                     	;# 
   112     0112                     	;# 
   113     0115                     	;# 
   114     0116                     	;# 
   115     0117                     	;# 
   116     0118                     	;# 
   117     0119                     	;# 
   118     011A                     	;# 
   119     011B                     	;# 
   120     011D                     	;# 
   121     011D                     	;# 
   122     018C                     	;# 
   123     0191                     	;# 
   124     0191                     	;# 
   125     0192                     	;# 
   126     0193                     	;# 
   127     0193                     	;# 
   128     0193                     	;# 
   129     0194                     	;# 
   130     0195                     	;# 
   131     0196                     	;# 
   132     0199                     	;# 
   133     019A                     	;# 
   134     019B                     	;# 
   135     019B                     	;# 
   136     019B                     	;# 
   137     019B                     	;# 
   138     019C                     	;# 
   139     019C                     	;# 
   140     019D                     	;# 
   141     019E                     	;# 
   142     019F                     	;# 
   143     020C                     	;# 
   144     0211                     	;# 
   145     0211                     	;# 
   146     0212                     	;# 
   147     0212                     	;# 
   148     0213                     	;# 
   149     0213                     	;# 
   150     0214                     	;# 
   151     0214                     	;# 
   152     0215                     	;# 
   153     0215                     	;# 
   154     0215                     	;# 
   155     0216                     	;# 
   156     0216                     	;# 
   157     0217                     	;# 
   158     0217                     	;# 
   159     0291                     	;# 
   160     0291                     	;# 
   161     0292                     	;# 
   162     0293                     	;# 
   163     0294                     	;# 
   164     0295                     	;# 
   165     0295                     	;# 
   166     0296                     	;# 
   167     0391                     	;# 
   168     0392                     	;# 
   169     0393                     	;# 
   170     039A                     	;# 
   171     039C                     	;# 
   172     039D                     	;# 
   173     039E                     	;# 
   174     039F                     	;# 
   175     0FE4                     	;# 
   176     0FE5                     	;# 
   177     0FE6                     	;# 
   178     0FE7                     	;# 
   179     0FE8                     	;# 
   180     0FE9                     	;# 
   181     0FEA                     	;# 
   182     0FEB                     	;# 
   183     0FED                     	;# 
   184     0FEE                     	;# 
   185     0FEF                     	;# 
   186     0000                     	;# 
   187     0001                     	;# 
   188     0002                     	;# 
   189     0003                     	;# 
   190     0004                     	;# 
   191     0005                     	;# 
   192     0006                     	;# 
   193     0007                     	;# 
   194     0008                     	;# 
   195     0009                     	;# 
   196     000A                     	;# 
   197     000B                     	;# 
   198     000C                     	;# 
   199     0011                     	;# 
   200     0012                     	;# 
   201     0015                     	;# 
   202     0016                     	;# 
   203     0016                     	;# 
   204     0017                     	;# 
   205     0018                     	;# 
   206     0019                     	;# 
   207     001A                     	;# 
   208     001B                     	;# 
   209     001C                     	;# 
   210     001E                     	;# 
   211     001F                     	;# 
   212     008C                     	;# 
   213     0091                     	;# 
   214     0092                     	;# 
   215     0095                     	;# 
   216     0096                     	;# 
   217     0097                     	;# 
   218     0098                     	;# 
   219     0099                     	;# 
   220     009A                     	;# 
   221     009B                     	;# 
   222     009B                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     010C                     	;# 
   227     0111                     	;# 
   228     0112                     	;# 
   229     0115                     	;# 
   230     0116                     	;# 
   231     0117                     	;# 
   232     0118                     	;# 
   233     0119                     	;# 
   234     011A                     	;# 
   235     011B                     	;# 
   236     011D                     	;# 
   237     011D                     	;# 
   238     018C                     	;# 
   239     0191                     	;# 
   240     0191                     	;# 
   241     0192                     	;# 
   242     0193                     	;# 
   243     0193                     	;# 
   244     0193                     	;# 
   245     0194                     	;# 
   246     0195                     	;# 
   247     0196                     	;# 
   248     0199                     	;# 
   249     019A                     	;# 
   250     019B                     	;# 
   251     019B                     	;# 
   252     019B                     	;# 
   253     019B                     	;# 
   254     019C                     	;# 
   255     019C                     	;# 
   256     019D                     	;# 
   257     019E                     	;# 
   258     019F                     	;# 
   259     020C                     	;# 
   260     0211                     	;# 
   261     0211                     	;# 
   262     0212                     	;# 
   263     0212                     	;# 
   264     0213                     	;# 
   265     0213                     	;# 
   266     0214                     	;# 
   267     0214                     	;# 
   268     0215                     	;# 
   269     0215                     	;# 
   270     0215                     	;# 
   271     0216                     	;# 
   272     0216                     	;# 
   273     0217                     	;# 
   274     0217                     	;# 
   275     0291                     	;# 
   276     0291                     	;# 
   277     0292                     	;# 
   278     0293                     	;# 
   279     0294                     	;# 
   280     0295                     	;# 
   281     0295                     	;# 
   282     0296                     	;# 
   283     0391                     	;# 
   284     0392                     	;# 
   285     0393                     	;# 
   286     039A                     	;# 
   287     039C                     	;# 
   288     039D                     	;# 
   289     039E                     	;# 
   290     039F                     	;# 
   291     0FE4                     	;# 
   292     0FE5                     	;# 
   293     0FE6                     	;# 
   294     0FE7                     	;# 
   295     0FE8                     	;# 
   296     0FE9                     	;# 
   297     0FEA                     	;# 
   298     0FEB                     	;# 
   299     0FED                     	;# 
   300     0FEE                     	;# 
   301     0FEF                     	;# 
   302     0000                     	;# 
   303     0001                     	;# 
   304     0002                     	;# 
   305     0003                     	;# 
   306     0004                     	;# 
   307     0005                     	;# 
   308     0006                     	;# 
   309     0007                     	;# 
   310     0008                     	;# 
   311     0009                     	;# 
   312     000A                     	;# 
   313     000B                     	;# 
   314     000C                     	;# 
   315     0011                     	;# 
   316     0012                     	;# 
   317     0015                     	;# 
   318     0016                     	;# 
   319     0016                     	;# 
   320     0017                     	;# 
   321     0018                     	;# 
   322     0019                     	;# 
   323     001A                     	;# 
   324     001B                     	;# 
   325     001C                     	;# 
   326     001E                     	;# 
   327     001F                     	;# 
   328     008C                     	;# 
   329     0091                     	;# 
   330     0092                     	;# 
   331     0095                     	;# 
   332     0096                     	;# 
   333     0097                     	;# 
   334     0098                     	;# 
   335     0099                     	;# 
   336     009A                     	;# 
   337     009B                     	;# 
   338     009B                     	;# 
   339     009C                     	;# 
   340     009D                     	;# 
   341     009E                     	;# 
   342     010C                     	;# 
   343     0111                     	;# 
   344     0112                     	;# 
   345     0115                     	;# 
   346     0116                     	;# 
   347     0117                     	;# 
   348     0118                     	;# 
   349     0119                     	;# 
   350     011A                     	;# 
   351     011B                     	;# 
   352     011D                     	;# 
   353     011D                     	;# 
   354     018C                     	;# 
   355     0191                     	;# 
   356     0191                     	;# 
   357     0192                     	;# 
   358     0193                     	;# 
   359     0193                     	;# 
   360     0193                     	;# 
   361     0194                     	;# 
   362     0195                     	;# 
   363     0196                     	;# 
   364     0199                     	;# 
   365     019A                     	;# 
   366     019B                     	;# 
   367     019B                     	;# 
   368     019B                     	;# 
   369     019B                     	;# 
   370     019C                     	;# 
   371     019C                     	;# 
   372     019D                     	;# 
   373     019E                     	;# 
   374     019F                     	;# 
   375     020C                     	;# 
   376     0211                     	;# 
   377     0211                     	;# 
   378     0212                     	;# 
   379     0212                     	;# 
   380     0213                     	;# 
   381     0213                     	;# 
   382     0214                     	;# 
   383     0214                     	;# 
   384     0215                     	;# 
   385     0215                     	;# 
   386     0215                     	;# 
   387     0216                     	;# 
   388     0216                     	;# 
   389     0217                     	;# 
   390     0217                     	;# 
   391     0291                     	;# 
   392     0291                     	;# 
   393     0292                     	;# 
   394     0293                     	;# 
   395     0294                     	;# 
   396     0295                     	;# 
   397     0295                     	;# 
   398     0296                     	;# 
   399     0391                     	;# 
   400     0392                     	;# 
   401     0393                     	;# 
   402     039A                     	;# 
   403     039C                     	;# 
   404     039D                     	;# 
   405     039E                     	;# 
   406     039F                     	;# 
   407     0FE4                     	;# 
   408     0FE5                     	;# 
   409     0FE6                     	;# 
   410     0FE7                     	;# 
   411     0FE8                     	;# 
   412     0FE9                     	;# 
   413     0FEA                     	;# 
   414     0FEB                     	;# 
   415     0FED                     	;# 
   416     0FEE                     	;# 
   417     0FEF                     	;# 
   418     0000                     	;# 
   419     0001                     	;# 
   420     0002                     	;# 
   421     0003                     	;# 
   422     0004                     	;# 
   423     0005                     	;# 
   424     0006                     	;# 
   425     0007                     	;# 
   426     0008                     	;# 
   427     0009                     	;# 
   428     000A                     	;# 
   429     000B                     	;# 
   430     000C                     	;# 
   431     0011                     	;# 
   432     0012                     	;# 
   433     0015                     	;# 
   434     0016                     	;# 
   435     0016                     	;# 
   436     0017                     	;# 
   437     0018                     	;# 
   438     0019                     	;# 
   439     001A                     	;# 
   440     001B                     	;# 
   441     001C                     	;# 
   442     001E                     	;# 
   443     001F                     	;# 
   444     008C                     	;# 
   445     0091                     	;# 
   446     0092                     	;# 
   447     0095                     	;# 
   448     0096                     	;# 
   449     0097                     	;# 
   450     0098                     	;# 
   451     0099                     	;# 
   452     009A                     	;# 
   453     009B                     	;# 
   454     009B                     	;# 
   455     009C                     	;# 
   456     009D                     	;# 
   457     009E                     	;# 
   458     010C                     	;# 
   459     0111                     	;# 
   460     0112                     	;# 
   461     0115                     	;# 
   462     0116                     	;# 
   463     0117                     	;# 
   464     0118                     	;# 
   465     0119                     	;# 
   466     011A                     	;# 
   467     011B                     	;# 
   468     011D                     	;# 
   469     011D                     	;# 
   470     018C                     	;# 
   471     0191                     	;# 
   472     0191                     	;# 
   473     0192                     	;# 
   474     0193                     	;# 
   475     0193                     	;# 
   476     0193                     	;# 
   477     0194                     	;# 
   478     0195                     	;# 
   479     0196                     	;# 
   480     0199                     	;# 
   481     019A                     	;# 
   482     019B                     	;# 
   483     019B                     	;# 
   484     019B                     	;# 
   485     019B                     	;# 
   486     019C                     	;# 
   487     019C                     	;# 
   488     019D                     	;# 
   489     019E                     	;# 
   490     019F                     	;# 
   491     020C                     	;# 
   492     0211                     	;# 
   493     0211                     	;# 
   494     0212                     	;# 
   495     0212                     	;# 
   496     0213                     	;# 
   497     0213                     	;# 
   498     0214                     	;# 
   499     0214                     	;# 
   500     0215                     	;# 
   501     0215                     	;# 
   502     0215                     	;# 
   503     0216                     	;# 
   504     0216                     	;# 
   505     0217                     	;# 
   506     0217                     	;# 
   507     0291                     	;# 
   508     0291                     	;# 
   509     0292                     	;# 
   510     0293                     	;# 
   511     0294                     	;# 
   512     0295                     	;# 
   513     0295                     	;# 
   514     0296                     	;# 
   515     0391                     	;# 
   516     0392                     	;# 
   517     0393                     	;# 
   518     039A                     	;# 
   519     039C                     	;# 
   520     039D                     	;# 
   521     039E                     	;# 
   522     039F                     	;# 
   523     0FE4                     	;# 
   524     0FE5                     	;# 
   525     0FE6                     	;# 
   526     0FE7                     	;# 
   527     0FE8                     	;# 
   528     0FE9                     	;# 
   529     0FEA                     	;# 
   530     0FEB                     	;# 
   531     0FED                     	;# 
   532     0FEE                     	;# 
   533     0FEF                     	;# 
   534     0000                     	;# 
   535     0001                     	;# 
   536     0002                     	;# 
   537     0003                     	;# 
   538     0004                     	;# 
   539     0005                     	;# 
   540     0006                     	;# 
   541     0007                     	;# 
   542     0008                     	;# 
   543     0009                     	;# 
   544     000A                     	;# 
   545     000B                     	;# 
   546     000C                     	;# 
   547     0011                     	;# 
   548     0012                     	;# 
   549     0015                     	;# 
   550     0016                     	;# 
   551     0016                     	;# 
   552     0017                     	;# 
   553     0018                     	;# 
   554     0019                     	;# 
   555     001A                     	;# 
   556     001B                     	;# 
   557     001C                     	;# 
   558     001E                     	;# 
   559     001F                     	;# 
   560     008C                     	;# 
   561     0091                     	;# 
   562     0092                     	;# 
   563     0095                     	;# 
   564     0096                     	;# 
   565     0097                     	;# 
   566     0098                     	;# 
   567     0099                     	;# 
   568     009A                     	;# 
   569     009B                     	;# 
   570     009B                     	;# 
   571     009C                     	;# 
   572     009D                     	;# 
   573     009E                     	;# 
   574     010C                     	;# 
   575     0111                     	;# 
   576     0112                     	;# 
   577     0115                     	;# 
   578     0116                     	;# 
   579     0117                     	;# 
   580     0118                     	;# 
   581     0119                     	;# 
   582     011A                     	;# 
   583     011B                     	;# 
   584     011D                     	;# 
   585     011D                     	;# 
   586     018C                     	;# 
   587     0191                     	;# 
   588     0191                     	;# 
   589     0192                     	;# 
   590     0193                     	;# 
   591     0193                     	;# 
   592     0193                     	;# 
   593     0194                     	;# 
   594     0195                     	;# 
   595     0196                     	;# 
   596     0199                     	;# 
   597     019A                     	;# 
   598     019B                     	;# 
   599     019B                     	;# 
   600     019B                     	;# 
   601     019B                     	;# 
   602     019C                     	;# 
   603     019C                     	;# 
   604     019D                     	;# 
   605     019E                     	;# 
   606     019F                     	;# 
   607     020C                     	;# 
   608     0211                     	;# 
   609     0211                     	;# 
   610     0212                     	;# 
   611     0212                     	;# 
   612     0213                     	;# 
   613     0213                     	;# 
   614     0214                     	;# 
   615     0214                     	;# 
   616     0215                     	;# 
   617     0215                     	;# 
   618     0215                     	;# 
   619     0216                     	;# 
   620     0216                     	;# 
   621     0217                     	;# 
   622     0217                     	;# 
   623     0291                     	;# 
   624     0291                     	;# 
   625     0292                     	;# 
   626     0293                     	;# 
   627     0294                     	;# 
   628     0295                     	;# 
   629     0295                     	;# 
   630     0296                     	;# 
   631     0391                     	;# 
   632     0392                     	;# 
   633     0393                     	;# 
   634     039A                     	;# 
   635     039C                     	;# 
   636     039D                     	;# 
   637     039E                     	;# 
   638     039F                     	;# 
   639     0FE4                     	;# 
   640     0FE5                     	;# 
   641     0FE6                     	;# 
   642     0FE7                     	;# 
   643     0FE8                     	;# 
   644     0FE9                     	;# 
   645     0FEA                     	;# 
   646     0FEB                     	;# 
   647     0FED                     	;# 
   648     0FEE                     	;# 
   649     0FEF                     	;# 
   650     0000                     	;# 
   651     0001                     	;# 
   652     0002                     	;# 
   653     0003                     	;# 
   654     0004                     	;# 
   655     0005                     	;# 
   656     0006                     	;# 
   657     0007                     	;# 
   658     0008                     	;# 
   659     0009                     	;# 
   660     000A                     	;# 
   661     000B                     	;# 
   662     000C                     	;# 
   663     0011                     	;# 
   664     0012                     	;# 
   665     0015                     	;# 
   666     0016                     	;# 
   667     0016                     	;# 
   668     0017                     	;# 
   669     0018                     	;# 
   670     0019                     	;# 
   671     001A                     	;# 
   672     001B                     	;# 
   673     001C                     	;# 
   674     001E                     	;# 
   675     001F                     	;# 
   676     008C                     	;# 
   677     0091                     	;# 
   678     0092                     	;# 
   679     0095                     	;# 
   680     0096                     	;# 
   681     0097                     	;# 
   682     0098                     	;# 
   683     0099                     	;# 
   684     009A                     	;# 
   685     009B                     	;# 
   686     009B                     	;# 
   687     009C                     	;# 
   688     009D                     	;# 
   689     009E                     	;# 
   690     010C                     	;# 
   691     0111                     	;# 
   692     0112                     	;# 
   693     0115                     	;# 
   694     0116                     	;# 
   695     0117                     	;# 
   696     0118                     	;# 
   697     0119                     	;# 
   698     011A                     	;# 
   699     011B                     	;# 
   700     011D                     	;# 
   701     011D                     	;# 
   702     018C                     	;# 
   703     0191                     	;# 
   704     0191                     	;# 
   705     0192                     	;# 
   706     0193                     	;# 
   707     0193                     	;# 
   708     0193                     	;# 
   709     0194                     	;# 
   710     0195                     	;# 
   711     0196                     	;# 
   712     0199                     	;# 
   713     019A                     	;# 
   714     019B                     	;# 
   715     019B                     	;# 
   716     019B                     	;# 
   717     019B                     	;# 
   718     019C                     	;# 
   719     019C                     	;# 
   720     019D                     	;# 
   721     019E                     	;# 
   722     019F                     	;# 
   723     020C                     	;# 
   724     0211                     	;# 
   725     0211                     	;# 
   726     0212                     	;# 
   727     0212                     	;# 
   728     0213                     	;# 
   729     0213                     	;# 
   730     0214                     	;# 
   731     0214                     	;# 
   732     0215                     	;# 
   733     0215                     	;# 
   734     0215                     	;# 
   735     0216                     	;# 
   736     0216                     	;# 
   737     0217                     	;# 
   738     0217                     	;# 
   739     0291                     	;# 
   740     0291                     	;# 
   741     0292                     	;# 
   742     0293                     	;# 
   743     0294                     	;# 
   744     0295                     	;# 
   745     0295                     	;# 
   746     0296                     	;# 
   747     0391                     	;# 
   748     0392                     	;# 
   749     0393                     	;# 
   750     039A                     	;# 
   751     039C                     	;# 
   752     039D                     	;# 
   753     039E                     	;# 
   754     039F                     	;# 
   755     0FE4                     	;# 
   756     0FE5                     	;# 
   757     0FE6                     	;# 
   758     0FE7                     	;# 
   759     0FE8                     	;# 
   760     0FE9                     	;# 
   761     0FEA                     	;# 
   762     0FEB                     	;# 
   763     0FED                     	;# 
   764     0FEE                     	;# 
   765     0FEF                     	;# 
   766     0000                     	;# 
   767     0001                     	;# 
   768     0002                     	;# 
   769     0003                     	;# 
   770     0004                     	;# 
   771     0005                     	;# 
   772     0006                     	;# 
   773     0007                     	;# 
   774     0008                     	;# 
   775     0009                     	;# 
   776     000A                     	;# 
   777     000B                     	;# 
   778     000C                     	;# 
   779     0011                     	;# 
   780     0012                     	;# 
   781     0015                     	;# 
   782     0016                     	;# 
   783     0016                     	;# 
   784     0017                     	;# 
   785     0018                     	;# 
   786     0019                     	;# 
   787     001A                     	;# 
   788     001B                     	;# 
   789     001C                     	;# 
   790     001E                     	;# 
   791     001F                     	;# 
   792     008C                     	;# 
   793     0091                     	;# 
   794     0092                     	;# 
   795     0095                     	;# 
   796     0096                     	;# 
   797     0097                     	;# 
   798     0098                     	;# 
   799     0099                     	;# 
   800     009A                     	;# 
   801     009B                     	;# 
   802     009B                     	;# 
   803     009C                     	;# 
   804     009D                     	;# 
   805     009E                     	;# 
   806     010C                     	;# 
   807     0111                     	;# 
   808     0112                     	;# 
   809     0115                     	;# 
   810     0116                     	;# 
   811     0117                     	;# 
   812     0118                     	;# 
   813     0119                     	;# 
   814     011A                     	;# 
   815     011B                     	;# 
   816     011D                     	;# 
   817     011D                     	;# 
   818     018C                     	;# 
   819     0191                     	;# 
   820     0191                     	;# 
   821     0192                     	;# 
   822     0193                     	;# 
   823     0193                     	;# 
   824     0193                     	;# 
   825     0194                     	;# 
   826     0195                     	;# 
   827     0196                     	;# 
   828     0199                     	;# 
   829     019A                     	;# 
   830     019B                     	;# 
   831     019B                     	;# 
   832     019B                     	;# 
   833     019B                     	;# 
   834     019C                     	;# 
   835     019C                     	;# 
   836     019D                     	;# 
   837     019E                     	;# 
   838     019F                     	;# 
   839     020C                     	;# 
   840     0211                     	;# 
   841     0211                     	;# 
   842     0212                     	;# 
   843     0212                     	;# 
   844     0213                     	;# 
   845     0213                     	;# 
   846     0214                     	;# 
   847     0214                     	;# 
   848     0215                     	;# 
   849     0215                     	;# 
   850     0215                     	;# 
   851     0216                     	;# 
   852     0216                     	;# 
   853     0217                     	;# 
   854     0217                     	;# 
   855     0291                     	;# 
   856     0291                     	;# 
   857     0292                     	;# 
   858     0293                     	;# 
   859     0294                     	;# 
   860     0295                     	;# 
   861     0295                     	;# 
   862     0296                     	;# 
   863     0391                     	;# 
   864     0392                     	;# 
   865     0393                     	;# 
   866     039A                     	;# 
   867     039C                     	;# 
   868     039D                     	;# 
   869     039E                     	;# 
   870     039F                     	;# 
   871     0FE4                     	;# 
   872     0FE5                     	;# 
   873     0FE6                     	;# 
   874     0FE7                     	;# 
   875     0FE8                     	;# 
   876     0FE9                     	;# 
   877     0FEA                     	;# 
   878     0FEB                     	;# 
   879     0FED                     	;# 
   880     0FEE                     	;# 
   881     0FEF                     	;# 
   882                           
   883                           	psect	nvCOMMON
   884     007D                     __pnvCOMMON:
   885     007D                     _OPERATION_MODE:
   886     007D                     	ds	1
   887                           
   888                           	psect	nvBANK0
   889     002E                     __pnvBANK0:
   890     002E                     _lock_open_time:
   891     002E                     	ds	1
   892     002F                     _lcm_duration_time:
   893     002F                     	ds	1
   894     0030                     _live_check_time:
   895     0030                     	ds	1
   896     000C                     _PORTAbits	set	12
   897     0015                     _TMR0	set	21
   898     0011                     _PIR1bits	set	17
   899     000B                     _INTCONbits	set	11
   900     0095                     _OPTION_REG	set	149
   901     0091                     _PIE1bits	set	145
   902     0095                     _OPTION_REGbits	set	149
   903     008C                     _TRISA	set	140
   904     0098                     _OSCTUNE	set	152
   905     009A                     _OSCSTAT	set	154
   906     0099                     _OSCCON	set	153
   907     011D                     _APFCON	set	285
   908     010C                     _LATA	set	268
   909     0199                     _RCREG	set	409
   910     019D                     _RCSTAbits	set	413
   911     019A                     _TXREG	set	410
   912     019C                     _SPBRGH	set	412
   913     019B                     _SPBRGL	set	411
   914     019E                     _TXSTA	set	414
   915     019D                     _RCSTA	set	413
   916     019F                     _BAUDCON	set	415
   917     018C                     _ANSELA	set	396
   918     0CF1                     _TRMT	set	3313
   919     020C                     _WPUA	set	524
   920     0391                     _IOCAPbits	set	913
   921     0392                     _IOCANbits	set	914
   922     0393                     _IOCAFbits	set	915
   923                           
   924                           	psect	cinit
   925     0030                     start_initialization:	
   926                           ; #config settings
   927                           
   928     0030                     __initialization:
   929                           
   930                           ; Clear objects allocated to COMMON
   931     0030  01F8               	clrf	__pbssCOMMON& (0+127)
   932     0031  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   933     0032  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   934     0033  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   935     0034  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   936                           
   937                           ; Clear objects allocated to BANK0
   938     0035  0020               	movlb	0	; select bank0
   939     0036  01A0               	clrf	__pbssBANK0& (0+127)
   940     0037  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   941     0038  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   942     0039  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   943     003A  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   944     003B  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   945     003C  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   946     003D  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   947     003E                     end_of_initialization:	
   948                           ;End of C runtime variable initialization code
   949                           
   950     003E                     __end_of__initialization:
   951     003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   952     003F  0020               	movlb	0
   953     0040  294D               	ljmp	_main	;jump to C main() function
   954                           
   955                           	psect	bssCOMMON
   956     0078                     __pbssCOMMON:
   957     0078                     _timer0ReloadVal:
   958     0078                     	ds	1
   959     0079                     EUSART_Receive_ISR@index:
   960     0079                     	ds	1
   961     007A                     _command:
   962     007A                     	ds	3
   963                           
   964                           	psect	bssBANK0
   965     0020                     __pbssBANK0:
   966     0020                     TMR0_ISR@CountCallBack:
   967     0020                     	ds	2
   968     0022                     EUSART_Receive_ISR@data_received:
   969     0022                     	ds	1
   970     0023                     EUSART_Receive_ISR@header_received:
   971     0023                     	ds	1
   972     0024                     _boot_time:
   973     0024                     	ds	1
   974     0025                     _tick_counter:
   975     0025                     	ds	1
   976     0026                     _WDT_MODE:
   977     0026                     	ds	1
   978     0027                     _LCM_MODE:
   979     0027                     	ds	1
   980                           
   981                           	psect	cstackCOMMON
   982     0070                     __pcstackCOMMON:
   983     0070                     ?_PIN_MANAGER_Initialize:
   984     0070                     ?_OSCILLATOR_Initialize:	
   985                           ; 1 bytes @ 0x0
   986                           
   987     0070                     ?_TMR0_Initialize:	
   988                           ; 1 bytes @ 0x0
   989                           
   990     0070                     ?_EUSART_Initialize:	
   991                           ; 1 bytes @ 0x0
   992                           
   993     0070                     ?_PIN_MANAGER_IOC:	
   994                           ; 1 bytes @ 0x0
   995                           
   996     0070                     ??_PIN_MANAGER_IOC:	
   997                           ; 1 bytes @ 0x0
   998                           
   999     0070                     ?_TMR0_ISR:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002     0070                     ?_TMR0_CallBack:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005     0070                     ??_TMR0_CallBack:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008     0070                     ?_SYSTEM_Initialize:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011     0070                     ?_EUSART_Write:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014     0070                     ??_EUSART_Write:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017     0070                     ?_Response_ACK:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020     0070                     ?_EUSART_Receive_ISR:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023     0070                     ?_INTERRUPT_InterruptManager:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026     0070                     ?_SELECTOR_LCM:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029     0070                     ?_SELECTOR_WDT:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032     0070                     ?_LOCK_CNTL_HIGH:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035     0070                     ?_LOCK_CNTL_LOW:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038     0070                     ?_POWER_ON:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041     0070                     ?_POWER_OFF:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044     0070                     ?_lock_cntl_state:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047     0070                     ?_lock_open:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050     0070                     ?_RESET_POWER:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053     0070                     ?_main:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056     0070                     EUSART_Write@txData:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059                           
  1060                           ; 1 bytes @ 0x0
  1061     0070                     	ds	1
  1062     0071                     ??_TMR0_ISR:
  1063     0071                     ??_Response_ACK:	
  1064                           ; 1 bytes @ 0x1
  1065                           
  1066                           
  1067                           ; 1 bytes @ 0x1
  1068     0071                     	ds	1
  1069     0072                     Response_ACK@ack:
  1070                           
  1071                           ; 1 bytes @ 0x2
  1072     0072                     	ds	1
  1073     0073                     Response_ACK@i:
  1074                           
  1075                           ; 2 bytes @ 0x3
  1076     0073                     	ds	2
  1077     0075                     ??_EUSART_Receive_ISR:
  1078                           
  1079                           ; 1 bytes @ 0x5
  1080     0075                     	ds	2
  1081     0077                     EUSART_Receive_ISR@buffer:
  1082                           
  1083                           ; 1 bytes @ 0x7
  1084     0077                     	ds	1
  1085     0078                     ??_INTERRUPT_InterruptManager:
  1086                           
  1087                           	psect	cstackBANK0
  1088     0028                     __pcstackBANK0:	
  1089                           ; 1 bytes @ 0x8
  1090                           
  1091     0028                     ??_PIN_MANAGER_Initialize:
  1092     0028                     ??_OSCILLATOR_Initialize:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095     0028                     ??_TMR0_Initialize:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098     0028                     ??_EUSART_Initialize:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101     0028                     ??_SYSTEM_Initialize:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104     0028                     ??_SELECTOR_LCM:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107     0028                     ??_SELECTOR_WDT:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110     0028                     ??_LOCK_CNTL_HIGH:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113     0028                     ??_LOCK_CNTL_LOW:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116     0028                     ??_POWER_ON:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119     0028                     ??_POWER_OFF:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122     0028                     ??_lock_cntl_state:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125     0028                     ??_lock_open:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128     0028                     ??_RESET_POWER:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0x0
  1133     0028                     	ds	1
  1134     0029                     lock_open@iteration:
  1135                           
  1136                           ; 1 bytes @ 0x1
  1137     0029                     	ds	1
  1138     002A                     lock_open@i:
  1139                           
  1140                           ; 1 bytes @ 0x2
  1141     002A                     	ds	1
  1142     002B                     lock_open@seconds:
  1143                           
  1144                           ; 1 bytes @ 0x3
  1145     002B                     	ds	1
  1146     002C                     ??_main:
  1147                           
  1148                           ; 1 bytes @ 0x4
  1149     002C                     	ds	2
  1150                           
  1151                           	psect	maintext
  1152     014D                     __pmaintext:	
  1153 ;;
  1154 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1155 ;;
  1156 ;; *************** function _main *****************
  1157 ;; Defined at:
  1158 ;;		line 146 in file "main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  i               2    0        int 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : B1F/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1
  1172 ;;      Params:         0       0       0
  1173 ;;      Locals:         0       0       0
  1174 ;;      Temps:          0       2       0
  1175 ;;      Totals:         0       2       0
  1176 ;;Total ram usage:        2 bytes
  1177 ;; Hardware stack levels required when called: 6
  1178 ;; This function calls:
  1179 ;;		_LOCK_CNTL_HIGH
  1180 ;;		_LOCK_CNTL_LOW
  1181 ;;		_POWER_OFF
  1182 ;;		_POWER_ON
  1183 ;;		_RESET_POWER
  1184 ;;		_SELECTOR_LCM
  1185 ;;		_SELECTOR_WDT
  1186 ;;		_SYSTEM_Initialize
  1187 ;;		_lock_cntl_state
  1188 ;;		_lock_open
  1189 ;; This function is called by:
  1190 ;;		Startup code after reset
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194     014D                     _main:	
  1195                           ;psect for function _main
  1196                           
  1197     014D                     l1687:	
  1198                           ;incstack = 0
  1199                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1200                           
  1201                           
  1202                           ;main.c: 149:     SYSTEM_Initialize();
  1203     014D  3182  22DA  3181   	fcall	_SYSTEM_Initialize
  1204     0150                     l1689:
  1205                           
  1206                           ;main.c: 155:     (INTCONbits.GIE = 1);
  1207     0150  178B               	bsf	11,7	;volatile
  1208     0151                     l1691:
  1209                           
  1210                           ;main.c: 158:     (INTCONbits.PEIE = 1);
  1211     0151  170B               	bsf	11,6	;volatile
  1212     0152                     l1693:
  1213                           
  1214                           ;main.c: 170:     live_check_time = 60;
  1215     0152  303C               	movlw	60
  1216     0153  0020               	movlb	0	; select bank0
  1217     0154  00B0               	movwf	_live_check_time
  1218     0155                     l1695:
  1219                           
  1220                           ;main.c: 171:     lcm_duration_time = 5;
  1221     0155  3005               	movlw	5
  1222     0156  00AF               	movwf	_lcm_duration_time
  1223     0157                     l1697:
  1224                           
  1225                           ;main.c: 172:     lock_open_time = 3;
  1226     0157  3003               	movlw	3
  1227     0158  00AE               	movwf	_lock_open_time
  1228     0159                     l1699:
  1229                           
  1230                           ;main.c: 173:     tick_counter = 0;
  1231     0159  01A5               	clrf	_tick_counter
  1232     015A                     l1701:
  1233                           
  1234                           ;main.c: 174:     boot_time = 0;
  1235     015A  01A4               	clrf	_boot_time
  1236                           
  1237                           ;main.c: 177:     LOCK_CNTL_LOW();
  1238     015B  3183  232D  3181   	fcall	_LOCK_CNTL_LOW
  1239     015E                     l1703:
  1240                           
  1241                           ;main.c: 178:     SELECTOR_WDT();
  1242     015E  3182  22FD  3181   	fcall	_SELECTOR_WDT
  1243     0161                     l1705:
  1244                           
  1245                           ;main.c: 179:     POWER_OFF();
  1246     0161  3183  232A  3181   	fcall	_POWER_OFF
  1247     0164                     l1707:
  1248                           
  1249                           ;main.c: 180:     _delay((unsigned long)((50)*(500000/4000.0)));
  1250     0164  3009               	movlw	9
  1251     0165  0020               	movlb	0	; select bank0
  1252     0166  00AC               	movwf	??_main
  1253     0167  301C               	movlw	28
  1254     0168                     u937:
  1255     0168  0B89               	decfsz	9,f
  1256     0169  2968               	goto	u937
  1257     016A  0BAC               	decfsz	??_main,f
  1258     016B  2968               	goto	u937
  1259     016C  0000               	nop
  1260     016D                     l1709:
  1261                           
  1262                           ;main.c: 181:     SELECTOR_LCM();
  1263     016D  3183  2306  3181   	fcall	_SELECTOR_LCM
  1264     0170                     l1711:
  1265                           
  1266                           ;main.c: 182:     LCM_MODE = NORMAL;
  1267     0170  0020               	movlb	0	; select bank0
  1268     0171  01A7               	clrf	_LCM_MODE
  1269     0172                     l1713:
  1270                           
  1271                           ;main.c: 183:     _delay((unsigned long)((100)*(500000/4000.0)));
  1272     0172  3011               	movlw	17
  1273     0173  0020               	movlb	0	; select bank0
  1274     0174  00AC               	movwf	??_main
  1275     0175  303A               	movlw	58
  1276     0176                     u947:
  1277     0176  0B89               	decfsz	9,f
  1278     0177  2976               	goto	u947
  1279     0178  0BAC               	decfsz	??_main,f
  1280     0179  2976               	goto	u947
  1281     017A  0000               	nop
  1282     017B                     l1715:
  1283                           
  1284                           ;main.c: 184:     POWER_ON();
  1285     017B  3183  2327  3181   	fcall	_POWER_ON
  1286     017E                     l1717:
  1287                           
  1288                           ;main.c: 188:     {;main.c: 189:         if(OPERATION_MODE == WDT)
  1289     017E  037D               	decf	_OPERATION_MODE,w
  1290     017F  1D03               	btfss	3,2
  1291     0180  2982               	goto	u841
  1292     0181  2983               	goto	u840
  1293     0182                     u841:
  1294     0182  29A2               	goto	l1731
  1295     0183                     u840:
  1296     0183  298E               	goto	l1729
  1297     0184                     l1723:
  1298                           
  1299                           ;main.c: 228:                     if (tick_counter >= live_check_time)
  1300     0184  0830               	movf	_live_check_time,w
  1301     0185  0225               	subwf	_tick_counter,w
  1302     0186  1C03               	skipc
  1303     0187  2989               	goto	u851
  1304     0188  298A               	goto	u850
  1305     0189                     u851:
  1306     0189  2A0A               	goto	l1771
  1307     018A                     u850:
  1308     018A                     l1725:
  1309                           
  1310                           ;main.c: 229:                     {;main.c: 230:                         RESET_POWER();
  1311     018A  3182  2215  3181   	fcall	_RESET_POWER
  1312     018D  2A0A               	goto	l1771
  1313     018E                     l1729:
  1314     018E  0020               	movlb	0	; select bank0
  1315     018F  0826               	movf	_WDT_MODE,w
  1316     0190  00AC               	movwf	??_main
  1317     0191  01AD               	clrf	??_main+1
  1318                           
  1319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1320                           ; Switch size 1, requested type "simple"
  1321                           ; Number of cases is 1, Range of values is 0 to 0
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte            4     3 (average)
  1325                           ; direct_byte            8     6 (fixed)
  1326                           ; jumptable            260     6 (fixed)
  1327                           ;	Chosen strategy is simple_byte
  1328     0192  082D               	movf	??_main+1,w
  1329     0193  3A00               	xorlw	0	; case 0
  1330     0194  1903               	skipnz
  1331     0195  2997               	goto	l1881
  1332     0196  2A0A               	goto	l1771
  1333     0197                     l1881:
  1334                           
  1335                           ; Switch size 1, requested type "simple"
  1336                           ; Number of cases is 3, Range of values is 0 to 19
  1337                           ; switch strategies available:
  1338                           ; Name         Instructions Cycles
  1339                           ; simple_byte           10     6 (average)
  1340                           ; direct_byte           46     6 (fixed)
  1341                           ; jumptable            260     6 (fixed)
  1342                           ;	Chosen strategy is simple_byte
  1343     0197  082C               	movf	??_main,w
  1344     0198  3A00               	xorlw	0	; case 0
  1345     0199  1903               	skipnz
  1346     019A  2A0A               	goto	l1771
  1347     019B  3A12               	xorlw	18	; case 18
  1348     019C  1903               	skipnz
  1349     019D  2A0A               	goto	l1771
  1350     019E  3A01               	xorlw	1	; case 19
  1351     019F  1903               	skipnz
  1352     01A0  2984               	goto	l1723
  1353     01A1  2A0A               	goto	l1771
  1354     01A2                     l1731:
  1355     01A2  3002               	movlw	2
  1356     01A3  067D               	xorwf	_OPERATION_MODE,w
  1357     01A4  1D03               	btfss	3,2
  1358     01A5  29A7               	goto	u861
  1359     01A6  29A8               	goto	u860
  1360     01A7                     u861:
  1361     01A7  2A03               	goto	l1767
  1362     01A8                     u860:
  1363     01A8  29DF               	goto	l1759
  1364     01A9                     l1735:
  1365                           
  1366                           ;main.c: 244:                     if(!lock_cntl_state())
  1367     01A9  3182  22F4  3181   	fcall	_lock_cntl_state
  1368     01AC  3A00               	xorlw	0
  1369     01AD  1D03               	skipz
  1370     01AE  29B0               	goto	u871
  1371     01AF  29B1               	goto	u870
  1372     01B0                     u871:
  1373     01B0  29C6               	goto	l1747
  1374     01B1                     u870:
  1375     01B1                     l1737:
  1376                           
  1377                           ;main.c: 245:                     {;main.c: 246:                         LOCK_CNTL_HIGH(
      +                          );
  1378     01B1  3183  2330  3181   	fcall	_LOCK_CNTL_HIGH
  1379     01B4                     l1739:
  1380                           
  1381                           ;main.c: 247:                         lock_open(lock_open_time);
  1382     01B4  0020               	movlb	0	; select bank0
  1383     01B5  082E               	movf	_lock_open_time,w
  1384     01B6  3182  2244  3181   	fcall	_lock_open
  1385     01B9                     l1741:
  1386                           
  1387                           ;main.c: 248:                         if(LCM_MODE == OPEN_ONCE)
  1388     01B9  30A1               	movlw	161
  1389     01BA  0020               	movlb	0	; select bank0
  1390     01BB  0627               	xorwf	_LCM_MODE,w
  1391     01BC  1D03               	btfss	3,2
  1392     01BD  29BF               	goto	u881
  1393     01BE  29C0               	goto	u880
  1394     01BF                     u881:
  1395     01BF  29F6               	goto	l1761
  1396     01C0                     u880:
  1397     01C0                     l1743:
  1398                           
  1399                           ;main.c: 249:                         {;main.c: 250:                             LCM_MOD
      +                          E = CLOSE;
  1400     01C0  30A3               	movlw	163
  1401     01C1  00A7               	movwf	_LCM_MODE
  1402     01C2                     l1745:
  1403                           
  1404                           ;main.c: 251:                             LOCK_CNTL_LOW();
  1405     01C2  3183  232D  3181   	fcall	_LOCK_CNTL_LOW
  1406     01C5  29F6               	goto	l1761
  1407     01C6                     l1747:
  1408                           
  1409                           ;main.c: 255:                     {;main.c: 256:                         LCM_MODE = OPEN
      +                          _CONTINUE;
  1410     01C6  30A2               	movlw	162
  1411     01C7  0020               	movlb	0	; select bank0
  1412     01C8  00A7               	movwf	_LCM_MODE
  1413     01C9  29F6               	goto	l1761
  1414     01CA                     l1749:
  1415                           
  1416                           ;main.c: 260:                     if(!lock_cntl_state())
  1417     01CA  3182  22F4  3181   	fcall	_lock_cntl_state
  1418     01CD  3A00               	xorlw	0
  1419     01CE  1D03               	skipz
  1420     01CF  29D1               	goto	u891
  1421     01D0  29D2               	goto	u890
  1422     01D1                     u891:
  1423     01D1  29F6               	goto	l1761
  1424     01D2                     u890:
  1425     01D2                     l1751:
  1426                           
  1427                           ;main.c: 261:                     {;main.c: 262:                         LOCK_CNTL_HIGH(
      +                          );
  1428     01D2  3183  2330  3181   	fcall	_LOCK_CNTL_HIGH
  1429     01D5  29F6               	goto	l1761
  1430     01D6                     l1753:
  1431                           
  1432                           ;main.c: 266:                     if(lock_cntl_state())
  1433     01D6  3182  22F4  3181   	fcall	_lock_cntl_state
  1434     01D9  3A00               	xorlw	0
  1435     01DA  1903               	skipnz
  1436     01DB  29DD               	goto	u901
  1437     01DC  29DE               	goto	u900
  1438     01DD                     u901:
  1439     01DD  29F6               	goto	l1761
  1440     01DE                     u900:
  1441     01DE  29C2               	goto	l1745
  1442     01DF                     l1759:
  1443     01DF  0020               	movlb	0	; select bank0
  1444     01E0  0827               	movf	_LCM_MODE,w
  1445     01E1  00AC               	movwf	??_main
  1446     01E2  01AD               	clrf	??_main+1
  1447                           
  1448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1449                           ; Switch size 1, requested type "simple"
  1450                           ; Number of cases is 1, Range of values is 0 to 0
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte            4     3 (average)
  1454                           ; direct_byte            8     6 (fixed)
  1455                           ; jumptable            260     6 (fixed)
  1456                           ;	Chosen strategy is simple_byte
  1457     01E3  082D               	movf	??_main+1,w
  1458     01E4  3A00               	xorlw	0	; case 0
  1459     01E5  1903               	skipnz
  1460     01E6  29E8               	goto	l1883
  1461     01E7  29F6               	goto	l1761
  1462     01E8                     l1883:
  1463                           
  1464                           ; Switch size 1, requested type "simple"
  1465                           ; Number of cases is 4, Range of values is 0 to 163
  1466                           ; switch strategies available:
  1467                           ; Name         Instructions Cycles
  1468                           ; simple_byte           13     7 (average)
  1469                           ; jumptable            260     6 (fixed)
  1470                           ;	Chosen strategy is simple_byte
  1471     01E8  082C               	movf	??_main,w
  1472     01E9  3A00               	xorlw	0	; case 0
  1473     01EA  1903               	skipnz
  1474     01EB  29F6               	goto	l1761
  1475     01EC  3AA1               	xorlw	161	; case 161
  1476     01ED  1903               	skipnz
  1477     01EE  29A9               	goto	l1735
  1478     01EF  3A03               	xorlw	3	; case 162
  1479     01F0  1903               	skipnz
  1480     01F1  29CA               	goto	l1749
  1481     01F2  3A01               	xorlw	1	; case 163
  1482     01F3  1903               	skipnz
  1483     01F4  29D6               	goto	l1753
  1484     01F5  29F6               	goto	l1761
  1485     01F6                     l1761:
  1486                           
  1487                           ;main.c: 272:             if(boot_time >= lcm_duration_time)
  1488     01F6  0020               	movlb	0	; select bank0
  1489     01F7  082F               	movf	_lcm_duration_time,w
  1490     01F8  0224               	subwf	_boot_time,w
  1491     01F9  1C03               	skipc
  1492     01FA  29FC               	goto	u911
  1493     01FB  29FD               	goto	u910
  1494     01FC                     u911:
  1495     01FC  2A0A               	goto	l1771
  1496     01FD                     u910:
  1497     01FD                     l1763:
  1498                           
  1499                           ;main.c: 273:             {;main.c: 274:                 SELECTOR_WDT();
  1500     01FD  3182  22FD  3181   	fcall	_SELECTOR_WDT
  1501     0200                     l1765:
  1502                           
  1503                           ;main.c: 276:                 boot_time = 0;
  1504     0200  0020               	movlb	0	; select bank0
  1505     0201  01A4               	clrf	_boot_time
  1506     0202  2A0A               	goto	l1771
  1507     0203                     l1767:
  1508     0203  30A4               	movlw	164
  1509     0204  067D               	xorwf	_OPERATION_MODE,w
  1510     0205  1D03               	btfss	3,2
  1511     0206  2A08               	goto	u921
  1512     0207  2A09               	goto	u920
  1513     0208                     u921:
  1514     0208  2A0A               	goto	l1771
  1515     0209                     u920:
  1516     0209  298A               	goto	l1725
  1517     020A                     l1771:
  1518                           
  1519                           ;main.c: 294:         _delay((unsigned long)((100)*(500000/4000.0)));
  1520     020A  3011               	movlw	17
  1521     020B  0020               	movlb	0	; select bank0
  1522     020C  00AC               	movwf	??_main
  1523     020D  303A               	movlw	58
  1524     020E                     u957:
  1525     020E  0B89               	decfsz	9,f
  1526     020F  2A0E               	goto	u957
  1527     0210  0BAC               	decfsz	??_main,f
  1528     0211  2A0E               	goto	u957
  1529     0212  0000               	nop
  1530     0213  297E               	goto	l1717
  1531     0214  282F               	ljmp	start
  1532     0215                     __end_of_main:
  1533                           
  1534                           	psect	text1
  1535     0244                     __ptext1:	
  1536 ;; *************** function _lock_open *****************
  1537 ;; Defined at:
  1538 ;;		line 88 in file "main.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  seconds         1    wreg     unsigned char 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  seconds         1    3[BANK0 ] unsigned char 
  1543 ;;  i               1    2[BANK0 ] unsigned char 
  1544 ;;  iteration       1    1[BANK0 ] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1
  1554 ;;      Params:         0       0       0
  1555 ;;      Locals:         0       3       0
  1556 ;;      Temps:          0       1       0
  1557 ;;      Totals:         0       4       0
  1558 ;;Total ram usage:        4 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 4
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568     0244                     _lock_open:	
  1569                           ;psect for function _lock_open
  1570                           
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _lock_open: [wreg+status,2+status,0]
  1574                           ;lock_open@seconds stored from wreg
  1575     0244  0020               	movlb	0	; select bank0
  1576     0245  00AB               	movwf	lock_open@seconds
  1577     0246                     l1641:
  1578                           
  1579                           ;main.c: 88: void lock_open(uint8_t seconds);main.c: 89: {;main.c: 90:     uint8_t i;;ma
      +                          in.c: 91:     uint8_t iteration;;main.c: 92:     iteration = seconds * 2;
  1580     0246  352B               	lslf	lock_open@seconds,w
  1581     0247  00A9               	movwf	lock_open@iteration
  1582                           
  1583                           ;main.c: 94:     if(seconds == 0)
  1584     0248  082B               	movf	lock_open@seconds,w
  1585     0249  1D03               	btfss	3,2
  1586     024A  2A4C               	goto	u761
  1587     024B  2A4D               	goto	u760
  1588     024C                     u761:
  1589     024C  2A57               	goto	l1645
  1590     024D                     u760:
  1591     024D                     l1643:
  1592                           
  1593                           ;main.c: 95:     {;main.c: 96:         _delay((unsigned long)((500)*(500000/4000.0)));
  1594     024D  3052               	movlw	82
  1595     024E  0020               	movlb	0	; select bank0
  1596     024F  00A8               	movwf	??_lock_open
  1597     0250  3029               	movlw	41
  1598     0251                     u967:
  1599     0251  0B89               	decfsz	9,f
  1600     0252  2A51               	goto	u967
  1601     0253  0BA8               	decfsz	??_lock_open,f
  1602     0254  2A51               	goto	u967
  1603     0255  3200               	nop2
  1604                           
  1605                           ;main.c: 97:     }
  1606     0256  2A6D               	goto	l266
  1607     0257                     l1645:
  1608                           
  1609                           ;main.c: 99:     {;main.c: 100:         for(i = 0; i < iteration; i++)
  1610     0257  01AA               	clrf	lock_open@i
  1611     0258  2A67               	goto	l1651
  1612     0259                     l1647:
  1613                           
  1614                           ;main.c: 101:         {;main.c: 102:             _delay((unsigned long)((500)*(500000/40
      +                          00.0)));
  1615     0259  3052               	movlw	82
  1616     025A  0020               	movlb	0	; select bank0
  1617     025B  00A8               	movwf	??_lock_open
  1618     025C  3029               	movlw	41
  1619     025D                     u977:
  1620     025D  0B89               	decfsz	9,f
  1621     025E  2A5D               	goto	u977
  1622     025F  0BA8               	decfsz	??_lock_open,f
  1623     0260  2A5D               	goto	u977
  1624     0261  3200               	nop2
  1625     0262                     l1649:
  1626                           
  1627                           ;main.c: 103:         }
  1628     0262  3001               	movlw	1
  1629     0263  0020               	movlb	0	; select bank0
  1630     0264  00A8               	movwf	??_lock_open
  1631     0265  0828               	movf	??_lock_open,w
  1632     0266  07AA               	addwf	lock_open@i,f
  1633     0267                     l1651:
  1634     0267  0829               	movf	lock_open@iteration,w
  1635     0268  022A               	subwf	lock_open@i,w
  1636     0269  1C03               	skipc
  1637     026A  2A6C               	goto	u771
  1638     026B  2A6D               	goto	u770
  1639     026C                     u771:
  1640     026C  2A59               	goto	l1647
  1641     026D                     u770:
  1642     026D                     l266:
  1643     026D  0008               	return
  1644     026E                     __end_of_lock_open:
  1645                           
  1646                           	psect	text2
  1647     02F4                     __ptext2:	
  1648 ;; *************** function _lock_cntl_state *****************
  1649 ;; Defined at:
  1650 ;;		line 77 in file "main.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      _Bool 
  1657 ;; Registers used:
  1658 ;;		wreg
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1
  1664 ;;      Params:         0       0       0
  1665 ;;      Locals:         0       0       0
  1666 ;;      Temps:          0       0       0
  1667 ;;      Totals:         0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 4
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678     02F4                     _lock_cntl_state:	
  1679                           ;psect for function _lock_cntl_state
  1680                           
  1681     02F4                     l1629:	
  1682                           ;incstack = 0
  1683                           ; Regs used in _lock_cntl_state: [wreg]
  1684                           
  1685                           
  1686                           ;main.c: 79:     if(PORTAbits.RA1)
  1687     02F4  0020               	movlb	0	; select bank0
  1688     02F5  1C8C               	btfss	12,1	;volatile
  1689     02F6  2AF8               	goto	u751
  1690     02F7  2AF9               	goto	u750
  1691     02F8                     u751:
  1692     02F8  2AFB               	goto	l1637
  1693     02F9                     u750:
  1694     02F9                     l1631:
  1695                           
  1696                           ;main.c: 80:     {;main.c: 81:         return 1;
  1697     02F9  3001               	movlw	1
  1698     02FA  2AFC               	goto	l257
  1699     02FB                     l1637:
  1700                           
  1701                           ;main.c: 84:     {;main.c: 85:         return 0;
  1702     02FB  3000               	movlw	0
  1703     02FC                     l257:
  1704     02FC  0008               	return
  1705     02FD                     __end_of_lock_cntl_state:
  1706                           
  1707                           	psect	text3
  1708     02DA                     __ptext3:	
  1709 ;; *************** function _SYSTEM_Initialize *****************
  1710 ;; Defined at:
  1711 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1
  1725 ;;      Params:         0       0       0
  1726 ;;      Locals:         0       0       0
  1727 ;;      Temps:          0       0       0
  1728 ;;      Totals:         0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 5
  1732 ;; This function calls:
  1733 ;;		_EUSART_Initialize
  1734 ;;		_OSCILLATOR_Initialize
  1735 ;;		_PIN_MANAGER_Initialize
  1736 ;;		_TMR0_Initialize
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742     02DA                     _SYSTEM_Initialize:	
  1743                           ;psect for function _SYSTEM_Initialize
  1744                           
  1745     02DA                     l1485:	
  1746                           ;incstack = 0
  1747                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1748                           
  1749                           
  1750                           ;mcc_generated_files/mcc.c: 72:     PIN_MANAGER_Initialize();
  1751     02DA  3182  22A7  3182   	fcall	_PIN_MANAGER_Initialize
  1752                           
  1753                           ;mcc_generated_files/mcc.c: 73:     OSCILLATOR_Initialize();
  1754     02DD  3183  2321  3182   	fcall	_OSCILLATOR_Initialize
  1755                           
  1756                           ;mcc_generated_files/mcc.c: 74:     TMR0_Initialize();
  1757     02E0  3182  22E7  3182   	fcall	_TMR0_Initialize
  1758                           
  1759                           ;mcc_generated_files/mcc.c: 75:     EUSART_Initialize();
  1760     02E3  3182  22BA  3182   	fcall	_EUSART_Initialize
  1761     02E6                     l17:
  1762     02E6  0008               	return
  1763     02E7                     __end_of_SYSTEM_Initialize:
  1764                           
  1765                           	psect	text4
  1766     02E7                     __ptext4:	
  1767 ;; *************** function _TMR0_Initialize *****************
  1768 ;; Defined at:
  1769 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1
  1783 ;;      Params:         0       0       0
  1784 ;;      Locals:         0       0       0
  1785 ;;      Temps:          0       0       0
  1786 ;;      Totals:         0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 4
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_SYSTEM_Initialize
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797     02E7                     _TMR0_Initialize:	
  1798                           ;psect for function _TMR0_Initialize
  1799                           
  1800     02E7                     l1435:	
  1801                           ;incstack = 0
  1802                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1803                           
  1804                           
  1805                           ;mcc_generated_files/tmr0.c: 70:     OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  1806     02E7  0021               	movlb	1	; select bank1
  1807     02E8  0815               	movf	21,w	;volatile
  1808     02E9  39C0               	andlw	192
  1809     02EA  3817               	iorlw	23
  1810     02EB  0095               	movwf	21	;volatile
  1811     02EC                     l1437:
  1812                           
  1813                           ;mcc_generated_files/tmr0.c: 73:     TMR0 = 0x0B;
  1814     02EC  300B               	movlw	11
  1815     02ED  0020               	movlb	0	; select bank0
  1816     02EE  0095               	movwf	21	;volatile
  1817     02EF                     l1439:
  1818                           
  1819                           ;mcc_generated_files/tmr0.c: 76:     timer0ReloadVal= 11;
  1820     02EF  300B               	movlw	11
  1821     02F0  00F8               	movwf	_timer0ReloadVal	;volatile
  1822     02F1                     l1441:
  1823                           
  1824                           ;mcc_generated_files/tmr0.c: 79:     INTCONbits.TMR0IF = 0;
  1825     02F1  110B               	bcf	11,2	;volatile
  1826     02F2                     l1443:
  1827                           
  1828                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IE = 1;
  1829     02F2  168B               	bsf	11,5	;volatile
  1830     02F3                     l195:
  1831     02F3  0008               	return
  1832     02F4                     __end_of_TMR0_Initialize:
  1833                           
  1834                           	psect	text5
  1835     02A7                     __ptext5:	
  1836 ;; *************** function _PIN_MANAGER_Initialize *****************
  1837 ;; Defined at:
  1838 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1
  1852 ;;      Params:         0       0       0
  1853 ;;      Locals:         0       0       0
  1854 ;;      Temps:          0       0       0
  1855 ;;      Totals:         0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 4
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_SYSTEM_Initialize
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866     02A7                     _PIN_MANAGER_Initialize:	
  1867                           ;psect for function _PIN_MANAGER_Initialize
  1868                           
  1869     02A7                     l1413:	
  1870                           ;incstack = 0
  1871                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1872                           
  1873                           
  1874                           ;mcc_generated_files/pin_manager.c: 51:     LATA = 0x0;
  1875     02A7  0022               	movlb	2	; select bank2
  1876     02A8  018C               	clrf	12	;volatile
  1877                           
  1878                           ;mcc_generated_files/pin_manager.c: 52:     ANSELA = 0x0;
  1879     02A9  0023               	movlb	3	; select bank3
  1880     02AA  018C               	clrf	12	;volatile
  1881                           
  1882                           ;mcc_generated_files/pin_manager.c: 53:     WPUA = 0x0;
  1883     02AB  0024               	movlb	4	; select bank4
  1884     02AC  018C               	clrf	12	;volatile
  1885     02AD                     l1415:
  1886                           
  1887                           ;mcc_generated_files/pin_manager.c: 54:     TRISA = 0x38;
  1888     02AD  3038               	movlw	56
  1889     02AE  0021               	movlb	1	; select bank1
  1890     02AF  008C               	movwf	12	;volatile
  1891     02B0                     l1417:
  1892                           
  1893                           ;mcc_generated_files/pin_manager.c: 56:     OPTION_REGbits.nWPUEN = 0x1;
  1894     02B0  1795               	bsf	21,7	;volatile
  1895     02B1                     l1419:
  1896                           
  1897                           ;mcc_generated_files/pin_manager.c: 57:     APFCON = 0x84;
  1898     02B1  3084               	movlw	132
  1899     02B2  0022               	movlb	2	; select bank2
  1900     02B3  009D               	movwf	29	;volatile
  1901     02B4                     l1421:
  1902                           
  1903                           ;mcc_generated_files/pin_manager.c: 60:  IOCAFbits.IOCAF3 = 1;
  1904     02B4  0027               	movlb	7	; select bank7
  1905     02B5  1593               	bsf	19,3	;volatile
  1906     02B6                     l1423:
  1907                           
  1908                           ;mcc_generated_files/pin_manager.c: 63:  IOCANbits.IOCAN3 = 1;
  1909     02B6  1592               	bsf	18,3	;volatile
  1910     02B7                     l1425:
  1911                           
  1912                           ;mcc_generated_files/pin_manager.c: 66:  IOCAPbits.IOCAP3 = 0;
  1913     02B7  1191               	bcf	17,3	;volatile
  1914     02B8                     l1427:
  1915                           
  1916                           ;mcc_generated_files/pin_manager.c: 68:     INTCONbits.IOCIE = 1;
  1917     02B8  158B               	bsf	11,3	;volatile
  1918     02B9                     l43:
  1919     02B9  0008               	return
  1920     02BA                     __end_of_PIN_MANAGER_Initialize:
  1921                           
  1922                           	psect	text6
  1923     0321                     __ptext6:	
  1924 ;; *************** function _OSCILLATOR_Initialize *****************
  1925 ;; Defined at:
  1926 ;;		line 78 in file "mcc_generated_files/mcc.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1
  1940 ;;      Params:         0       0       0
  1941 ;;      Locals:         0       0       0
  1942 ;;      Temps:          0       0       0
  1943 ;;      Totals:         0       0       0
  1944 ;;Total ram usage:        0 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 4
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_SYSTEM_Initialize
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954     0321                     _OSCILLATOR_Initialize:	
  1955                           ;psect for function _OSCILLATOR_Initialize
  1956                           
  1957     0321                     l1429:	
  1958                           ;incstack = 0
  1959                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1960                           
  1961                           
  1962                           ;mcc_generated_files/mcc.c: 81:     OSCCON = 0x38;
  1963     0321  3038               	movlw	56
  1964     0322  0021               	movlb	1	; select bank1
  1965     0323  0099               	movwf	25	;volatile
  1966     0324                     l1431:
  1967                           
  1968                           ;mcc_generated_files/mcc.c: 83:     OSCSTAT = 0x00;
  1969     0324  019A               	clrf	26	;volatile
  1970     0325                     l1433:
  1971                           
  1972                           ;mcc_generated_files/mcc.c: 85:     OSCTUNE = 0x00;
  1973     0325  0198               	clrf	24	;volatile
  1974     0326                     l20:
  1975     0326  0008               	return
  1976     0327                     __end_of_OSCILLATOR_Initialize:
  1977                           
  1978                           	psect	text7
  1979     02BA                     __ptext7:	
  1980 ;; *************** function _EUSART_Initialize *****************
  1981 ;; Defined at:
  1982 ;;		line 64 in file "mcc_generated_files/eusart.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1
  1996 ;;      Params:         0       0       0
  1997 ;;      Locals:         0       0       0
  1998 ;;      Temps:          0       0       0
  1999 ;;      Totals:         0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 4
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_SYSTEM_Initialize
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010     02BA                     _EUSART_Initialize:	
  2011                           ;psect for function _EUSART_Initialize
  2012                           
  2013     02BA                     l1445:	
  2014                           ;incstack = 0
  2015                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2016                           
  2017                           
  2018                           ;mcc_generated_files/eusart.c: 67:     PIE1bits.RCIE = 0;
  2019     02BA  0021               	movlb	1	; select bank1
  2020     02BB  1291               	bcf	17,5	;volatile
  2021                           
  2022                           ;mcc_generated_files/eusart.c: 68:     PIE1bits.TXIE = 0;
  2023     02BC  1211               	bcf	17,4	;volatile
  2024     02BD                     l1447:
  2025                           
  2026                           ;mcc_generated_files/eusart.c: 73:     BAUDCON = 0x08;
  2027     02BD  3008               	movlw	8
  2028     02BE  0023               	movlb	3	; select bank3
  2029     02BF  009F               	movwf	31	;volatile
  2030                           
  2031                           ;mcc_generated_files/eusart.c: 76:     RCSTA = 0x90;
  2032     02C0  3090               	movlw	144
  2033     02C1  009D               	movwf	29	;volatile
  2034                           
  2035                           ;mcc_generated_files/eusart.c: 79:     TXSTA = 0x24;
  2036     02C2  3024               	movlw	36
  2037     02C3  009E               	movwf	30	;volatile
  2038                           
  2039                           ;mcc_generated_files/eusart.c: 82:     SPBRGL = 0x0C;
  2040     02C4  300C               	movlw	12
  2041     02C5  009B               	movwf	27	;volatile
  2042     02C6                     l1449:
  2043                           
  2044                           ;mcc_generated_files/eusart.c: 85:     SPBRGH = 0x00;
  2045     02C6  019C               	clrf	28	;volatile
  2046     02C7                     l1451:
  2047                           
  2048                           ;mcc_generated_files/eusart.c: 88:     PIE1bits.RCIE = 1;
  2049     02C7  0021               	movlb	1	; select bank1
  2050     02C8  1691               	bsf	17,5	;volatile
  2051     02C9                     l84:
  2052     02C9  0008               	return
  2053     02CA                     __end_of_EUSART_Initialize:
  2054                           
  2055                           	psect	text8
  2056     0215                     __ptext8:	
  2057 ;; *************** function _RESET_POWER *****************
  2058 ;; Defined at:
  2059 ;;		line 114 in file "main.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1
  2073 ;;      Params:         0       0       0
  2074 ;;      Locals:         0       0       0
  2075 ;;      Temps:          0       1       0
  2076 ;;      Totals:         0       1       0
  2077 ;;Total ram usage:        1 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 5
  2080 ;; This function calls:
  2081 ;;		_LOCK_CNTL_LOW
  2082 ;;		_POWER_OFF
  2083 ;;		_POWER_ON
  2084 ;;		_SELECTOR_LCM
  2085 ;;		_SELECTOR_WDT
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091     0215                     _RESET_POWER:	
  2092                           ;psect for function _RESET_POWER
  2093                           
  2094     0215                     l1653:	
  2095                           ;incstack = 0
  2096                           ; Regs used in _RESET_POWER: [wreg+status,2+status,0+pclath+cstack]
  2097                           
  2098                           
  2099                           ;main.c: 116:     LOCK_CNTL_LOW();
  2100     0215  3183  232D  3182   	fcall	_LOCK_CNTL_LOW
  2101                           
  2102                           ;main.c: 117:     POWER_OFF();
  2103     0218  3183  232A  3182   	fcall	_POWER_OFF
  2104     021B                     l1655:
  2105                           
  2106                           ;main.c: 118:     _delay((unsigned long)((100)*(500000/4000.0)));
  2107     021B  3011               	movlw	17
  2108     021C  0020               	movlb	0	; select bank0
  2109     021D  00A8               	movwf	??_RESET_POWER
  2110     021E  303A               	movlw	58
  2111     021F                     u987:
  2112     021F  0B89               	decfsz	9,f
  2113     0220  2A1F               	goto	u987
  2114     0221  0BA8               	decfsz	??_RESET_POWER,f
  2115     0222  2A1F               	goto	u987
  2116     0223  0000               	nop
  2117                           
  2118                           ;main.c: 119:     SELECTOR_WDT();
  2119     0224  3182  22FD  3182   	fcall	_SELECTOR_WDT
  2120     0227                     l1657:
  2121                           
  2122                           ;main.c: 120:     _delay((unsigned long)((300)*(500000/4000.0)));
  2123     0227  3031               	movlw	49
  2124     0228  0020               	movlb	0	; select bank0
  2125     0229  00A8               	movwf	??_RESET_POWER
  2126     022A  30B2               	movlw	178
  2127     022B                     u997:
  2128     022B  0B89               	decfsz	9,f
  2129     022C  2A2B               	goto	u997
  2130     022D  0BA8               	decfsz	??_RESET_POWER,f
  2131     022E  2A2B               	goto	u997
  2132     022F  0000               	nop
  2133     0230                     l1659:
  2134                           
  2135                           ;main.c: 121:     SELECTOR_LCM();
  2136     0230  3183  2306  3182   	fcall	_SELECTOR_LCM
  2137                           
  2138                           ;main.c: 122:     _delay((unsigned long)((100)*(500000/4000.0)));
  2139     0233  3011               	movlw	17
  2140     0234  0020               	movlb	0	; select bank0
  2141     0235  00A8               	movwf	??_RESET_POWER
  2142     0236  303A               	movlw	58
  2143     0237                     u1007:
  2144     0237  0B89               	decfsz	9,f
  2145     0238  2A37               	goto	u1007
  2146     0239  0BA8               	decfsz	??_RESET_POWER,f
  2147     023A  2A37               	goto	u1007
  2148     023B  0000               	nop
  2149     023C                     l1661:
  2150                           
  2151                           ;main.c: 123:     POWER_ON();
  2152     023C  3183  2327  3182   	fcall	_POWER_ON
  2153     023F                     l1663:
  2154                           
  2155                           ;main.c: 124:     WDT_MODE = CHECK_ALIVE;
  2156     023F  0020               	movlb	0	; select bank0
  2157     0240  01A6               	clrf	_WDT_MODE
  2158     0241                     l1665:
  2159                           
  2160                           ;main.c: 125:     tick_counter = 0;
  2161     0241  01A5               	clrf	_tick_counter
  2162     0242                     l1667:
  2163                           
  2164                           ;main.c: 126:     boot_time = 0;
  2165     0242  01A4               	clrf	_boot_time
  2166     0243                     l272:
  2167     0243  0008               	return
  2168     0244                     __end_of_RESET_POWER:
  2169                           
  2170                           	psect	text9
  2171     02FD                     __ptext9:	
  2172 ;; *************** function _SELECTOR_WDT *****************
  2173 ;; Defined at:
  2174 ;;		line 55 in file "main.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1
  2188 ;;      Params:         0       0       0
  2189 ;;      Locals:         0       0       0
  2190 ;;      Temps:          0       0       0
  2191 ;;      Totals:         0       0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 4
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_RESET_POWER
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203     02FD                     _SELECTOR_WDT:	
  2204                           ;psect for function _SELECTOR_WDT
  2205                           
  2206     02FD                     l1475:	
  2207                           ;incstack = 0
  2208                           ; Regs used in _SELECTOR_WDT: [wreg]
  2209                           
  2210                           
  2211                           ;main.c: 57:     PORTAbits.RA0 = 0;
  2212     02FD  0020               	movlb	0	; select bank0
  2213     02FE  100C               	bcf	12,0	;volatile
  2214                           
  2215                           ;main.c: 58:     OPERATION_MODE = WDT;
  2216     02FF  01FD               	clrf	_OPERATION_MODE
  2217     0300  0AFD               	incf	_OPERATION_MODE,f
  2218     0301                     l1477:
  2219                           
  2220                           ;main.c: 59:     _delay((unsigned long)((1)*(500000/4000.0)));
  2221     0301  3029               	movlw	41
  2222     0302                     u1017:
  2223     0302  0B89               	decfsz	9,f
  2224     0303  2B02               	goto	u1017
  2225     0304  3200               	nop2
  2226     0305                     l241:
  2227     0305  0008               	return
  2228     0306                     __end_of_SELECTOR_WDT:
  2229                           
  2230                           	psect	text10
  2231     0306                     __ptext10:	
  2232 ;; *************** function _SELECTOR_LCM *****************
  2233 ;; Defined at:
  2234 ;;		line 49 in file "main.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1
  2248 ;;      Params:         0       0       0
  2249 ;;      Locals:         0       0       0
  2250 ;;      Temps:          0       0       0
  2251 ;;      Totals:         0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 4
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_RESET_POWER
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263     0306                     _SELECTOR_LCM:	
  2264                           ;psect for function _SELECTOR_LCM
  2265                           
  2266     0306                     l1471:	
  2267                           ;incstack = 0
  2268                           ; Regs used in _SELECTOR_LCM: [wreg]
  2269                           
  2270                           
  2271                           ;main.c: 51:     PORTAbits.RA0 = 1;
  2272     0306  0020               	movlb	0	; select bank0
  2273     0307  140C               	bsf	12,0	;volatile
  2274     0308                     l1473:
  2275                           
  2276                           ;main.c: 52:     OPERATION_MODE = LCM;
  2277     0308  3002               	movlw	2
  2278     0309  00FD               	movwf	_OPERATION_MODE
  2279                           
  2280                           ;main.c: 53:     _delay((unsigned long)((1)*(500000/4000.0)));
  2281     030A  3029               	movlw	41
  2282     030B                     u1027:
  2283     030B  0B89               	decfsz	9,f
  2284     030C  2B0B               	goto	u1027
  2285     030D  3200               	nop2
  2286     030E                     l238:
  2287     030E  0008               	return
  2288     030F                     __end_of_SELECTOR_LCM:
  2289                           
  2290                           	psect	text11
  2291     0327                     __ptext11:	
  2292 ;; *************** function _POWER_ON *****************
  2293 ;; Defined at:
  2294 ;;		line 69 in file "main.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		None
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1
  2308 ;;      Params:         0       0       0
  2309 ;;      Locals:         0       0       0
  2310 ;;      Temps:          0       0       0
  2311 ;;      Totals:         0       0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 4
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_RESET_POWER
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323     0327                     _POWER_ON:	
  2324                           ;psect for function _POWER_ON
  2325                           
  2326     0327                     l1481:	
  2327                           ;incstack = 0
  2328                           ; Regs used in _POWER_ON: []
  2329                           
  2330                           
  2331                           ;main.c: 71:     PORTAbits.RA2 = 1;
  2332     0327  0020               	movlb	0	; select bank0
  2333     0328  150C               	bsf	12,2	;volatile
  2334     0329                     l250:
  2335     0329  0008               	return
  2336     032A                     __end_of_POWER_ON:
  2337                           
  2338                           	psect	text12
  2339     032A                     __ptext12:	
  2340 ;; *************** function _POWER_OFF *****************
  2341 ;; Defined at:
  2342 ;;		line 73 in file "main.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		None
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1
  2356 ;;      Params:         0       0       0
  2357 ;;      Locals:         0       0       0
  2358 ;;      Temps:          0       0       0
  2359 ;;      Totals:         0       0       0
  2360 ;;Total ram usage:        0 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 4
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_RESET_POWER
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371     032A                     _POWER_OFF:	
  2372                           ;psect for function _POWER_OFF
  2373                           
  2374     032A                     l1483:	
  2375                           ;incstack = 0
  2376                           ; Regs used in _POWER_OFF: []
  2377                           
  2378                           
  2379                           ;main.c: 75:     PORTAbits.RA2 = 0;
  2380     032A  0020               	movlb	0	; select bank0
  2381     032B  110C               	bcf	12,2	;volatile
  2382     032C                     l253:
  2383     032C  0008               	return
  2384     032D                     __end_of_POWER_OFF:
  2385                           
  2386                           	psect	text13
  2387     032D                     __ptext13:	
  2388 ;; *************** function _LOCK_CNTL_LOW *****************
  2389 ;; Defined at:
  2390 ;;		line 65 in file "main.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		None
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1
  2404 ;;      Params:         0       0       0
  2405 ;;      Locals:         0       0       0
  2406 ;;      Temps:          0       0       0
  2407 ;;      Totals:         0       0       0
  2408 ;;Total ram usage:        0 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 4
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_RESET_POWER
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419     032D                     _LOCK_CNTL_LOW:	
  2420                           ;psect for function _LOCK_CNTL_LOW
  2421                           
  2422     032D                     l1479:	
  2423                           ;incstack = 0
  2424                           ; Regs used in _LOCK_CNTL_LOW: []
  2425                           
  2426                           
  2427                           ;main.c: 67:     PORTAbits.RA1 = 0;
  2428     032D  0020               	movlb	0	; select bank0
  2429     032E  108C               	bcf	12,1	;volatile
  2430     032F                     l247:
  2431     032F  0008               	return
  2432     0330                     __end_of_LOCK_CNTL_LOW:
  2433                           
  2434                           	psect	text14
  2435     0330                     __ptext14:	
  2436 ;; *************** function _LOCK_CNTL_HIGH *****************
  2437 ;; Defined at:
  2438 ;;		line 61 in file "main.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		None
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1
  2452 ;;      Params:         0       0       0
  2453 ;;      Locals:         0       0       0
  2454 ;;      Temps:          0       0       0
  2455 ;;      Totals:         0       0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; Hardware stack levels required when called: 4
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466     0330                     _LOCK_CNTL_HIGH:	
  2467                           ;psect for function _LOCK_CNTL_HIGH
  2468                           
  2469     0330                     l1627:	
  2470                           ;incstack = 0
  2471                           ; Regs used in _LOCK_CNTL_HIGH: []
  2472                           
  2473                           
  2474                           ;main.c: 63:     PORTAbits.RA1 = 1;
  2475     0330  0020               	movlb	0	; select bank0
  2476     0331  148C               	bsf	12,1	;volatile
  2477     0332                     l244:
  2478     0332  0008               	return
  2479     0333                     __end_of_LOCK_CNTL_HIGH:
  2480                           
  2481                           	psect	intentry
  2482     0004                     __pintentry:	
  2483 ;; *************** function _INTERRUPT_InterruptManager *****************
  2484 ;; Defined at:
  2485 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;		None
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1
  2499 ;;      Params:         0       0       0
  2500 ;;      Locals:         0       0       0
  2501 ;;      Temps:          0       0       0
  2502 ;;      Totals:         0       0       0
  2503 ;;Total ram usage:        0 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 3
  2506 ;; This function calls:
  2507 ;;		_EUSART_Receive_ISR
  2508 ;;		_PIN_MANAGER_IOC
  2509 ;;		_TMR0_ISR
  2510 ;; This function is called by:
  2511 ;;		Interrupt level 1
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515     0004                     _INTERRUPT_InterruptManager:
  2516                           
  2517                           ;incstack = 0
  2518     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2519                           
  2520                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2521     0005  3180               	pagesel	$
  2522     0006                     i1l1669:
  2523                           
  2524                           ;mcc_generated_files/interrupt_manager.c: 54:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  2525     0006  1D8B               	btfss	11,3	;volatile
  2526     0007  2809               	goto	u78_21
  2527     0008  280A               	goto	u78_20
  2528     0009                     u78_21:
  2529     0009  2813               	goto	i1l158
  2530     000A                     u78_20:
  2531     000A                     i1l1671:
  2532     000A  1C0B               	btfss	11,0	;volatile
  2533     000B  280D               	goto	u79_21
  2534     000C  280E               	goto	u79_20
  2535     000D                     u79_21:
  2536     000D  2813               	goto	i1l158
  2537     000E                     u79_20:
  2538     000E                     i1l1673:
  2539                           
  2540                           ;mcc_generated_files/interrupt_manager.c: 55:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 56:         PIN_MANAGER_IOC();
  2541     000E  3182  22CA  3180   	fcall	_PIN_MANAGER_IOC
  2542     0011                     i1l1675:
  2543                           
  2544                           ;mcc_generated_files/interrupt_manager.c: 59:         INTCONbits.IOCIF = 0;
  2545     0011  100B               	bcf	11,0	;volatile
  2546                           
  2547                           ;mcc_generated_files/interrupt_manager.c: 60:     }
  2548     0012  282D               	goto	i1l164
  2549     0013                     i1l158:	
  2550                           ;mcc_generated_files/interrupt_manager.c: 61:     else if(PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
  2551                           
  2552     0013  0021               	movlb	1	; select bank1
  2553     0014  1E91               	btfss	17,5	;volatile
  2554     0015  2817               	goto	u80_21
  2555     0016  2818               	goto	u80_20
  2556     0017                     u80_21:
  2557     0017  2821               	goto	i1l160
  2558     0018                     u80_20:
  2559     0018                     i1l1677:
  2560     0018  0020               	movlb	0	; select bank0
  2561     0019  1E91               	btfss	17,5	;volatile
  2562     001A  281C               	goto	u81_21
  2563     001B  281D               	goto	u81_20
  2564     001C                     u81_21:
  2565     001C  2821               	goto	i1l160
  2566     001D                     u81_20:
  2567     001D                     i1l1679:
  2568                           
  2569                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         EUSART_Receive_ISR();
  2570     001D  3180  2041  3180   	fcall	_EUSART_Receive_ISR
  2571                           
  2572                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  2573     0020  282D               	goto	i1l164
  2574     0021                     i1l160:	
  2575                           ;mcc_generated_files/interrupt_manager.c: 65:     else if(INTCONbits.TMR0IE == 1 && INTC
      +                          ONbits.TMR0IF == 1)
  2576                           
  2577     0021  1E8B               	btfss	11,5	;volatile
  2578     0022  2824               	goto	u82_21
  2579     0023  2825               	goto	u82_20
  2580     0024                     u82_21:
  2581     0024  282D               	goto	i1l161
  2582     0025                     u82_20:
  2583     0025                     i1l1681:
  2584     0025  1D0B               	btfss	11,2	;volatile
  2585     0026  2828               	goto	u83_21
  2586     0027  2829               	goto	u83_20
  2587     0028                     u83_21:
  2588     0028  282D               	goto	i1l161
  2589     0029                     u83_20:
  2590     0029                     i1l1683:
  2591                           
  2592                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         TMR0_ISR();
  2593     0029  3182  228F  3180   	fcall	_TMR0_ISR
  2594                           
  2595                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  2596     002C  282D               	goto	i1l164
  2597     002D                     i1l161:
  2598     002D                     i1l164:
  2599     002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2600     002E  0009               	retfie
  2601     002F                     __end_of_INTERRUPT_InterruptManager:
  2602                           
  2603                           	psect	text16
  2604     028F                     __ptext16:	
  2605 ;; *************** function _TMR0_ISR *****************
  2606 ;; Defined at:
  2607 ;;		line 85 in file "mcc_generated_files/tmr0.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0, pclath, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1
  2621 ;;      Params:         0       0       0
  2622 ;;      Locals:         0       0       0
  2623 ;;      Temps:          0       0       0
  2624 ;;      Totals:         0       0       0
  2625 ;;Total ram usage:        0 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 1
  2628 ;; This function calls:
  2629 ;;		_TMR0_CallBack
  2630 ;; This function is called by:
  2631 ;;		_INTERRUPT_InterruptManager
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635     028F                     _TMR0_ISR:	
  2636                           ;psect for function _TMR0_ISR
  2637                           
  2638     028F                     i1l1619:	
  2639                           ;incstack = 0
  2640                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2641                           
  2642                           
  2643                           ;mcc_generated_files/tmr0.c: 87:     static volatile unsigned int CountCallBack = 0;;mcc
      +                          _generated_files/tmr0.c: 90:     INTCONbits.TMR0IF = 0;
  2644     028F  110B               	bcf	11,2	;volatile
  2645     0290                     i1l1621:
  2646                           
  2647                           ;mcc_generated_files/tmr0.c: 92:     TMR0 = timer0ReloadVal;
  2648     0290  0878               	movf	_timer0ReloadVal,w	;volatile
  2649     0291  0020               	movlb	0	; select bank0
  2650     0292  0095               	movwf	21	;volatile
  2651                           
  2652                           ;mcc_generated_files/tmr0.c: 95:     if (++CountCallBack >= 2)
  2653     0293  3001               	movlw	1
  2654     0294  07A0               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  2655     0295  3000               	movlw	0
  2656     0296  3DA1               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  2657     0297  3000               	movlw	0
  2658     0298  0221               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  2659     0299  3002               	movlw	2
  2660     029A  1903               	skipnz
  2661     029B  0220               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  2662     029C  1C03               	skipc
  2663     029D  2A9F               	goto	u74_21
  2664     029E  2AA0               	goto	u74_20
  2665     029F                     u74_21:
  2666     029F  2AA6               	goto	i1l201
  2667     02A0                     u74_20:
  2668     02A0                     i1l1623:
  2669                           
  2670                           ;mcc_generated_files/tmr0.c: 96:     {;mcc_generated_files/tmr0.c: 98:         TMR0_Call
      +                          Back();
  2671     02A0  3183  230F  3182   	fcall	_TMR0_CallBack
  2672     02A3                     i1l1625:
  2673                           
  2674                           ;mcc_generated_files/tmr0.c: 101:         CountCallBack = 0;
  2675     02A3  0020               	movlb	0	; select bank0
  2676     02A4  01A0               	clrf	TMR0_ISR@CountCallBack	;volatile
  2677     02A5  01A1               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  2678     02A6                     i1l201:
  2679     02A6  0008               	return
  2680     02A7                     __end_of_TMR0_ISR:
  2681                           
  2682                           	psect	text17
  2683     030F                     __ptext17:	
  2684 ;; *************** function _TMR0_CallBack *****************
  2685 ;; Defined at:
  2686 ;;		line 107 in file "mcc_generated_files/tmr0.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1
  2700 ;;      Params:         0       0       0
  2701 ;;      Locals:         0       0       0
  2702 ;;      Temps:          1       0       0
  2703 ;;      Totals:         1       0       0
  2704 ;;Total ram usage:        1 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_TMR0_ISR
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713     030F                     _TMR0_CallBack:	
  2714                           ;psect for function _TMR0_CallBack
  2715                           
  2716     030F                     i1l1465:	
  2717                           ;incstack = 0
  2718                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
  2719                           
  2720                           
  2721                           ;mcc_generated_files/tmr0.c: 112:     tick_counter = tick_counter + 1;
  2722     030F  0020               	movlb	0	; select bank0
  2723     0310  0825               	movf	_tick_counter,w
  2724     0311  3E01               	addlw	1
  2725     0312  00A5               	movwf	_tick_counter
  2726     0313                     i1l1469:
  2727                           
  2728                           ;mcc_generated_files/tmr0.c: 117:     boot_time++;
  2729     0313  3001               	movlw	1
  2730     0314  00F0               	movwf	??_TMR0_CallBack
  2731     0315  0870               	movf	??_TMR0_CallBack,w
  2732     0316  07A4               	addwf	_boot_time,f
  2733     0317                     i1l205:
  2734     0317  0008               	return
  2735     0318                     __end_of_TMR0_CallBack:
  2736                           
  2737                           	psect	text18
  2738     02CA                     __ptext18:	
  2739 ;; *************** function _PIN_MANAGER_IOC *****************
  2740 ;; Defined at:
  2741 ;;		line 129 in file "main.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1
  2755 ;;      Params:         0       0       0
  2756 ;;      Locals:         0       0       0
  2757 ;;      Temps:          0       0       0
  2758 ;;      Totals:         0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_INTERRUPT_InterruptManager
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768     02CA                     _PIN_MANAGER_IOC:	
  2769                           ;psect for function _PIN_MANAGER_IOC
  2770                           
  2771     02CA                     i1l1611:	
  2772                           ;incstack = 0
  2773                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0]
  2774                           
  2775                           
  2776                           ;main.c: 132:     if (IOCAFbits.IOCAF3 == 1)
  2777     02CA  0027               	movlb	7	; select bank7
  2778     02CB  1D93               	btfss	19,3	;volatile
  2779     02CC  2ACE               	goto	u72_21
  2780     02CD  2ACF               	goto	u72_20
  2781     02CE                     u72_21:
  2782     02CE  2AD9               	goto	i1l277
  2783     02CF                     u72_20:
  2784     02CF                     i1l1613:
  2785                           
  2786                           ;main.c: 133:     {;main.c: 134:         IOCAFbits.IOCAF3 = 0;
  2787     02CF  1193               	bcf	19,3	;volatile
  2788     02D0                     i1l1615:
  2789                           
  2790                           ;main.c: 136:         if(OPERATION_MODE == LCM)
  2791     02D0  3002               	movlw	2
  2792     02D1  067D               	xorwf	_OPERATION_MODE,w
  2793     02D2  1D03               	btfss	3,2
  2794     02D3  2AD5               	goto	u73_21
  2795     02D4  2AD6               	goto	u73_20
  2796     02D5                     u73_21:
  2797     02D5  2AD9               	goto	i1l277
  2798     02D6                     u73_20:
  2799     02D6                     i1l1617:
  2800                           
  2801                           ;main.c: 137:         {;main.c: 138:             LCM_MODE = OPEN_ONCE;
  2802     02D6  30A1               	movlw	161
  2803     02D7  0020               	movlb	0	; select bank0
  2804     02D8  00A7               	movwf	_LCM_MODE
  2805     02D9                     i1l277:
  2806     02D9  0008               	return
  2807     02DA                     __end_of_PIN_MANAGER_IOC:
  2808                           
  2809                           	psect	text19
  2810     0041                     __ptext19:	
  2811 ;; *************** function _EUSART_Receive_ISR *****************
  2812 ;; Defined at:
  2813 ;;		line 106 in file "mcc_generated_files/eusart.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  buffer          1    7[COMMON] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1
  2827 ;;      Params:         0       0       0
  2828 ;;      Locals:         1       0       0
  2829 ;;      Temps:          2       0       0
  2830 ;;      Totals:         3       0       0
  2831 ;;Total ram usage:        3 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 2
  2834 ;; This function calls:
  2835 ;;		_Response_ACK
  2836 ;; This function is called by:
  2837 ;;		_INTERRUPT_InterruptManager
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841     0041                     _EUSART_Receive_ISR:	
  2842                           ;psect for function _EUSART_Receive_ISR
  2843                           
  2844     0041                     i1l1487:	
  2845                           ;incstack = 0
  2846                           ; Regs used in _EUSART_Receive_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2847                           
  2848                           
  2849                           ;mcc_generated_files/eusart.c: 108:     if(1 == RCSTAbits.OERR)
  2850     0041  0023               	movlb	3	; select bank3
  2851     0042  1C9D               	btfss	29,1	;volatile
  2852     0043  2845               	goto	u49_21
  2853     0044  2846               	goto	u49_20
  2854     0045                     u49_21:
  2855     0045  2848               	goto	i1l1491
  2856     0046                     u49_20:
  2857     0046                     i1l1489:
  2858                           
  2859                           ;mcc_generated_files/eusart.c: 109:     {;mcc_generated_files/eusart.c: 111:         RCS
      +                          TAbits.CREN = 0;
  2860     0046  121D               	bcf	29,4	;volatile
  2861                           
  2862                           ;mcc_generated_files/eusart.c: 112:         RCSTAbits.CREN = 1;
  2863     0047  161D               	bsf	29,4	;volatile
  2864     0048                     i1l1491:
  2865     0048                     i1l1493:
  2866                           
  2867                           ;mcc_generated_files/eusart.c: 120:     buffer = RCREG;
  2868     0048  0819               	movf	25,w	;volatile
  2869     0049  00F7               	movwf	EUSART_Receive_ISR@buffer
  2870     004A                     i1l1495:
  2871                           
  2872                           ;mcc_generated_files/eusart.c: 122:     if(!header_received)
  2873     004A  0020               	movlb	0	; select bank0
  2874     004B  0823               	movf	EUSART_Receive_ISR@header_received,w
  2875     004C  1D03               	btfss	3,2
  2876     004D  284F               	goto	u50_21
  2877     004E  2850               	goto	u50_20
  2878     004F                     u50_21:
  2879     004F  2867               	goto	i1l1507
  2880     0050                     u50_20:
  2881     0050                     i1l1497:
  2882                           
  2883                           ;mcc_generated_files/eusart.c: 123:     {;mcc_generated_files/eusart.c: 124:         if(
      +                          buffer == 0x02)
  2884     0050  3002               	movlw	2
  2885     0051  0677               	xorwf	EUSART_Receive_ISR@buffer,w
  2886     0052  1D03               	btfss	3,2
  2887     0053  2855               	goto	u51_21
  2888     0054  2856               	goto	u51_20
  2889     0055                     u51_21:
  2890     0055  2863               	goto	i1l1505
  2891     0056                     u51_20:
  2892     0056                     i1l1499:
  2893                           
  2894                           ;mcc_generated_files/eusart.c: 125:         {;mcc_generated_files/eusart.c: 126:        
      +                               header_received = 1;
  2895     0056  01A3               	clrf	EUSART_Receive_ISR@header_received
  2896     0057  0AA3               	incf	EUSART_Receive_ISR@header_received,f
  2897     0058                     i1l1501:
  2898                           
  2899                           ;mcc_generated_files/eusart.c: 127:             command[index] = 0x02;
  2900     0058  0879               	movf	EUSART_Receive_ISR@index,w
  2901     0059  3E7A               	addlw	(low (_command| 0))& (0+255)
  2902     005A  0086               	movwf	6
  2903     005B  0187               	clrf	7
  2904     005C  3002               	movlw	2
  2905     005D  0081               	movwf	1
  2906     005E                     i1l1503:
  2907                           
  2908                           ;mcc_generated_files/eusart.c: 128:             index++;
  2909     005E  3001               	movlw	1
  2910     005F  00F5               	movwf	??_EUSART_Receive_ISR
  2911     0060  0875               	movf	??_EUSART_Receive_ISR,w
  2912     0061  07F9               	addwf	EUSART_Receive_ISR@index,f
  2913                           
  2914                           ;mcc_generated_files/eusart.c: 129:         }
  2915     0062  28BC               	goto	i1l1539
  2916     0063                     i1l1505:
  2917                           
  2918                           ;mcc_generated_files/eusart.c: 131:         {;mcc_generated_files/eusart.c: 132:        
      +                               header_received = 0;
  2919     0063  01A3               	clrf	EUSART_Receive_ISR@header_received
  2920                           
  2921                           ;mcc_generated_files/eusart.c: 133:             data_received = 0;
  2922     0064  01A2               	clrf	EUSART_Receive_ISR@data_received
  2923                           
  2924                           ;mcc_generated_files/eusart.c: 134:             index = 0;
  2925     0065  01F9               	clrf	EUSART_Receive_ISR@index
  2926     0066  28BC               	goto	i1l1539
  2927     0067                     i1l1507:
  2928                           
  2929                           ;mcc_generated_files/eusart.c: 138:     {;mcc_generated_files/eusart.c: 139:         com
      +                          mand[index] = buffer;
  2930     0067  0879               	movf	EUSART_Receive_ISR@index,w
  2931     0068  3E7A               	addlw	(low (_command| 0))& (0+255)
  2932     0069  0086               	movwf	6
  2933     006A  0187               	clrf	7
  2934     006B  0877               	movf	EUSART_Receive_ISR@buffer,w
  2935     006C  0081               	movwf	1
  2936     006D                     i1l1509:
  2937                           
  2938                           ;mcc_generated_files/eusart.c: 140:         index++;
  2939     006D  3001               	movlw	1
  2940     006E  00F5               	movwf	??_EUSART_Receive_ISR
  2941     006F  0875               	movf	??_EUSART_Receive_ISR,w
  2942     0070  07F9               	addwf	EUSART_Receive_ISR@index,f
  2943     0071                     i1l1511:
  2944                           
  2945                           ;mcc_generated_files/eusart.c: 141:         if(index == sizeof(command))
  2946     0071  3003               	movlw	3
  2947     0072  0679               	xorwf	EUSART_Receive_ISR@index,w
  2948     0073  1D03               	btfss	3,2
  2949     0074  2876               	goto	u52_21
  2950     0075  2877               	goto	u52_20
  2951     0076                     u52_21:
  2952     0076  28BC               	goto	i1l1539
  2953     0077                     u52_20:
  2954     0077                     i1l1513:
  2955                           
  2956                           ;mcc_generated_files/eusart.c: 142:         {;mcc_generated_files/eusart.c: 149:      if
      +                           ( (command[1] == 0x11) || (command[1] == 0x12) || (command[1] == 0x13)
  2957     0077  3011               	movlw	17
  2958     0078  067B               	xorwf	_command+1,w
  2959     0079  1903               	btfsc	3,2
  2960     007A  287C               	goto	u53_21
  2961     007B  287D               	goto	u53_20
  2962     007C                     u53_21:
  2963     007C  28B9               	goto	i1l112
  2964     007D                     u53_20:
  2965     007D                     i1l1515:
  2966     007D  3012               	movlw	18
  2967     007E  067B               	xorwf	_command+1,w
  2968     007F  1903               	btfsc	3,2
  2969     0080  2882               	goto	u54_21
  2970     0081  2883               	goto	u54_20
  2971     0082                     u54_21:
  2972     0082  28B9               	goto	i1l112
  2973     0083                     u54_20:
  2974     0083                     i1l1517:
  2975     0083  3013               	movlw	19
  2976     0084  067B               	xorwf	_command+1,w
  2977     0085  1903               	btfsc	3,2
  2978     0086  2888               	goto	u55_21
  2979     0087  2889               	goto	u55_20
  2980     0088                     u55_21:
  2981     0088  28B9               	goto	i1l112
  2982     0089                     u55_20:
  2983     0089                     i1l1519:
  2984     0089  3015               	movlw	21
  2985     008A  067B               	xorwf	_command+1,w
  2986     008B  1903               	btfsc	3,2
  2987     008C  288E               	goto	u56_21
  2988     008D  288F               	goto	u56_20
  2989     008E                     u56_21:
  2990     008E  28B9               	goto	i1l112
  2991     008F                     u56_20:
  2992     008F                     i1l1521:
  2993     008F  3021               	movlw	33
  2994     0090  067B               	xorwf	_command+1,w
  2995     0091  1903               	btfsc	3,2
  2996     0092  2894               	goto	u57_21
  2997     0093  2895               	goto	u57_20
  2998     0094                     u57_21:
  2999     0094  28B9               	goto	i1l112
  3000     0095                     u57_20:
  3001     0095                     i1l1523:
  3002     0095  3022               	movlw	34
  3003     0096  067B               	xorwf	_command+1,w
  3004     0097  1903               	btfsc	3,2
  3005     0098  289A               	goto	u58_21
  3006     0099  289B               	goto	u58_20
  3007     009A                     u58_21:
  3008     009A  28B9               	goto	i1l112
  3009     009B                     u58_20:
  3010     009B                     i1l1525:
  3011     009B  3023               	movlw	35
  3012     009C  067B               	xorwf	_command+1,w
  3013     009D  1903               	btfsc	3,2
  3014     009E  28A0               	goto	u59_21
  3015     009F  28A1               	goto	u59_20
  3016     00A0                     u59_21:
  3017     00A0  28B9               	goto	i1l112
  3018     00A1                     u59_20:
  3019     00A1                     i1l1527:
  3020     00A1  30A1               	movlw	161
  3021     00A2  067B               	xorwf	_command+1,w
  3022     00A3  1903               	btfsc	3,2
  3023     00A4  28A6               	goto	u60_21
  3024     00A5  28A7               	goto	u60_20
  3025     00A6                     u60_21:
  3026     00A6  28B9               	goto	i1l112
  3027     00A7                     u60_20:
  3028     00A7                     i1l1529:
  3029     00A7  30A2               	movlw	162
  3030     00A8  067B               	xorwf	_command+1,w
  3031     00A9  1903               	btfsc	3,2
  3032     00AA  28AC               	goto	u61_21
  3033     00AB  28AD               	goto	u61_20
  3034     00AC                     u61_21:
  3035     00AC  28B9               	goto	i1l112
  3036     00AD                     u61_20:
  3037     00AD                     i1l1531:
  3038     00AD  30A3               	movlw	163
  3039     00AE  067B               	xorwf	_command+1,w
  3040     00AF  1903               	btfsc	3,2
  3041     00B0  28B2               	goto	u62_21
  3042     00B1  28B3               	goto	u62_20
  3043     00B2                     u62_21:
  3044     00B2  28B9               	goto	i1l112
  3045     00B3                     u62_20:
  3046     00B3                     i1l1533:
  3047     00B3  30A4               	movlw	164
  3048     00B4  067B               	xorwf	_command+1,w
  3049     00B5  1D03               	btfss	3,2
  3050     00B6  28B8               	goto	u63_21
  3051     00B7  28B9               	goto	u63_20
  3052     00B8                     u63_21:
  3053     00B8  2863               	goto	i1l1505
  3054     00B9                     u63_20:
  3055     00B9                     i1l112:
  3056                           
  3057                           ;mcc_generated_files/eusart.c: 153:             {;mcc_generated_files/eusart.c: 154:    
      +                                       data_received = 1;
  3058     00B9  01A2               	clrf	EUSART_Receive_ISR@data_received
  3059     00BA  0AA2               	incf	EUSART_Receive_ISR@data_received,f
  3060     00BB                     i1l1535:
  3061                           
  3062                           ;mcc_generated_files/eusart.c: 155:                 index = 0;
  3063     00BB  01F9               	clrf	EUSART_Receive_ISR@index
  3064     00BC                     i1l1539:	
  3065                           ;mcc_generated_files/eusart.c: 169:             }
  3066                           
  3067                           
  3068                           ;mcc_generated_files/eusart.c: 179:     if(data_received)
  3069     00BC  0822               	movf	EUSART_Receive_ISR@data_received,w
  3070     00BD  1903               	btfsc	3,2
  3071     00BE  28C0               	goto	u64_21
  3072     00BF  28C1               	goto	u64_20
  3073     00C0                     u64_21:
  3074     00C0  294C               	goto	i1l141
  3075     00C1                     u64_20:
  3076     00C1                     i1l1541:
  3077                           
  3078                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 182:         hea
      +                          der_received = 0;
  3079     00C1  01A3               	clrf	EUSART_Receive_ISR@header_received
  3080                           
  3081                           ;mcc_generated_files/eusart.c: 183:         data_received = 0;
  3082     00C2  01A2               	clrf	EUSART_Receive_ISR@data_received
  3083     00C3                     i1l1543:
  3084                           
  3085                           ;mcc_generated_files/eusart.c: 185:         if(OPERATION_MODE == WDT)
  3086     00C3  037D               	decf	_OPERATION_MODE,w
  3087     00C4  1D03               	btfss	3,2
  3088     00C5  28C7               	goto	u65_21
  3089     00C6  28C8               	goto	u65_20
  3090     00C7                     u65_21:
  3091     00C7  2923               	goto	i1l1579
  3092     00C8                     u65_20:
  3093     00C8  2900               	goto	i1l1577
  3094     00C9                     i1l1547:
  3095                           
  3096                           ;mcc_generated_files/eusart.c: 190:                     tick_counter = 0;
  3097     00C9  01A5               	clrf	_tick_counter
  3098                           
  3099                           ;mcc_generated_files/eusart.c: 191:                     break;
  3100     00CA  2948               	goto	i1l1597
  3101     00CB                     i1l1549:
  3102                           
  3103                           ;mcc_generated_files/eusart.c: 193:                     WDT_MODE = WDT_DISABLE;
  3104     00CB  3012               	movlw	18
  3105     00CC  00A6               	movwf	_WDT_MODE
  3106                           
  3107                           ;mcc_generated_files/eusart.c: 194:                     break;
  3108     00CD  2948               	goto	i1l1597
  3109     00CE                     i1l1551:
  3110                           
  3111                           ;mcc_generated_files/eusart.c: 196:                     WDT_MODE = WDT_ENABLE;
  3112     00CE  3013               	movlw	19
  3113     00CF  00A6               	movwf	_WDT_MODE
  3114                           
  3115                           ;mcc_generated_files/eusart.c: 197:                     break;
  3116     00D0  2948               	goto	i1l1597
  3117     00D1                     i1l1553:
  3118                           
  3119                           ;mcc_generated_files/eusart.c: 204:                     WDT_MODE = WDT_DISABLE;
  3120     00D1  3012               	movlw	18
  3121     00D2  00A6               	movwf	_WDT_MODE
  3122                           
  3123                           ;mcc_generated_files/eusart.c: 205:                     live_check_time = 60;
  3124     00D3  303C               	movlw	60
  3125     00D4  00B0               	movwf	_live_check_time
  3126                           
  3127                           ;mcc_generated_files/eusart.c: 206:                     lcm_duration_time = 5;
  3128     00D5  3005               	movlw	5
  3129     00D6  00AF               	movwf	_lcm_duration_time
  3130                           
  3131                           ;mcc_generated_files/eusart.c: 207:                     lock_open_time = 3;
  3132     00D7  3003               	movlw	3
  3133     00D8  00AE               	movwf	_lock_open_time
  3134                           
  3135                           ;mcc_generated_files/eusart.c: 208:                     break;
  3136     00D9  2948               	goto	i1l1597
  3137     00DA                     i1l1555:
  3138                           
  3139                           ;mcc_generated_files/eusart.c: 210:                     if(command[2] == 0x00)
  3140     00DA  087C               	movf	_command+2,w
  3141     00DB  1D03               	btfss	3,2
  3142     00DC  28DE               	goto	u66_21
  3143     00DD  28DF               	goto	u66_20
  3144     00DE                     u66_21:
  3145     00DE  28E1               	goto	i1l1559
  3146     00DF                     u66_20:
  3147     00DF                     i1l1557:
  3148                           
  3149                           ;mcc_generated_files/eusart.c: 211:                     {;mcc_generated_files/eusart.c: 
      +                          212:                         LCM_MODE = NORMAL;
  3150     00DF  01A7               	clrf	_LCM_MODE
  3151                           
  3152                           ;mcc_generated_files/eusart.c: 213:                     }
  3153     00E0  2948               	goto	i1l1597
  3154     00E1                     i1l1559:
  3155     00E1  037C               	decf	_command+2,w
  3156     00E2  1D03               	btfss	3,2
  3157     00E3  28E5               	goto	u67_21
  3158     00E4  28E6               	goto	u67_20
  3159     00E5                     u67_21:
  3160     00E5  28E9               	goto	i1l1563
  3161     00E6                     u67_20:
  3162     00E6                     i1l1561:
  3163                           
  3164                           ;mcc_generated_files/eusart.c: 215:                     {;mcc_generated_files/eusart.c: 
      +                          216:                         LCM_MODE = OPEN_CONTINUE;
  3165     00E6  30A2               	movlw	162
  3166     00E7  00A7               	movwf	_LCM_MODE
  3167                           
  3168                           ;mcc_generated_files/eusart.c: 217:                     }
  3169     00E8  2948               	goto	i1l1597
  3170     00E9                     i1l1563:
  3171     00E9  3002               	movlw	2
  3172     00EA  067C               	xorwf	_command+2,w
  3173     00EB  1D03               	btfss	3,2
  3174     00EC  28EE               	goto	u68_21
  3175     00ED  28EF               	goto	u68_20
  3176     00EE                     u68_21:
  3177     00EE  2922               	goto	i1l118
  3178     00EF                     u68_20:
  3179     00EF                     i1l1565:
  3180                           
  3181                           ;mcc_generated_files/eusart.c: 219:                     {;mcc_generated_files/eusart.c: 
      +                          220:                         LCM_MODE = CLOSE;
  3182     00EF  30A3               	movlw	163
  3183     00F0  00A7               	movwf	_LCM_MODE
  3184     00F1  2948               	goto	i1l1597
  3185     00F2                     i1l1567:
  3186                           
  3187                           ;mcc_generated_files/eusart.c: 224:                     lock_open_time = command[2];
  3188     00F2  087C               	movf	_command+2,w
  3189     00F3  00AE               	movwf	_lock_open_time
  3190                           
  3191                           ;mcc_generated_files/eusart.c: 225:                     break;
  3192     00F4  2948               	goto	i1l1597
  3193     00F5                     i1l1569:
  3194                           
  3195                           ;mcc_generated_files/eusart.c: 227:                     lcm_duration_time = command[2];
  3196     00F5  087C               	movf	_command+2,w
  3197     00F6  00AF               	movwf	_lcm_duration_time
  3198                           
  3199                           ;mcc_generated_files/eusart.c: 228:                     break;
  3200     00F7  2948               	goto	i1l1597
  3201     00F8                     i1l1571:
  3202                           
  3203                           ;mcc_generated_files/eusart.c: 230:                     if(command[2] == 0)
  3204     00F8  087C               	movf	_command+2,w
  3205     00F9  1D03               	btfss	3,2
  3206     00FA  28FC               	goto	u69_21
  3207     00FB  28FD               	goto	u69_20
  3208     00FC                     u69_21:
  3209     00FC  2948               	goto	i1l1597
  3210     00FD                     u69_20:
  3211     00FD                     i1l1573:
  3212                           
  3213                           ;mcc_generated_files/eusart.c: 231:                     {;mcc_generated_files/eusart.c: 
      +                          232:                         OPERATION_MODE = REBOOT;
  3214     00FD  30A4               	movlw	164
  3215     00FE  00FD               	movwf	_OPERATION_MODE
  3216     00FF  2948               	goto	i1l1597
  3217     0100                     i1l1577:
  3218     0100  087B               	movf	_command+1,w
  3219     0101  00F5               	movwf	??_EUSART_Receive_ISR
  3220     0102  01F6               	clrf	??_EUSART_Receive_ISR+1
  3221                           
  3222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3223                           ; Switch size 1, requested type "simple"
  3224                           ; Number of cases is 1, Range of values is 0 to 0
  3225                           ; switch strategies available:
  3226                           ; Name         Instructions Cycles
  3227                           ; simple_byte            4     3 (average)
  3228                           ; direct_byte            8     6 (fixed)
  3229                           ; jumptable            260     6 (fixed)
  3230                           ;	Chosen strategy is simple_byte
  3231     0103  0876               	movf	??_EUSART_Receive_ISR+1,w
  3232     0104  3A00               	xorlw	0	; case 0
  3233     0105  1903               	skipnz
  3234     0106  2908               	goto	i1l1885
  3235     0107  2948               	goto	i1l1597
  3236     0108                     i1l1885:
  3237                           
  3238                           ; Switch size 1, requested type "simple"
  3239                           ; Number of cases is 8, Range of values is 17 to 164
  3240                           ; switch strategies available:
  3241                           ; Name         Instructions Cycles
  3242                           ; simple_byte           25    13 (average)
  3243                           ; jumptable            263     9 (fixed)
  3244                           ;	Chosen strategy is simple_byte
  3245     0108  0875               	movf	??_EUSART_Receive_ISR,w
  3246     0109  3A11               	xorlw	17	; case 17
  3247     010A  1903               	skipnz
  3248     010B  28C9               	goto	i1l1547
  3249     010C  3A03               	xorlw	3	; case 18
  3250     010D  1903               	skipnz
  3251     010E  28CB               	goto	i1l1549
  3252     010F  3A01               	xorlw	1	; case 19
  3253     0110  1903               	skipnz
  3254     0111  28CE               	goto	i1l1551
  3255     0112  3A06               	xorlw	6	; case 21
  3256     0113  1903               	skipnz
  3257     0114  28D1               	goto	i1l1553
  3258     0115  3A34               	xorlw	52	; case 33
  3259     0116  1903               	skipnz
  3260     0117  28DA               	goto	i1l1555
  3261     0118  3A03               	xorlw	3	; case 34
  3262     0119  1903               	skipnz
  3263     011A  28F2               	goto	i1l1567
  3264     011B  3A01               	xorlw	1	; case 35
  3265     011C  1903               	skipnz
  3266     011D  28F5               	goto	i1l1569
  3267     011E  3A87               	xorlw	135	; case 164
  3268     011F  1903               	skipnz
  3269     0120  28F8               	goto	i1l1571
  3270     0121  2948               	goto	i1l1597
  3271     0122                     i1l118:
  3272                           
  3273                           ;mcc_generated_files/eusart.c: 236:         }
  3274     0122  2948               	goto	i1l1597
  3275     0123                     i1l1579:
  3276     0123  3002               	movlw	2
  3277     0124  067D               	xorwf	_OPERATION_MODE,w
  3278     0125  1D03               	btfss	3,2
  3279     0126  2928               	goto	u70_21
  3280     0127  2929               	goto	u70_20
  3281     0128                     u70_21:
  3282     0128  2948               	goto	i1l1597
  3283     0129                     u70_20:
  3284     0129                     i1l1581:
  3285                           
  3286                           ;mcc_generated_files/eusart.c: 238:         {;mcc_generated_files/eusart.c: 239:        
      +                               if(command[2] == 0)
  3287     0129  087C               	movf	_command+2,w
  3288     012A  1D03               	btfss	3,2
  3289     012B  292D               	goto	u71_21
  3290     012C  292E               	goto	u71_20
  3291     012D                     u71_21:
  3292     012D  2948               	goto	i1l1597
  3293     012E                     u71_20:
  3294     012E  2932               	goto	i1l1595
  3295     012F                     i1l1585:
  3296                           
  3297                           ;mcc_generated_files/eusart.c: 244:                     LCM_MODE = OPEN_ONCE;
  3298     012F  30A1               	movlw	161
  3299     0130  00A7               	movwf	_LCM_MODE
  3300                           
  3301                           ;mcc_generated_files/eusart.c: 245:                     break;
  3302     0131  2948               	goto	i1l1597
  3303     0132                     i1l1595:
  3304     0132  087B               	movf	_command+1,w
  3305     0133  00F5               	movwf	??_EUSART_Receive_ISR
  3306     0134  01F6               	clrf	??_EUSART_Receive_ISR+1
  3307                           
  3308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3309                           ; Switch size 1, requested type "simple"
  3310                           ; Number of cases is 1, Range of values is 0 to 0
  3311                           ; switch strategies available:
  3312                           ; Name         Instructions Cycles
  3313                           ; simple_byte            4     3 (average)
  3314                           ; direct_byte            8     6 (fixed)
  3315                           ; jumptable            260     6 (fixed)
  3316                           ;	Chosen strategy is simple_byte
  3317     0135  0876               	movf	??_EUSART_Receive_ISR+1,w
  3318     0136  3A00               	xorlw	0	; case 0
  3319     0137  1903               	skipnz
  3320     0138  293A               	goto	i1l1887
  3321     0139  2948               	goto	i1l1597
  3322     013A                     i1l1887:
  3323                           
  3324                           ; Switch size 1, requested type "simple"
  3325                           ; Number of cases is 4, Range of values is 161 to 164
  3326                           ; switch strategies available:
  3327                           ; Name         Instructions Cycles
  3328                           ; simple_byte           13     7 (average)
  3329                           ; direct_byte           17     9 (fixed)
  3330                           ; jumptable            263     9 (fixed)
  3331                           ;	Chosen strategy is simple_byte
  3332     013A  0875               	movf	??_EUSART_Receive_ISR,w
  3333     013B  3AA1               	xorlw	161	; case 161
  3334     013C  1903               	skipnz
  3335     013D  292F               	goto	i1l1585
  3336     013E  3A03               	xorlw	3	; case 162
  3337     013F  1903               	skipnz
  3338     0140  28E6               	goto	i1l1561
  3339     0141  3A01               	xorlw	1	; case 163
  3340     0142  1903               	skipnz
  3341     0143  28EF               	goto	i1l1565
  3342     0144  3A07               	xorlw	7	; case 164
  3343     0145  1903               	skipnz
  3344     0146  28FD               	goto	i1l1573
  3345     0147  2948               	goto	i1l1597
  3346     0148                     i1l1597:
  3347                           
  3348                           ;mcc_generated_files/eusart.c: 259:         Response_ACK(&command);
  3349     0148  307A               	movlw	(low (_command| 0))& (0+255)
  3350     0149  3182  226E  3180   	fcall	_Response_ACK
  3351     014C                     i1l141:
  3352     014C  0008               	return
  3353     014D                     __end_of_EUSART_Receive_ISR:
  3354                           
  3355                           	psect	text20
  3356     026E                     __ptext20:	
  3357 ;; *************** function _Response_ACK *****************
  3358 ;; Defined at:
  3359 ;;		line 97 in file "mcc_generated_files/eusart.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  ack             1    wreg     PTR unsigned char 
  3362 ;;		 -> command(3), 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  ack             1    2[COMMON] PTR unsigned char 
  3365 ;;		 -> command(3), 
  3366 ;;  i               2    3[COMMON] int 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1
  3376 ;;      Params:         0       0       0
  3377 ;;      Locals:         3       0       0
  3378 ;;      Temps:          1       0       0
  3379 ;;      Totals:         4       0       0
  3380 ;;Total ram usage:        4 bytes
  3381 ;; Hardware stack levels used: 1
  3382 ;; Hardware stack levels required when called: 1
  3383 ;; This function calls:
  3384 ;;		_EUSART_Write
  3385 ;; This function is called by:
  3386 ;;		_EUSART_Receive_ISR
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390     026E                     _Response_ACK:	
  3391                           ;psect for function _Response_ACK
  3392                           
  3393                           
  3394                           ;incstack = 0
  3395                           ; Regs used in _Response_ACK: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3396                           ;Response_ACK@ack stored from wreg
  3397     026E  00F2               	movwf	Response_ACK@ack
  3398     026F                     i1l1453:
  3399                           
  3400                           ;mcc_generated_files/eusart.c: 97: void Response_ACK(uint8_t * ack);mcc_generated_files/
      +                          eusart.c: 98: {;mcc_generated_files/eusart.c: 99:     int i = 0;
  3401     026F  01F3               	clrf	Response_ACK@i
  3402     0270  01F4               	clrf	Response_ACK@i+1
  3403                           
  3404                           ;mcc_generated_files/eusart.c: 100:     for(i = 0 ; i < 3 ; i++)
  3405     0271  01F3               	clrf	Response_ACK@i
  3406     0272  01F4               	clrf	Response_ACK@i+1
  3407     0273                     i1l1459:
  3408                           
  3409                           ;mcc_generated_files/eusart.c: 101:     {;mcc_generated_files/eusart.c: 102:         EUS
      +                          ART_Write(ack[i]);
  3410     0273  0873               	movf	Response_ACK@i,w
  3411     0274  0772               	addwf	Response_ACK@ack,w
  3412     0275  00F1               	movwf	??_Response_ACK
  3413     0276  0871               	movf	??_Response_ACK,w
  3414     0277  0086               	movwf	6
  3415     0278  0187               	clrf	7
  3416     0279  0801               	movf	1,w
  3417     027A  3183  2318  3182   	fcall	_EUSART_Write
  3418     027D                     i1l1461:
  3419                           
  3420                           ;mcc_generated_files/eusart.c: 103:     }
  3421     027D  3001               	movlw	1
  3422     027E  07F3               	addwf	Response_ACK@i,f
  3423     027F  3000               	movlw	0
  3424     0280  3DF4               	addwfc	Response_ACK@i+1,f
  3425     0281                     i1l1463:
  3426     0281  0874               	movf	Response_ACK@i+1,w
  3427     0282  3A80               	xorlw	128
  3428     0283  00F1               	movwf	??_Response_ACK
  3429     0284  3080               	movlw	128
  3430     0285  0271               	subwf	??_Response_ACK,w
  3431     0286  1D03               	skipz
  3432     0287  2A8A               	goto	u48_25
  3433     0288  3003               	movlw	3
  3434     0289  0273               	subwf	Response_ACK@i,w
  3435     028A                     u48_25:
  3436     028A  1C03               	skipc
  3437     028B  2A8D               	goto	u48_21
  3438     028C  2A8E               	goto	u48_20
  3439     028D                     u48_21:
  3440     028D  2A73               	goto	i1l1459
  3441     028E                     u48_20:
  3442     028E                     i1l95:
  3443     028E  0008               	return
  3444     028F                     __end_of_Response_ACK:
  3445                           
  3446                           	psect	text21
  3447     0318                     __ptext21:	
  3448 ;; *************** function _EUSART_Write *****************
  3449 ;; Defined at:
  3450 ;;		line 91 in file "mcc_generated_files/eusart.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  txData          1    wreg     unsigned char 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  txData          1    0[COMMON] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1
  3464 ;;      Params:         0       0       0
  3465 ;;      Locals:         1       0       0
  3466 ;;      Temps:          0       0       0
  3467 ;;      Totals:         1       0       0
  3468 ;;Total ram usage:        1 bytes
  3469 ;; Hardware stack levels used: 1
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_Response_ACK
  3474 ;;		_request_wdt
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478     0318                     _EUSART_Write:	
  3479                           ;psect for function _EUSART_Write
  3480                           
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _EUSART_Write: [wreg]
  3484                           ;EUSART_Write@txData stored from wreg
  3485     0318  00F0               	movwf	EUSART_Write@txData
  3486     0319                     i1l1411:
  3487                           
  3488                           ;mcc_generated_files/eusart.c: 91: void EUSART_Write(uint8_t txData);mcc_generated_files
      +                          /eusart.c: 92: {;mcc_generated_files/eusart.c: 93:     TXREG = txData;
  3489     0319  0870               	movf	EUSART_Write@txData,w
  3490     031A  0023               	movlb	3	; select bank3
  3491     031B  009A               	movwf	26	;volatile
  3492     031C                     i1l87:	
  3493                           ;mcc_generated_files/eusart.c: 94:     while (!TRMT);
  3494                           
  3495     031C  1C9E               	btfss	30,1	;volatile
  3496     031D  2B1F               	goto	u47_21
  3497     031E  2B20               	goto	u47_20
  3498     031F                     u47_21:
  3499     031F  2B1C               	goto	i1l87
  3500     0320                     u47_20:
  3501     0320                     i1l90:
  3502     0320  0008               	return
  3503     0321                     __end_of_EUSART_Write:
  3504     007E                     btemp	set	126	;btemp
  3505     007E                     int$flags	set	126
  3506     007E                     wtemp0	set	126
  3507                           
  3508                           	psect	config
  3509                           
  3510                           ;Config register CONFIG1 @ 0x8007
  3511                           ;	Oscillator Selection
  3512                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3513                           ;	Watchdog Timer Enable
  3514                           ;	WDTE = OFF, WDT disabled
  3515                           ;	Power-up Timer Enable
  3516                           ;	PWRTE = OFF, PWRT disabled
  3517                           ;	MCLR Pin Function Select
  3518                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3519                           ;	Flash Program Memory Code Protection
  3520                           ;	CP = OFF, Program memory code protection is disabled
  3521                           ;	Data Memory Code Protection
  3522                           ;	CPD = OFF, Data memory code protection is disabled
  3523                           ;	Brown-out Reset Enable
  3524                           ;	BOREN = ON, Brown-out Reset enabled
  3525                           ;	Clock Out Enable
  3526                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3527                           ;	Internal/External Switchover
  3528                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3529                           ;	Fail-Safe Clock Monitor Enable
  3530                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3531     8007                     	org	32775
  3532     8007  3FA4               	dw	16292
  3533                           
  3534                           ;Config register CONFIG2 @ 0x8008
  3535                           ;	Flash Memory Self-Write Protection
  3536                           ;	WRT = OFF, Write protection off
  3537                           ;	PLL Enable
  3538                           ;	PLLEN = OFF, 4x PLL disabled
  3539                           ;	Stack Overflow/Underflow Reset Enable
  3540                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3541                           ;	Brown-out Reset Voltage Selection
  3542                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3543                           ;	Low-Voltage Programming Enable
  3544                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3545     8008                     	org	32776
  3546     8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      6      17
    BANK1            16      0       0

Pointer List with Targets:

    Response_ACK@ack	PTR unsigned char  size(1) Largest target is 3
		 -> command(COMMON[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _TMR0_ISR->_TMR0_CallBack
    _EUSART_Receive_ISR->_Response_ACK
    _Response_ACK->_EUSART_Write

Critical Paths under _main in BANK0

    _main->_lock_open

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      92
                                              4 BANK0      2     2      0
                     _LOCK_CNTL_HIGH
                      _LOCK_CNTL_LOW
                          _POWER_OFF
                           _POWER_ON
                        _RESET_POWER
                       _SELECTOR_LCM
                       _SELECTOR_WDT
                  _SYSTEM_Initialize
                    _lock_cntl_state
                          _lock_open
 ---------------------------------------------------------------------------------
 (1) _lock_open                                            4     4      0      91
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lock_cntl_state                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RESET_POWER                                          1     1      0       0
                                              0 BANK0      1     1      0
                      _LOCK_CNTL_LOW
                          _POWER_OFF
                           _POWER_ON
                       _SELECTOR_LCM
                       _SELECTOR_WDT
 ---------------------------------------------------------------------------------
 (1) _SELECTOR_WDT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SELECTOR_LCM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _POWER_ON                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _POWER_OFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LOCK_CNTL_LOW                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LOCK_CNTL_HIGH                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           0     0      0     192
                 _EUSART_Receive_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (5) _TMR0_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Receive_ISR                                   3     3      0     192
                                              5 COMMON     3     3      0
                       _Response_ACK
 ---------------------------------------------------------------------------------
 (5) _Response_ACK                                         4     4      0     146
                                              1 COMMON     4     4      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOCK_CNTL_HIGH
   _LOCK_CNTL_LOW
   _POWER_OFF
   _POWER_ON
   _RESET_POWER
     _LOCK_CNTL_LOW
     _POWER_OFF
     _POWER_ON
     _SELECTOR_LCM
     _SELECTOR_WDT
   _SELECTOR_LCM
   _SELECTOR_WDT
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _lock_cntl_state
   _lock_open

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
     _Response_ACK
       _EUSART_Write
   _PIN_MANAGER_IOC
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      11       6       21.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      1F       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Nov 10 13:29:50 2023

                                l20 0326                                  l17 02E6  
                                l43 02B9                                  l84 02C9  
                   _timer0ReloadVal 0078                                 l241 0305  
                               l250 0329                                 l244 0332  
                               l253 032C                                 l238 030E  
                               l247 032F                                 l272 0243  
                               l257 02FC                                 l266 026D  
                               l195 02F3                                 u900 01DE  
                               u901 01DD                                 u750 02F9  
                               u910 01FD                                 u751 02F8  
                               u911 01FC                                 u760 024D  
                               u920 0209                                 u840 0183  
                               u761 024C                                 u921 0208  
                               u841 0182                                 u770 026D  
                               u850 018A                                 u771 026C  
                               u851 0189                                 u860 01A8  
                               u861 01A7                                 u870 01B1  
                               u871 01B0                                 u880 01C0  
                               u881 01BF                                 u937 0168  
                               u890 01D2                                 u891 01D1  
                               u947 0176                                 u957 020E  
                               u967 0251                                 u977 025D  
                               u987 021F                                 u997 022B  
                               wreg 0009                                l1421 02B4  
                              l1413 02A7                                l1431 0324  
                              l1423 02B6                                l1415 02AD  
                              l1433 0325                                l1425 02B7  
                              l1417 02B0                                l1441 02F1  
                              l1451 02C7                                l1427 02B8  
                              l1419 02B1                                l1443 02F2  
                              l1435 02E7                                l1445 02BA  
                              l1429 0321                                l1437 02EC  
                              l1701 015A                                l1471 0306  
                              l1447 02BD                                l1439 02EF  
                              l1631 02F9                                l1711 0170  
                              l1703 015E                                l1481 0327  
                              l1473 0308                                l1449 02C6  
                              l1641 0246                                l1713 0172  
                              l1705 0161                                l1627 0330  
                              l1483 032A                                l1475 02FD  
                              l1651 0267                                l1643 024D  
                              l1723 0184                                l1731 01A2  
                              l1715 017B                                l1707 0164  
                              l1477 0301                                l1661 023C  
                              l1653 0215                                l1485 02DA  
                              l1637 02FB                                l1629 02F4  
                              l1645 0257                                l1741 01B9  
                              l1725 018A                                l1717 017E  
                              l1709 016D                                l1479 032D  
                              l1663 023F                                l1655 021B  
                              l1647 0259                                l1751 01D2  
                              l1743 01C0                                l1735 01A9  
                              l1665 0241                                l1657 0227  
                              l1649 0262                                l1753 01D6  
                              l1745 01C2                                l1761 01F6  
                              l1737 01B1                                l1729 018E  
                              l1667 0242                                l1659 0230  
                              l1763 01FD                                l1739 01B4  
                              l1747 01C6                                l1771 020A  
                              l1691 0151                                l1765 0200  
                              l1749 01CA                                l1693 0152  
                              l1759 01DF                                l1767 0203  
                              l1695 0155                                l1687 014D  
                              l1881 0197                                l1697 0157  
                              l1689 0150                                l1883 01E8  
                              l1699 0159                                u1007 0237  
                              u1017 0302                                u1027 030B  
                              _LATA 010C                                i1l90 0320  
                              i1l87 031C                                i1l95 028E  
                              _TMR0 0015                                _TRMT 0CF1  
                              _WPUA 020C                                _main 014D  
                              fsr1h 0007                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                              start 002F             __end_of_TMR0_Initialize 02F4  
                     ?_EUSART_Write 0070       __end_of_OSCILLATOR_Initialize 0327  
                             ?_main 0070                               i1l112 00B9  
                             i1l201 02A6                               i1l141 014C  
                             i1l205 0317                               i1l118 0122  
                             i1l160 0021                               i1l161 002D  
                             i1l164 002D                               i1l158 0013  
                             i1l277 02D9                               _RCREG 0199  
                             _RCSTA 019D                               u50_20 0050  
                             u50_21 004F                               u51_20 0056  
                             u51_21 0055                               u60_20 00A7  
                             u52_20 0077                               u60_21 00A6  
                             u52_21 0076                               u61_20 00AD  
                             u53_20 007D                               u61_21 00AC  
                             u53_21 007C                               u70_20 0129  
                             u62_20 00B3                               u54_20 0083  
                             u70_21 0128                               u62_21 00B2  
                             u54_21 0082                               u47_20 0320  
                             u71_20 012E                               u63_20 00B9  
                             u55_20 0089                               u47_21 031F  
                             u71_21 012D                               u63_21 00B8  
                             u55_21 0088                               u48_20 028E  
                             u64_20 00C1                               u56_20 008F  
                             u72_20 02CF                               u80_20 0018  
                             u48_21 028D                               u64_21 00C0  
                             u56_21 008E                               u72_21 02CE  
                             u80_21 0017                               u48_25 028A  
                             u65_20 00C8                               u57_20 0095  
                             u49_20 0046                               u73_20 02D6  
                             u81_20 001D                               u65_21 00C7  
                             u57_21 0094                               u49_21 0045  
                             u73_21 02D5                               u81_21 001C  
                             _TRISA 008C                               u66_20 00DF  
                             u58_20 009B                               u74_20 02A0  
                             u82_20 0025                               u66_21 00DE  
                             u58_21 009A                               u74_21 029F  
                             u82_21 0024                               u67_20 00E6  
                             u59_20 00A1                               u83_20 0029  
                             u67_21 00E5                               u59_21 00A0  
                             u83_21 0028                               u68_20 00EF  
                             u68_21 00EE                               u69_20 00FD  
                             u69_21 00FC                               u78_20 000A  
                             u78_21 0009                               u79_20 000E  
                             u79_21 000D                               _TXREG 019A  
                             _TXSTA 019E                    __end_of_TMR0_ISR 02A7  
                  __end_of_POWER_ON 032A             __end_of_PIN_MANAGER_IOC 02DA  
                             status 0003                               wtemp0 007E  
                      ?_RESET_POWER 0070                     __initialization 0030  
                      __end_of_main 0215                      ??_EUSART_Write 0070  
       ?_INTERRUPT_InterruptManager 0070                              ??_main 002C  
                     _LOCK_CNTL_LOW 032D                              _APFCON 011D  
                            _ANSELA 018C                              i1l1411 0319  
                            i1l1501 0058                              i1l1511 0071  
                            i1l1503 005E                              i1l1521 008F  
                            i1l1513 0077                              i1l1505 0063  
                            i1l1531 00AD                              i1l1523 0095  
                            i1l1515 007D                              i1l1507 0067  
                            i1l1611 02CA                              i1l1461 027D  
                            i1l1453 026F                              i1l1541 00C1  
                            i1l1533 00B3                              i1l1525 009B  
                            i1l1517 0083                              i1l1509 006D  
                            i1l1613 02CF                              i1l1621 0290  
                            i1l1463 0281                              i1l1551 00CE  
                            i1l1543 00C3                              i1l1535 00BB  
                            i1l1527 00A1                              i1l1519 0089  
                            i1l1615 02D0                              i1l1623 02A0  
                            i1l1561 00E6                              i1l1553 00D1  
                            i1l1529 00A7                              i1l1617 02D6  
                            i1l1465 030F                              i1l1625 02A3  
                            i1l1459 0273                              i1l1571 00F8  
                            i1l1563 00E9                              i1l1555 00DA  
                            i1l1547 00C9                              i1l1539 00BC  
                            i1l1491 0048                              i1l1619 028F  
                            i1l1581 0129                              i1l1573 00FD  
                            i1l1565 00EF                              i1l1557 00DF  
                            i1l1549 00CB                              i1l1493 0048  
                            i1l1469 0313                              i1l1567 00F2  
                            i1l1559 00E1                              i1l1495 004A  
                            i1l1487 0041                              i1l1671 000A  
                            i1l1585 012F                              i1l1569 00F5  
                            i1l1577 0100                              i1l1497 0050  
                            i1l1489 0046                              i1l1681 0025  
                            i1l1673 000E                              i1l1595 0132  
                            i1l1579 0123                              i1l1499 0056  
                            i1l1683 0029                              i1l1675 0011  
                            i1l1597 0148                              i1l1677 0018  
                            i1l1669 0006                              i1l1679 001D  
                            i1l1885 0108                              i1l1887 013A  
                            _OSCCON 0099                              _SPBRGH 019C  
                            _SPBRGL 019B     EUSART_Receive_ISR@data_received 0022  
                     ?_SELECTOR_LCM 0070                       ?_SELECTOR_WDT 0070  
                 __end_of_POWER_OFF 032D                   ??_lock_cntl_state 0028  
                  lock_open@seconds 002B                    ?_TMR0_Initialize 0070  
                    ?_LOCK_CNTL_LOW 0070               __end_of_TMR0_CallBack 0318  
                  ?_PIN_MANAGER_IOC 0070                   _SYSTEM_Initialize 02DA  
           __end_of__initialization 003E                  ?_SYSTEM_Initialize 0070  
                    ??_SELECTOR_LCM 0028                      ??_SELECTOR_WDT 0028  
                    __pcstackCOMMON 0070                 ??_SYSTEM_Initialize 0028  
                         ?_TMR0_ISR 0070                           ?_POWER_ON 0070  
                 _lcm_duration_time 002F                      _OPTION_REGbits 0095  
             TMR0_ISR@CountCallBack 0020                     Response_ACK@ack 0072  
         __end_of_SYSTEM_Initialize 02E7                          __pbssBANK0 0020  
              __end_of_EUSART_Write 0321                          __pnvCOMMON 007D  
                        __pmaintext 014D                      _LOCK_CNTL_HIGH 0330  
                        ??_TMR0_ISR 0071                          ??_POWER_ON 0028  
                        __pintentry 0004                             _BAUDCON 019F  
                   ??_LOCK_CNTL_LOW 0028                       ?_Response_ACK 0070  
                           _OSCSTAT 009A                             _OSCTUNE 0098  
            __end_of_LOCK_CNTL_HIGH 0333                             __ptext1 0244  
                           __ptext2 02F4                             __ptext3 02DA  
                           __ptext4 02E7                             __ptext5 02A7  
                           __ptext6 0321                             __ptext7 02BA  
                           __ptext8 0215                             __ptext9 02FD  
                    ??_Response_ACK 0071                             _command 007A  
             _OSCILLATOR_Initialize 0321                __end_of_SELECTOR_LCM 030F  
              __end_of_SELECTOR_WDT 0306            ??_PIN_MANAGER_Initialize 0028  
                         _IOCAFbits 0393                   __end_of_lock_open 026E  
                         _IOCANbits 0392                           _IOCAPbits 0391  
              end_of_initialization 003E                     _lock_cntl_state 02F4  
                 _EUSART_Initialize 02BA                     ?_LOCK_CNTL_HIGH 0070  
                ?_EUSART_Initialize 0070                           _RCSTAbits 019D  
               ??_EUSART_Initialize 0028                           _POWER_OFF 032A  
                         _PORTAbits 000C   EUSART_Receive_ISR@header_received 0023  
          EUSART_Receive_ISR@buffer 0077           __end_of_EUSART_Initialize 02CA  
                        ?_POWER_OFF 0070                        _EUSART_Write 0318  
            ?_OSCILLATOR_Initialize 0070                 start_initialization 0030  
           __end_of_lock_cntl_state 02FD                       Response_ACK@i 0073  
              __end_of_Response_ACK 028F                          lock_open@i 002A  
                       __pbssCOMMON 0078                           ___latbits 0000  
                     __pcstackBANK0 0028          __end_of_EUSART_Receive_ISR 014D  
                   _live_check_time 0030                           __pnvBANK0 002E  
                      _SELECTOR_LCM 0306                        _SELECTOR_WDT 02FD  
                     ??_RESET_POWER 0028              _PIN_MANAGER_Initialize 02A7  
                       ??_POWER_OFF 0028        ??_INTERRUPT_InterruptManager 0078  
                         _boot_time 0024               __end_of_LOCK_CNTL_LOW 0330  
                  ?_lock_cntl_state 0070                       _TMR0_CallBack 030F  
                         _lock_open 0244                    ??_LOCK_CNTL_HIGH 0028  
                 ??_TMR0_Initialize 0028                            _LCM_MODE 0027  
                          _PIE1bits 0091                            _PIR1bits 0011  
                          _TMR0_ISR 028F                            _POWER_ON 0327  
                 ??_PIN_MANAGER_IOC 0070                            _WDT_MODE 0026  
               __end_of_RESET_POWER 0244             EUSART_Receive_ISR@index 0079  
                    _lock_open_time 002E                      ?_TMR0_CallBack 0070  
                        ?_lock_open 0070                      _OPERATION_MODE 007D  
           ??_OSCILLATOR_Initialize 0028                  lock_open@iteration 0029  
                      _Response_ACK 026E                            __ptext10 0306  
                          __ptext11 0327                            __ptext20 026E  
                          __ptext12 032A                            __ptext21 0318  
                          __ptext13 032D                            __ptext14 0330  
                          __ptext16 028F                            __ptext17 030F  
                          __ptext18 02CA                            __ptext19 0041  
                      _tick_counter 0025                         _RESET_POWER 0215  
                          int$flags 007E  __end_of_INTERRUPT_InterruptManager 002F  
        _INTERRUPT_InterruptManager 0004                          _INTCONbits 000B  
                   ??_TMR0_CallBack 0070                         ??_lock_open 0028  
                          intlevel1 0000             ?_PIN_MANAGER_Initialize 0070  
                _EUSART_Receive_ISR 0041                          _OPTION_REG 0095  
               ?_EUSART_Receive_ISR 0070                     _TMR0_Initialize 02E7  
                EUSART_Write@txData 0070      __end_of_PIN_MANAGER_Initialize 02BA  
                   _PIN_MANAGER_IOC 02CA                ??_EUSART_Receive_ISR 0075  
